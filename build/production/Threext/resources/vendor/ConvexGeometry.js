THREE.ConvexGeometry=function(k){THREE.Geometry.call(this);var d=[[0,1,2],[0,2,1]];for(var g=3;g<k.length;g++){b(g)}function b(v){var s=k[v].clone();var r=s.length();s.x+=r*n();s.y+=r*n();s.z+=r*n();var i=[];for(var t=0;t<d.length;){var w=d[t];if(e(w,s)){for(var u=0;u<3;u++){var p=[w[u],w[(u+1)%3]];var j=true;for(var q=0;q<i.length;q++){if(o(i[q],p)){i[q]=i[i.length-1];i.pop();j=false;break}}if(j){i.push(p)}}d[t]=d[d.length-1];d.pop()}else{t++}}for(var q=0;q<i.length;q++){d.push([i[q][0],i[q][1],v])}}function e(r,q){var p=k[r[0]];var j=k[r[1]];var i=k[r[2]];var t=h(p,j,i);var s=t.dot(p);return t.dot(q)>=s}function h(q,p,j){var i=new THREE.Vector3();var r=new THREE.Vector3();i.subVectors(j,p);r.subVectors(q,p);i.cross(r);i.normalize();return i}function o(j,i){return j[0]===i[1]&&j[1]===i[0]}function n(){return(Math.random()-0.5)*2*0.000001}function m(j){var i=j.length();return new THREE.Vector2(j.x/i,j.y/i)}var a=0;var c=new Array(k.length);for(var g=0;g<d.length;g++){var l=d[g];for(var f=0;f<3;f++){if(c[l[f]]===undefined){c[l[f]]=a++;this.vertices.push(k[l[f]])}l[f]=c[l[f]]}}for(var g=0;g<d.length;g++){this.faces.push(new THREE.Face3(d[g][0],d[g][1],d[g][2]))}for(var g=0;g<this.faces.length;g++){var l=this.faces[g];this.faceVertexUvs[0].push([m(this.vertices[l.a]),m(this.vertices[l.b]),m(this.vertices[l.c])])}this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry.prototype.constructor=THREE.ConvexGeometry;