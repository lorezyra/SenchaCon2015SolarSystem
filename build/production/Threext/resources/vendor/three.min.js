"use strict";var THREE={REVISION:"70"};"object"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(b){return 0>b?-1:0<b?1:0});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(d,c){console.warn("THREE.Projector: .projectVector() is now vector.project().");d.project(c)};this.unprojectVector=function(d,c){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");d.unproject(c)};this.pickingRay=function(d,c){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(b){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(b)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(b){b instanceof THREE.Color?this.copy(b):"number"===typeof b?this.setHex(b):"string"===typeof b&&this.setStyle(b);return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSL:function(f,e,h){if(0===e){this.r=this.g=this.b=h}else{var g=function(i,d,j){0>j&&(j+=1);1<j&&(j-=1);return j<1/6?i+6*(d-i)*j:0.5>j?d:j<2/3?i+6*(d-i)*(2/3-j):i};e=0.5>=h?h*(1+e):h+e-h*e;h=2*h-e;this.r=g(h,e,f+1/3);this.g=g(h,e,f);this.b=g(h,e,f-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(b)){return b=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(r){r=r||{h:0,s:0,l:0};var q=this.r,p=this.g,o=this.b,n=Math.max(q,p,o),m=Math.min(q,p,o),l,j=(m+n)/2;if(m===n){m=l=0}else{var i=n-m,m=0.5>=j?i/(n+m):i/(2-n-m);switch(n){case q:l=(p-o)/i+(p<o?6:0);break;case p:l=(o-q)/i+2;break;case o:l=(q-p)/i+4}l/=6}r.h=l;r.s=m;r.l=j;return r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(f,e,h){var g=this.getHSL();g.h+=f;g.s+=e;g.l+=h;this.setHSL(g.h,g.s,g.l);return this},add:function(b){this.r+=b.r;this.g+=b.g;this.b+=b.b;return this},addColors:function(d,c){this.r=d.r+c.r;this.g=d.g+c.g;this.b=d.b+c.b;return this},addScalar:function(b){this.r+=b;this.g+=b;this.b+=b;return this},multiply:function(b){this.r*=b.r;this.g*=b.g;this.b*=b.b;return this},multiplyScalar:function(b){this.r*=b;this.g*=b;this.b*=b;return this},lerp:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},equals:function(b){return b.r===this.r&&b.g===this.g&&b.b===this.b},fromArray:function(b){this.r=b[0];this.g=b[1];this.b=b[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get xfunction(){return this._x},set xfunction(b){this._x=b;this.onChangeCallback()},get yfunction(){return this._y},set yfunction(b){this._y=b;this.onChangeCallback()},get zfunction(){return this._z},set zfunction(b){this._z=b;this.onChangeCallback()},get wfunction(){return this._w},set wfunction(b){this._w=b;this.onChangeCallback()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._w=g;this.onChangeCallback();return this},copy:function(b){this._x=b.x;this._y=b.y;this._z=b.z;this._w=b.w;this.onChangeCallback();return this},setFromEuler:function(j,i){if(!1===j instanceof THREE.Euler){throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var p=Math.cos(j._x/2),o=Math.cos(j._y/2),n=Math.cos(j._z/2),m=Math.sin(j._x/2),l=Math.sin(j._y/2),k=Math.sin(j._z/2);"XYZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"YXZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"ZXY"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"ZYX"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"YZX"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n-m*l*k):"XZY"===j.order&&(this._x=m*o*n-p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n+m*l*k);if(!1!==i){this.onChangeCallback()}return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this._x=f.x*g;this._y=f.y*g;this._z=f.z*g;this._w=Math.cos(h);this.onChangeCallback();return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0];t=s[4];var q=s[8],p=s[1],o=s[5],m=s[9],l=s[2],j=s[6],s=s[10],i=r+o+s;0<i?(r=0.5/Math.sqrt(i+1),this._w=0.25/r,this._x=(j-m)*r,this._y=(q-l)*r,this._z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this._w=(j-m)/r,this._x=0.25*r,this._y=(t+p)/r,this._z=(q+l)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this._w=(q-l)/r,this._x=(t+p)/r,this._y=0.25*r,this._z=(m+j)/r):(r=2*Math.sqrt(1+s-r-o),this._w=(p-t)/r,this._x=(q+l)/r,this._y=(m+j)/r,this._z=0.25*r);this.onChangeCallback();return this},setFromUnitVectors:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector3);c=b.dot(a)+1;0.000001>c?(c=0,Math.abs(b.x)>Math.abs(b.z)?d.set(-b.y,b.x,0):d.set(0,-b.z,b.y)):d.crossVectors(b,a);this._x=d.x;this._y=d.y;this._z=d.z;this._w=c;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(b){return this._x*b._x+this._y*b._y+this._z*b._z+this._w*b._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var b=this.length();0===b?(this._z=this._y=this._x=0,this._w=1):(b=1/b,this._x*=b,this._y*=b,this._z*=b,this._w*=b);this.onChangeCallback();return this},multiply:function(d,c){return void 0!==c?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,c)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(t,s){var r=t._x,q=t._y,p=t._z,o=t._w,m=s._x,l=s._y,j=s._z,i=s._w;this._x=r*i+o*m+q*j-p*l;this._y=q*i+o*l+p*m-r*j;this._z=p*i+o*j+r*l-q*m;this._w=o*i-r*m-q*l-p*j;this.onChangeCallback();return this},multiplyVector3:function(b){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return b.applyQuaternion(this)},slerp:function(r,q){if(0===q){return this}if(1===q){return this.copy(r)}var p=this._x,o=this._y,n=this._z,m=this._w,l=m*r._w+p*r._x+o*r._y+n*r._z;0>l?(this._w=-r._w,this._x=-r._x,this._y=-r._y,this._z=-r._z,l=-l):this.copy(r);if(1<=l){return this._w=m,this._x=p,this._y=o,this._z=n,this}var j=Math.acos(l),i=Math.sqrt(1-l*l);if(0.001>Math.abs(i)){return this._w=0.5*(m+this._w),this._x=0.5*(p+this._x),this._y=0.5*(o+this._y),this._z=0.5*(n+this._z),this}l=Math.sin((1-q)*j)/i;j=Math.sin(q*j)/i;this._w=m*l+this._w*j;this._x=p*l+this._x*j;this._y=o*l+this._y*j;this._z=n*l+this._z*j;this.onChangeCallback();return this},equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._w===this._w},fromArray:function(d,c){void 0===c&&(c=0);this._x=d[c];this._y=d[c+1];this._z=d[c+2];this._w=d[c+3];this.onChangeCallback();return this},toArray:function(d,c){void 0===d&&(d=[]);void 0===c&&(c=0);d[c]=this._x;d[c+1]=this._y;d[c+2]=this._z;d[c+3]=this._w;return d},onChange:function(b){this.onChangeCallback=b;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerp(e,g)};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},add:function(d,c){if(void 0!==c){return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},sub:function(d,c){if(void 0!==c){return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiply:function(b){this.x*=b.x;this.y*=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divide:function(b){this.x/=b.x;this.y/=b.y;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b):this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector2,c=new THREE.Vector2);d.set(b,b);c.set(a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x;d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},fromArray:function(d,c){void 0===c&&(c=0);this.x=d[c];this.y=d[c+1];return this},toArray:function(d,c){void 0===d&&(d=[]);void 0===c&&(c=0);d[c]=this.x;d[c+1]=this.y;return d},fromAttribute:function(e,d,f){void 0===f&&(f=0);d=d*e.itemSize+f;this.x=e.array[d];this.y=e.array[d+1];return this},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){if(void 0!==c){return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(d,c){if(void 0!==c){return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(d,c){if(void 0!==c){return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,c)}this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyEuler:function(){var b;return function(a){!1===a instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromEuler(a));return this}}(),applyAxisAngle:function(){var b;return function(a,d){void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromAxisAngle(a,d));return this}}(),applyMatrix3:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[3]*h+f[6]*g;this.y=f[1]*e+f[4]*h+f[7]*g;this.z=f[2]*e+f[5]*h+f[8]*g;return this},applyMatrix4:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g+f[12];this.y=f[1]*e+f[5]*h+f[9]*g+f[13];this.z=f[2]*e+f[6]*h+f[10]*g+f[14];return this},applyProjection:function(g){var f=this.x,j=this.y,i=this.z;g=g.elements;var h=1/(g[3]*f+g[7]*j+g[11]*i+g[15]);this.x=(g[0]*f+g[4]*j+g[8]*i+g[12])*h;this.y=(g[1]*f+g[5]*j+g[9]*i+g[13])*h;this.z=(g[2]*f+g[6]*j+g[10]*i+g[14])*h;return this},applyQuaternion:function(t){var s=this.x,r=this.y,q=this.z,p=t.x,o=t.y,m=t.z;t=t.w;var l=t*s+o*q-m*r,j=t*r+m*s-p*q,i=t*q+p*r-o*s,s=-p*s-o*r-m*q;this.x=l*t+s*-p+j*-m-i*-o;this.y=j*t+s*-o+i*-p-l*-m;this.z=i*t+s*-m+l*-o-j*-p;return this},project:function(){var b;return function(a){void 0===b&&(b=new THREE.Matrix4);b.multiplyMatrices(a.projectionMatrix,b.getInverse(a.matrixWorld));return this.applyProjection(b)}}(),unproject:function(){var b;return function(a){void 0===b&&(b=new THREE.Matrix4);b.multiplyMatrices(a.matrixWorld,b.getInverse(a.projectionMatrix));return this.applyProjection(b)}}(),transformDirection:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g;this.y=f[1]*e+f[5]*h+f[9]*g;this.z=f[2]*e+f[6]*h+f[10]*g;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b):this.z=this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector3,c=new THREE.Vector3);d.set(b,b,b);c.set(a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(g,f){if(void 0!==f){return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(g,f)}var j=this.x,i=this.y,h=this.z;this.x=i*g.z-h*g.y;this.y=h*g.x-j*g.z;this.z=j*g.y-i*g.x;return this},crossVectors:function(j,i){var p=j.x,o=j.y,n=j.z,m=i.x,l=i.y,k=i.z;this.x=o*k-n*l;this.y=n*m-p*k;this.z=p*l-o*m;return this},projectOnVector:function(){var d,c;return function(a){void 0===d&&(d=new THREE.Vector3);d.copy(a).normalize();c=this.dot(d);return this.copy(d).multiplyScalar(c)}}(),projectOnPlane:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);b.copy(this).projectOnVector(a);return this.sub(b)}}(),reflect:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);return this.sub(b.copy(a).multiplyScalar(2*this.dot(a)))}}(),angleTo:function(b){b=this.dot(b)/(this.length()*b.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y;e=this.z-e.z;return d*d+f*f+e*e},setEulerFromRotationMatrix:function(d,c){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(d,c){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(b){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(b)},getScaleFromMatrix:function(b){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(b)},getColumnFromMatrix:function(d,c){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(d,c)},setFromMatrixPosition:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},setFromMatrixScale:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},setFromMatrixColumn:function(f,e){var h=4*f,g=e.elements;this.x=g[h];this.y=g[h+1];this.z=g[h+2];return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},fromArray:function(d,c){void 0===c&&(c=0);this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},toArray:function(d,c){void 0===d&&(d=[]);void 0===c&&(c=0);d[c]=this.x;d[c+1]=this.y;d[c+2]=this.z;return d},fromAttribute:function(e,d,f){void 0===f&&(f=0);d=d*e.itemSize+f;this.x=e.array[d];this.y=e.array[d+1];this.z=e.array[d+2];return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},add:function(d,c){if(void 0!==c){return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(d,c){if(void 0!==c){return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},applyMatrix4:function(g){var f=this.x,j=this.y,i=this.z,h=this.w;g=g.elements;this.x=g[0]*f+g[4]*j+g[8]*i+g[12]*h;this.y=g[1]*f+g[5]*j+g[9]*i+g[13]*h;this.z=g[2]*f+g[6]*j+g[10]*i+g[14]*h;this.w=g[3]*f+g[7]*j+g[11]*i+g[15]*h;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q;t=t.elements;var p=t[0];q=t[4];var o=t[8],m=t[1],l=t[5],j=t[9];r=t[2];s=t[6];var i=t[10];if(0.01>Math.abs(q-m)&&0.01>Math.abs(o-r)&&0.01>Math.abs(j-s)){if(0.1>Math.abs(q+m)&&0.1>Math.abs(o+r)&&0.1>Math.abs(j+s)&&0.1>Math.abs(p+l+i-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;l=(l+1)/2;i=(i+1)/2;q=(q+m)/4;o=(o+r)/4;j=(j+s)/4;p>l&&p>i?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):l>i?0.01>l?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(l),s=q/r,q=j/r):0.01>i?(r=s=0.707106781,q=0):(q=Math.sqrt(i),s=o/q,r=j/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-j)*(s-j)+(o-r)*(o-r)+(m-q)*(m-q));0.001>Math.abs(t)&&(t=1);this.x=(s-j)/t;this.y=(o-r)/t;this.z=(m-q)/t;this.w=Math.acos((p+l+i-1)/2);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector4,c=new THREE.Vector4);d.set(b,b,b,b);c.set(a,a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(d,c){void 0===c&&(c=0);this.x=d[c];this.y=d[c+1];this.z=d[c+2];this.w=d[c+3];return this},toArray:function(d,c){void 0===d&&(d=[]);void 0===c&&(c=0);d[c]=this.x;d[c+1]=this.y;d[c+2]=this.z;d[c+3]=this.w;return d},fromAttribute:function(e,d,f){void 0===f&&(f=0);d=d*e.itemSize+f;this.x=e.array[d];this.y=e.array[d+1];this.z=e.array[d+2];this.w=e.array[d+3];return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._order=g||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get xfunction(){return this._x},set xfunction(b){this._x=b;this.onChangeCallback()},get yfunction(){return this._y},set yfunction(b){this._y=b;this.onChangeCallback()},get zfunction(){return this._z},set zfunction(b){this._z=b;this.onChangeCallback()},get orderfunction(){return this._order},set orderfunction(b){this._order=b;this.onChangeCallback()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._order=g||this._order;this.onChangeCallback();return this},copy:function(b){this._x=b._x;this._y=b._y;this._z=b._z;this._order=b._order;this.onChangeCallback();return this},setFromRotationMatrix:function(B,A,v){var u=THREE.Math.clamp,t=B.elements;B=t[0];var s=t[4],r=t[8],o=t[1],m=t[5],l=t[9],j=t[2],i=t[6],t=t[10];A=A||this._order;"XYZ"===A?(this._y=Math.asin(u(r,-1,1)),0.99999>Math.abs(r)?(this._x=Math.atan2(-l,t),this._z=Math.atan2(-s,B)):(this._x=Math.atan2(i,m),this._z=0)):"YXZ"===A?(this._x=Math.asin(-u(l,-1,1)),0.99999>Math.abs(l)?(this._y=Math.atan2(r,t),this._z=Math.atan2(o,m)):(this._y=Math.atan2(-j,B),this._z=0)):"ZXY"===A?(this._x=Math.asin(u(i,-1,1)),0.99999>Math.abs(i)?(this._y=Math.atan2(-j,t),this._z=Math.atan2(-s,m)):(this._y=0,this._z=Math.atan2(o,B))):"ZYX"===A?(this._y=Math.asin(-u(j,-1,1)),0.99999>Math.abs(j)?(this._x=Math.atan2(i,t),this._z=Math.atan2(o,B)):(this._x=0,this._z=Math.atan2(-s,m))):"YZX"===A?(this._z=Math.asin(u(o,-1,1)),0.99999>Math.abs(o)?(this._x=Math.atan2(-l,m),this._y=Math.atan2(-j,B)):(this._x=0,this._y=Math.atan2(r,t))):"XZY"===A?(this._z=Math.asin(-u(s,-1,1)),0.99999>Math.abs(s)?(this._x=Math.atan2(i,m),this._y=Math.atan2(r,B)):(this._x=Math.atan2(-l,t),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+A);this._order=A;if(!1!==v){this.onChangeCallback()}return this},setFromQuaternion:function(){var b;return function(a,f,e){void 0===b&&(b=new THREE.Matrix4);b.makeRotationFromQuaternion(a);this.setFromRotationMatrix(b,f,e);return this}}(),setFromVector3:function(d,c){return this.set(d.x,d.y,d.z,c||this._order)},reorder:function(){var b=new THREE.Quaternion;return function(a){b.setFromEuler(this);this.setFromQuaternion(b,a)}}(),equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._order===this._order},fromArray:function(b){this._x=b[0];this._y=b[1];this._z=b[2];void 0!==b[3]&&(this._order=b[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},toVector3:function(b){return b?b.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(b){this.onChangeCallback=b;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(d,c){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==c?c:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,c){this.start.copy(d);this.end.copy(c);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(b){return(b||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){return(b||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,d){var f=d||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b){d.subVectors(f,this.start);c.subVectors(this.end,this.start);var a=c.dot(c),a=c.dot(d)/a;b&&(a=THREE.Math.clamp(a,0,1));return a}}(),closestPointToPoint:function(e,d,f){e=this.closestPointToPointParameter(e,d);f=f||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,c){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(e){this.makeEmpty();for(var d=0,f=e.length;d<f;d++){this.expandByPoint(e[d])}return this},setFromCenterAndSize:function(){var b=new THREE.Vector2;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector2).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector2;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,c){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(e){this.makeEmpty();for(var d=0,f=e.length;d<f;d++){this.expandByPoint(e[d])}return this},setFromCenterAndSize:function(){var b=new THREE.Vector3;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),setFromObject:function(){var b=new THREE.Vector3;return function(a){var d=this;a.updateMatrixWorld(!0);this.makeEmpty();a.traverse(function(c){var j=c.geometry;if(void 0!==j){if(j instanceof THREE.Geometry){for(var i=j.vertices,j=0,h=i.length;j<h;j++){b.copy(i[j]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b)}}else{if(j instanceof THREE.BufferGeometry&&void 0!==j.attributes.position){for(i=j.attributes.position.array,j=0,h=i.length;j<h;j+=3){b.set(i[j],i[j+1],i[j+2]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b)}}}}});return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y||b.z<this.min.z||b.z>this.max.z?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector3).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y),(d.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),getBoundingSphere:function(){var b=new THREE.Vector3;return function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(b).length();return a}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},applyMatrix4:function(){var b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(a){b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.makeEmpty();this.setFromPoints(b);return this}}(),translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,s,r,q,p,o,m,l,j){var i=this.elements;i[0]=t;i[3]=s;i[6]=r;i[1]=q;i[4]=p;i[7]=o;i[2]=m;i[5]=l;i[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(b){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return b.applyMatrix3(this)},multiplyVector3Array:function(b){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var b=new THREE.Vector3;return function(a,h,g){void 0===h&&(h=0);void 0===g&&(g=a.length);for(var f=0;f<g;f+=3,h+=3){b.x=a[h],b.y=a[h+1],b.z=a[h+2],b.applyMatrix3(this),a[h]=b.x,a[h+1]=b.y,a[h+2]=b.z}return a}}(),multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[3]*=d;c[6]*=d;c[1]*=d;c[4]*=d;c[7]*=d;c[2]*=d;c[5]*=d;c[8]*=d;return this},determinant:function(){var r=this.elements,q=r[0],p=r[1],o=r[2],n=r[3],m=r[4],l=r[5],j=r[6],i=r[7],r=r[8];return q*m*r-q*l*i-p*n*r+p*l*j+o*n*i-o*m*j},getInverse:function(f,e){var h=f.elements,g=this.elements;g[0]=h[10]*h[5]-h[6]*h[9];g[1]=-h[10]*h[1]+h[2]*h[9];g[2]=h[6]*h[1]-h[2]*h[5];g[3]=-h[10]*h[4]+h[6]*h[8];g[4]=h[10]*h[0]-h[2]*h[8];g[5]=-h[6]*h[0]+h[2]*h[4];g[6]=h[9]*h[4]-h[5]*h[8];g[7]=-h[9]*h[0]+h[1]*h[8];g[8]=h[5]*h[0]-h[1]*h[4];h=h[0]*g[0]+h[1]*g[3]+h[2]*g[6];if(0===h){if(e){throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/h);return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];return e},getNormalMatrix:function(b){this.getInverse(b).transpose();return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(I,H,G,F,E,D,C,B,A,o,l,j,v,K,L,i){var J=this.elements;J[0]=I;J[4]=H;J[8]=G;J[12]=F;J[1]=E;J[5]=D;J[9]=C;J[13]=B;J[2]=A;J[6]=o;J[10]=l;J[14]=j;J[3]=v;J[7]=K;J[11]=L;J[15]=i;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.elements.set(b.elements);return this},extractPosition:function(b){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(b)},copyPosition:function(d){var c=this.elements;d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractBasis:function(f,e,h){var g=this.elements;f.set(g[0],g[1],g[2]);e.set(g[4],g[5],g[6]);h.set(g[8],g[9],g[10]);return this},makeBasis:function(e,d,f){this.set(e.x,d.x,f.x,0,e.y,d.y,f.y,0,e.z,d.z,f.z,0,0,0,0,1);return this},extractRotation:function(){var b=new THREE.Vector3;return function(a){var j=this.elements;a=a.elements;var i=1/b.set(a[0],a[1],a[2]).length(),h=1/b.set(a[4],a[5],a[6]).length(),g=1/b.set(a[8],a[9],a[10]).length();j[0]=a[0]*i;j[1]=a[1]*i;j[2]=a[2]*i;j[4]=a[4]*h;j[5]=a[5]*h;j[6]=a[6]*h;j[8]=a[8]*g;j[9]=a[9]*g;j[10]=a[10]*g;return this}}(),makeRotationFromEuler:function(v){!1===v instanceof THREE.Euler&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var u=this.elements,t=v.x,s=v.y,r=v.z,q=Math.cos(t),t=Math.sin(t),o=Math.cos(s),s=Math.sin(s),m=Math.cos(r),r=Math.sin(r);if("XYZ"===v.order){v=q*m;var l=q*r,j=t*m,i=t*r;u[0]=o*m;u[4]=-o*r;u[8]=s;u[1]=l+j*s;u[5]=v-i*s;u[9]=-t*o;u[2]=i-v*s;u[6]=j+l*s;u[10]=q*o}else{"YXZ"===v.order?(v=o*m,l=o*r,j=s*m,i=s*r,u[0]=v+i*t,u[4]=j*t-l,u[8]=q*s,u[1]=q*r,u[5]=q*m,u[9]=-t,u[2]=l*t-j,u[6]=i+v*t,u[10]=q*o):"ZXY"===v.order?(v=o*m,l=o*r,j=s*m,i=s*r,u[0]=v-i*t,u[4]=-q*r,u[8]=j+l*t,u[1]=l+j*t,u[5]=q*m,u[9]=i-v*t,u[2]=-q*s,u[6]=t,u[10]=q*o):"ZYX"===v.order?(v=q*m,l=q*r,j=t*m,i=t*r,u[0]=o*m,u[4]=j*s-l,u[8]=v*s+i,u[1]=o*r,u[5]=i*s+v,u[9]=l*s-j,u[2]=-s,u[6]=t*o,u[10]=q*o):"YZX"===v.order?(v=q*o,l=q*s,j=t*o,i=t*s,u[0]=o*m,u[4]=i-v*r,u[8]=j*r+l,u[1]=r,u[5]=q*m,u[9]=-t*m,u[2]=-s*m,u[6]=l*r+j,u[10]=v-i*r):"XZY"===v.order&&(v=q*o,l=q*s,j=t*o,i=t*s,u[0]=o*m,u[4]=-r,u[8]=s*m,u[1]=v*r+i,u[5]=q*m,u[9]=l*r-j,u[2]=j*r-l,u[6]=t*m,u[10]=i*r+v)}u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},setRotationFromQuaternion:function(b){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(b)},makeRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,o=t+t,m=s+s,l=r+r;v=t*o;var j=t*m,t=t*l,i=s*m,s=s*l,r=r*l,o=q*o,m=q*m,q=q*l;u[0]=1-(i+r);u[4]=j-q;u[8]=t+m;u[1]=j+q;u[5]=1-(v+r);u[9]=s-o;u[2]=t-m;u[6]=s+o;u[10]=1-(v+i);u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(h,c,b){var a=this.elements;f.subVectors(h,c).normalize();0===f.length()&&(f.z=1);e.crossVectors(b,f).normalize();0===e.length()&&(f.x+=0.0001,e.crossVectors(b,f).normalize());d.crossVectors(f,e);a[0]=e.x;a[4]=d.x;a[8]=f.x;a[1]=e.y;a[5]=d.y;a[9]=f.y;a[2]=e.z;a[6]=d.z;a[10]=f.z;return this}}(),multiply:function(d,c){return void 0!==c?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,c)):this.multiplyMatrices(this,d)},multiplyMatrices:function(ar,aq){var ap=ar.elements,ao=aq.elements,an=this.elements,am=ap[0],al=ap[4],ak=ap[8],aj=ap[12],ah=ap[1],ag=ap[5],ae=ap[9],ai=ap[13],Z=ap[2],ab=ap[6],ad=ap[10],X=ap[14],V=ap[3],O=ap[7],ac=ap[11],ap=ap[15],P=ao[0],W=ao[4],J=ao[8],S=ao[12],Y=ao[1],R=ao[5],aa=ao[9],af=ao[13],i=ao[2],B=ao[6],I=ao[10],H=ao[14],o=ao[3],j=ao[7],l=ao[11],ao=ao[15];an[0]=am*P+al*Y+ak*i+aj*o;an[4]=am*W+al*R+ak*B+aj*j;an[8]=am*J+al*aa+ak*I+aj*l;an[12]=am*S+al*af+ak*H+aj*ao;an[1]=ah*P+ag*Y+ae*i+ai*o;an[5]=ah*W+ag*R+ae*B+ai*j;an[9]=ah*J+ag*aa+ae*I+ai*l;an[13]=ah*S+ag*af+ae*H+ai*ao;an[2]=Z*P+ab*Y+ad*i+X*o;an[6]=Z*W+ab*R+ad*B+X*j;an[10]=Z*J+ab*aa+ad*I+X*l;an[14]=Z*S+ab*af+ad*H+X*ao;an[3]=V*P+O*Y+ac*i+ap*o;an[7]=V*W+O*R+ac*B+ap*j;an[11]=V*J+O*aa+ac*I+ap*l;an[15]=V*S+O*af+ac*H+ap*ao;return this},multiplyToArray:function(f,e,h){var g=this.elements;this.multiplyMatrices(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(b){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return b.applyProjection(this)},multiplyVector4:function(b){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},multiplyVector3Array:function(b){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var b=new THREE.Vector3;return function(a,h,g){void 0===h&&(h=0);void 0===g&&(g=a.length);for(var f=0;f<g;f+=3,h+=3){b.x=a[h],b.y=a[h+1],b.z=a[h+2],b.applyMatrix4(this),a[h]=b.x,a[h+1]=b.y,a[h+2]=b.z}return a}}(),rotateAxis:function(b){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");b.transformDirection(this)},crossVector:function(b){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},determinant:function(){var D=this.elements,C=D[0],B=D[4],A=D[8],v=D[12],u=D[1],t=D[5],s=D[9],r=D[13],l=D[2],j=D[6],i=D[10],o=D[14];return D[3]*(+v*s*j-A*r*j-v*t*i+B*r*i+A*t*o-B*s*o)+D[7]*(+C*s*o-C*r*i+v*u*i-A*u*o+A*r*l-v*s*l)+D[11]*(+C*r*j-C*t*o-v*u*j+B*u*o+v*t*l-B*r*l)+D[15]*(-A*t*l-C*s*j+C*t*i+A*u*j-B*u*i+B*s*l)},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getInverse:function(O,N){var M=this.elements,L=O.elements,K=L[0],J=L[4],I=L[8],H=L[12],G=L[1],E=L[5],D=L[9],C=L[13],F=L[2],o=L[6],A=L[10],B=L[14],l=L[3],j=L[7],i=L[11],L=L[15];M[0]=D*B*j-C*A*j+C*o*i-E*B*i-D*o*L+E*A*L;M[4]=H*A*j-I*B*j-H*o*i+J*B*i+I*o*L-J*A*L;M[8]=I*C*j-H*D*j+H*E*i-J*C*i-I*E*L+J*D*L;M[12]=H*D*o-I*C*o-H*E*A+J*C*A+I*E*B-J*D*B;M[1]=C*A*l-D*B*l-C*F*i+G*B*i+D*F*L-G*A*L;M[5]=I*B*l-H*A*l+H*F*i-K*B*i-I*F*L+K*A*L;M[9]=H*D*l-I*C*l-H*G*i+K*C*i+I*G*L-K*D*L;M[13]=I*C*F-H*D*F+H*G*A-K*C*A-I*G*B+K*D*B;M[2]=E*B*l-C*o*l+C*F*j-G*B*j-E*F*L+G*o*L;M[6]=H*o*l-J*B*l-H*F*j+K*B*j+J*F*L-K*o*L;M[10]=J*C*l-H*E*l+H*G*j-K*C*j-J*G*L+K*E*L;M[14]=H*E*F-J*C*F-H*G*o+K*C*o+J*G*B-K*E*B;M[3]=D*o*l-E*A*l-D*F*j+G*A*j+E*F*i-G*o*i;M[7]=J*A*l-I*o*l+I*F*j-K*A*j-J*F*i+K*o*i;M[11]=I*E*l-J*D*l-I*G*j+K*D*j+J*G*i-K*E*i;M[15]=J*D*F-I*E*F+I*G*o-K*D*o-J*G*A+K*E*A;M=K*M[0]+G*M[4]+F*M[8]+l*M[12];if(0==M){if(N){throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/M);return this},translate:function(b){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(b){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(b){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(b){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(d,c){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(f){var e=this.elements,h=f.x,g=f.y;f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(e,d,f){this.set(1,0,0,e,0,1,0,d,0,0,1,f,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,m=t.y,l=t.z,j=p*o,i=p*m;this.set(j*o+r,j*m-q*l,j*l+q*m,0,j*m+q*l,i*m+r,i*l-q*o,0,j*l-q*m,i*l+q*o,p*l*l+r,0,0,0,0,1);return this},makeScale:function(e,d,f){this.set(e,0,0,0,0,d,0,0,0,0,f,0,0,0,0,1);return this},compose:function(e,d,f){this.makeRotationFromQuaternion(d);this.scale(f);this.setPosition(e);return this},decompose:function(){var d=new THREE.Vector3,c=new THREE.Matrix4;return function(p,m,l){var j=this.elements,i=d.set(j[0],j[1],j[2]).length(),b=d.set(j[4],j[5],j[6]).length(),a=d.set(j[8],j[9],j[10]).length();0>this.determinant()&&(i=-i);p.x=j[12];p.y=j[13];p.z=j[14];c.elements.set(this.elements);p=1/i;var j=1/b,o=1/a;c.elements[0]*=p;c.elements[1]*=p;c.elements[2]*=p;c.elements[4]*=j;c.elements[5]*=j;c.elements[6]*=j;c.elements[8]*=o;c.elements[9]*=o;c.elements[10]*=o;m.setFromRotationMatrix(c);l.x=i;l.y=b;l.z=a;return this}}(),makeFrustum:function(i,h,n,m,l,k){var j=this.elements;j[0]=2*l/(h-i);j[4]=0;j[8]=(h+i)/(h-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){g=j*Math.tan(THREE.Math.degToRad(0.5*g));var h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var m=this.elements,l=s-t,j=r-q,i=o-p;m[0]=2/l;m[4]=0;m[8]=0;m[12]=-((s+t)/l);m[1]=0;m[5]=2/j;m[9]=0;m[13]=-((r+q)/j);m[2]=0;m[6]=0;m[10]=-2/i;m[14]=-((o+p)/i);m[3]=0;m[7]=0;m[11]=0;m[15]=1;return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};THREE.Ray=function(d,c){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==c?c:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var b=new THREE.Vector3;return function(a){this.origin.copy(this.at(a,b));return this}}(),closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.subVectors(f,this.origin);var g=h.dot(this.direction);return 0>g?h.copy(this.origin):h.copy(this.direction).multiplyScalar(g).add(this.origin)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){var d=b.subVectors(a,this.origin).dot(this.direction);if(0>d){return this.origin.distanceTo(a)}b.copy(this.direction).multiplyScalar(d).add(this.origin);return b.distanceTo(a)}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(u,s,r,o){e.copy(u).add(s).multiplyScalar(0.5);d.copy(s).sub(u).normalize();f.copy(this.origin).sub(e);var l=0.5*u.distanceTo(s),j=-this.direction.dot(d),c=f.dot(this.direction),b=-f.dot(d),a=f.lengthSq(),i=Math.abs(1-j*j),v;0<i?(u=j*b-c,s=j*c-b,v=l*i,0<=u?s>=-v?s<=v?(l=1/i,u*=l,s*=l,j=u*(u+j*s+2*c)+s*(j*u+s+2*b)+a):(s=l,u=Math.max(0,-(j*s+c)),j=-u*u+s*(s+2*b)+a):(s=-l,u=Math.max(0,-(j*s+c)),j=-u*u+s*(s+2*b)+a):s<=-v?(u=Math.max(0,-(-j*l+c)),s=0<u?-l:Math.min(Math.max(-l,-b),l),j=-u*u+s*(s+2*b)+a):s<=v?(u=0,s=Math.min(Math.max(-l,-b),l),j=s*(s+2*b)+a):(u=Math.max(0,-(j*l+c)),s=0<u?l:Math.min(Math.max(-l,-b),l),j=-u*u+s*(s+2*b)+a)):(s=0<j?-l:l,u=Math.max(0,-(j*s+c)),j=-u*u+s*(s+2*b)+a);r&&r.copy(this.direction).multiplyScalar(u).add(this.origin);o&&o.copy(d).multiplyScalar(s).add(e);return j}}(),isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},intersectSphere:function(){var b=new THREE.Vector3;return function(a,j){b.subVectors(a.center,this.origin);var i=b.dot(this.direction),h=b.dot(b)-i*i,g=a.radius*a.radius;if(h>g){return null}g=Math.sqrt(g-h);h=i-g;i+=g;return 0>h&&0>i?null:0>h?this.at(i,j):this.at(h,j)}}(),isIntersectionPlane:function(d){var c=d.distanceToPoint(this.origin);return 0===c||0>d.normal.dot(this.direction)*c?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){return 0==d.distanceToPoint(this.origin)?0:null}d=-(this.origin.dot(d.normal)+d.constant)/c;return 0<=d?d:null},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return null===f?null:this.at(f,d)},isIntersectionBox:function(){var b=new THREE.Vector3;return function(a){return null!==this.intersectBox(a,b)}}(),intersectBox:function(j,i){var p,o,n,m,l;o=1/this.direction.x;m=1/this.direction.y;l=1/this.direction.z;var k=this.origin;0<=o?(p=(j.min.x-k.x)*o,o*=j.max.x-k.x):(p=(j.max.x-k.x)*o,o*=j.min.x-k.x);0<=m?(n=(j.min.y-k.y)*m,m*=j.max.y-k.y):(n=(j.max.y-k.y)*m,m*=j.min.y-k.y);if(p>m||n>o){return null}if(n>p||p!==p){p=n}if(m<o||o!==o){o=m}0<=l?(n=(j.min.z-k.z)*l,l*=j.max.z-k.z):(n=(j.max.z-k.z)*l,l*=j.min.z-k.z);if(p>l||n>o){return null}if(n>p||p!==p){p=n}if(l<o||o!==o){o=l}return 0>o?null:this.at(0<=p?p:o,i)},intersectTriangle:function(){var f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,g=new THREE.Vector3;return function(i,d,c,b,a){e.subVectors(d,i);h.subVectors(c,i);g.crossVectors(e,h);d=this.direction.dot(g);if(0<d){if(b){return null}b=1}else{if(0>d){b=-1,d=-d}else{return null}}f.subVectors(this.origin,i);i=b*this.direction.dot(h.crossVectors(f,h));if(0>i){return null}c=b*this.direction.dot(e.cross(f));if(0>c||i+c>d){return null}i=-b*f.dot(g);return 0>i?null:this.at(i/d,a)}}(),applyMatrix4:function(b){this.direction.add(this.origin).applyMatrix4(b);this.origin.applyMatrix4(b);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,c){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==c?c:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromPoints:function(){var b=new THREE.Box3;return function(a,l){var k=this.center;void 0!==l?k.copy(l):b.setFromPoints(a).center(k);for(var j=0,i=0,h=a.length;i<h;i++){j=Math.max(j,k.distanceToSquared(a[i]))}this.radius=Math.sqrt(j);return this}}(),copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var c=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=c*c},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.sub(this.center).normalize(),g.multiplyScalar(this.radius).add(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(b){this.center.applyMatrix4(b);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.add(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(h,g,l,k,j,i){this.planes=[void 0!==h?h:new THREE.Plane,void 0!==g?g:new THREE.Plane,void 0!==l?l:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==j?j:new THREE.Plane,void 0!==i?i:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(i,h,n,m,l,k){var j=this.planes;j[0].copy(i);j[1].copy(h);j[2].copy(n);j[3].copy(m);j[4].copy(l);j[5].copy(k);return this},copy:function(e){for(var d=this.planes,f=0;6>f;f++){d[f].copy(e.planes[f])}return this},setFromMatrix:function(I){var H=this.planes,G=I.elements;I=G[0];var F=G[1],E=G[2],D=G[3],C=G[4],B=G[5],A=G[6],o=G[7],l=G[8],j=G[9],v=G[10],K=G[11],L=G[12],i=G[13],J=G[14],G=G[15];H[0].setComponents(D-I,o-C,K-l,G-L).normalize();H[1].setComponents(D+I,o+C,K+l,G+L).normalize();H[2].setComponents(D+F,o+B,K+j,G+i).normalize();H[3].setComponents(D-F,o-B,K-j,G-i).normalize();H[4].setComponents(D-E,o-A,K-v,G-J).normalize();H[5].setComponents(D+E,o+A,K+v,G+J).normalize();return this},intersectsObject:function(){var b=new THREE.Sphere;return function(a){var d=a.geometry;null===d.boundingSphere&&d.computeBoundingSphere();b.copy(d.boundingSphere);b.applyMatrix4(a.matrixWorld);return this.intersectsSphere(b)}}(),intersectsSphere:function(f){var e=this.planes,h=f.center;f=-f.radius;for(var g=0;6>g;g++){if(e[g].distanceToPoint(h)<f){return !1}}return !0},intersectsBox:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(j){for(var i=this.planes,h=0;6>h;h++){var b=i[h];d.x=0<b.normal.x?j.min.x:j.max.x;c.x=0<b.normal.x?j.max.x:j.min.x;d.y=0<b.normal.y?j.min.y:j.max.y;c.y=0<b.normal.y?j.max.y:j.min.y;d.z=0<b.normal.z?j.min.z:j.max.z;c.z=0<b.normal.z?j.max.z:j.min.z;var a=b.distanceToPoint(d),b=b.distanceToPoint(c);if(0>a&&0>b){return !1}}return !0}}(),containsPoint:function(e){for(var d=this.planes,f=0;6>f;f++){if(0>d[f].distanceToPoint(e)){return !1}}return !0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,c){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d);this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){b=d.subVectors(a,b).cross(c.subVectors(f,b)).normalize();this.setFromNormalAndCoplanarPoint(b,f);return this}}(),copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).sub(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(d){var c=this.distanceToPoint(d.start);d=this.distanceToPoint(d.end);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var b=new THREE.Vector3;return function(a,j){var i=j||new THREE.Vector3,h=a.delta(b),g=this.normal.dot(h);if(0==g){if(0==this.distanceToPoint(a.start)){return i.copy(a.start)}}else{return g=-(a.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:i.copy(h).multiplyScalar(g).add(a.start)}}}(),coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Matrix3;return function(h,c){var b=c||f.getNormalMatrix(h),b=e.copy(this.normal).applyMatrix3(b),a=this.coplanarPoint(d);a.applyMatrix4(h);this.setFromNormalAndCoplanarPoint(b,a);return this}}(),translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var f="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),e=Array(36),h=0,g;return function(){for(var a=0;36>a;a++){8==a||13==a||18==a||23==a?e[a]="-":14==a?e[a]="4":(2>=h&&(h=33554432+16777216*Math.random()|0),g=h&15,h>>=4,e[a]=f[19==a?g&3|8:g])}return e.join("")}}(),clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},smoothstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*(3-2*e)},smootherstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return Math.floor(this.randFloat(d,c))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},degToRad:function(){var b=Math.PI/180;return function(a){return a*b}}(),radToDeg:function(){var b=180/Math.PI;return function(a){return a*b}}(),isPowerOfTwo:function(b){return 0===(b&b-1)&&0!==b}};THREE.Spline=function(D){function C(k,h,E,q,p,n,m){k=0.5*(E-k);q=0.5*(q-h);return(2*(h-E)+k+q)*m+(-3*(h-E)-2*k-q)*n+k*p+h}this.points=D;var B=[],A={x:0,y:0,z:0},v,u,t,s,r,l,j,i,o;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){v=(this.points.length-1)*b;u=Math.floor(v);t=v-u;B[0]=0===u?u:u-1;B[1]=u;B[2]=u>this.points.length-2?this.points.length-1:u+1;B[3]=u>this.points.length-3?this.points.length-1:u+2;l=this.points[B[0]];j=this.points[B[1]];i=this.points[B[2]];o=this.points[B[3]];s=t*t;r=t*s;A.x=C(l.x,j.x,i.x,o.x,t,s,r);A.y=C(l.y,j.y,i.y,o.y,t,s,r);A.z=C(l.z,j.z,i.z,o.z,t,s,r);return A};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(I){var H,G,F,E=H=H=0,q=new THREE.Vector3,p=new THREE.Vector3,n=[],m=0;n[0]=0;I||(I=100);G=this.points.length*I;q.copy(this.points[0]);for(I=1;I<G;I++){H=I/G,F=this.getPoint(H),p.copy(F),m+=p.distanceTo(q),q.copy(F),H*=this.points.length-1,H=Math.floor(H),H!=E&&(n[H]=m,E=H)}n[n.length]=m;return{chunks:n,total:m}};this.reparametrizeByArcLength=function(K){var J,I,H,G,F,E,q=[],p=new THREE.Vector3,n=this.getLength();q.push(p.copy(this.points[0]).clone());for(J=1;J<this.points.length;J++){I=n.chunks[J]-n.chunks[J-1];E=Math.ceil(K*I/n.total);G=(J-1)/(this.points.length-1);F=J/(this.points.length-1);for(I=1;I<E-1;I++){H=G+1/E*I*(F-G),H=this.getPoint(H),q.push(p.copy(H).clone())}q.push(p.copy(this.points[J]).clone())}this.points=q}};THREE.Triangle=function(e,d,f){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==d?d:new THREE.Vector3;this.c=void 0!==f?f:new THREE.Vector3};THREE.Triangle.normal=function(){var b=new THREE.Vector3;return function(a,h,g,f){f=f||new THREE.Vector3;f.subVectors(g,h);b.subVectors(a,h);f.cross(b);a=f.lengthSq();return 0<a?f.multiplyScalar(1/Math.sqrt(a)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(l,j,i,c,b){e.subVectors(c,j);d.subVectors(i,j);f.subVectors(l,j);l=e.dot(e);j=e.dot(d);i=e.dot(f);var a=d.dot(d);c=d.dot(f);var m=l*a-j*j;b=b||new THREE.Vector3;if(0==m){return b.set(-2,-1,-1)}m=1/m;a=(a*i-j*c)*m;l=(l*c-j*i)*m;return b.set(1-a-l,l,a)}}();THREE.Triangle.containsPoint=function(){var b=new THREE.Vector3;return function(a,h,g,f){a=THREE.Triangle.barycoordFromPoint(a,h,g,f,b);return 0<=a.x&&0<=a.y&&1>=a.x+a.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);c.subVectors(this.a,this.b);return 0.5*d.cross(c).length()}}(),midpoint:function(b){return(b||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(b){b.addEventListener=THREE.EventDispatcher.prototype.addEventListener;b.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;b.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;b.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,d){void 0===this._listeners&&(this._listeners={});var f=this._listeners;void 0===f[e]&&(f[e]=[]);-1===f[e].indexOf(d)&&f[e].push(d)},hasEventListener:function(e,d){if(void 0===this._listeners){return !1}var f=this._listeners;return void 0!==f[e]&&-1!==f[e].indexOf(d)?!0:!1},removeEventListener:function(f,e){if(void 0!==this._listeners){var h=this._listeners[f];if(void 0!==h){var g=h.indexOf(e);-1!==g&&h.splice(g,1)}}},dispatchEvent:function(g){if(void 0!==this._listeners){var f=this._listeners[g.type];if(void 0!==f){g.target=this;for(var j=[],i=f.length,h=0;h<i;h++){j[h]=f[h]}for(h=0;h<i;h++){j[h].call(this,g)}}}}};(function(e){e.Raycaster=function(a,j,i,h){this.ray=new e.Ray(a,j);this.near=i||0;this.far=h||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var d=function(g,c){return g.distance-c.distance},f=function(i,c,l,k){i.raycast(c,l);if(!0===k){i=i.children;k=0;for(var j=i.length;k<j;k++){f(i[k],c,l,!0)}}};e.Raycaster.prototype={constructor:e.Raycaster,precision:0.0001,linePrecision:1,set:function(g,c){this.ray.set(g,c)},setFromCamera:function(a,g){g instanceof e.PerspectiveCamera?(this.ray.origin.copy(g.position),this.ray.direction.set(a.x,a.y,0.5).unproject(g).sub(g.position).normalize()):g instanceof e.OrthographicCamera?(this.ray.origin.set(a.x,a.y,-1).unproject(g),this.ray.direction.set(0,0,-1).transformDirection(g.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(b,g){var c=[];f(b,this,c,g);c.sort(d);return c},intersectObjects:function(b,k){var j=[];if(!1===b instanceof Array){return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),j}for(var i=0,c=b.length;i<c;i++){f(b[i],this,j,k)}j.sort(d);return j}}})(THREE);THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var f=new THREE.Vector3,e=new THREE.Euler,h=new THREE.Quaternion,g=new THREE.Vector3(1,1,1);e.onChange(function(){h.setFromEuler(e,!1)});h.onChange(function(){e.setFromQuaternion(h,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:f},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:h},scale:{enumerable:!0,value:g}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrderfunction(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrderfunction(b){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=b},get useQuaternionfunction(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternionfunction(b){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(b){this.matrix.multiplyMatrices(b,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(d,c){this.quaternion.setFromAxisAngle(d,c)},setRotationFromEuler:function(b){this.quaternion.setFromEuler(b,!0)},setRotationFromMatrix:function(b){this.quaternion.setFromRotationMatrix(b)},setRotationFromQuaternion:function(b){this.quaternion.copy(b)},rotateOnAxis:function(){var b=new THREE.Quaternion;return function(a,d){b.setFromAxisAngle(a,d);this.quaternion.multiply(b);return this}}(),rotateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.rotateOnAxis(b,a)}}(),translateOnAxis:function(){var b=new THREE.Vector3;return function(a,d){b.copy(a).applyQuaternion(this.quaternion);this.position.add(b.multiplyScalar(d));return this}}(),translate:function(d,c){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(c,d)},translateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(b){return b.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new THREE.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new THREE.Matrix4;return function(a){b.lookAt(a,this.position,this.up);this.quaternion.setFromRotationMatrix(b)}}(),add:function(d){if(1<arguments.length){for(var c=0;c<arguments.length;c++){this.add(arguments[c])}return this}if(d===this){return console.error("THREE.Object3D.add:",d,"can't be added as a child of itself."),this}d instanceof THREE.Object3D?(void 0!==d.parent&&d.parent.remove(d),d.parent=this,d.dispatchEvent({type:"added"}),this.children.push(d)):console.error("THREE.Object3D.add:",d,"is not an instance of THREE.Object3D.");return this},remove:function(d){if(1<arguments.length){for(var c=0;c<arguments.length;c++){this.remove(arguments[c])}}c=this.children.indexOf(d);-1!==c&&(d.parent=void 0,d.dispatchEvent({type:"removed"}),this.children.splice(c,1))},getChildByName:function(d,c){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(d,c)},getObjectById:function(d,c){return this.getObjectByProperty("id",d,c)},getObjectByName:function(d,c){return this.getObjectByProperty("name",d,c)},getObjectByProperty:function(h,g,l){if(this[h]===g){return this}for(var k=0,j=this.children.length;k<j;k++){var i=this.children[k].getObjectByProperty(h,g,l);if(void 0!==i){return i}}},getWorldPosition:function(b){b=b||new THREE.Vector3;this.updateMatrixWorld(!0);return b.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(a){a=a||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(d,a,c);return a}}(),getWorldRotation:function(){var b=new THREE.Quaternion;return function(a){a=a||new THREE.Euler;this.getWorldQuaternion(b);return a.setFromQuaternion(b,this.rotation.order,!1)}}(),getWorldScale:function(){var d=new THREE.Vector3,c=new THREE.Quaternion;return function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(d,c,a);return a}}(),getWorldDirection:function(){var b=new THREE.Quaternion;return function(a){a=a||new THREE.Vector3;this.getWorldQuaternion(b);return a.set(0,0,1).applyQuaternion(b)}}(),raycast:function(){},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverseVisible(e)}}},traverseAncestors:function(b){this.parent&&(b(this.parent),this.parent.traverseAncestors(b))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},toJSON:function(){var h={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},g={},l=function(b){void 0===h.geometries&&(h.geometries=[]);if(void 0===g[b.uuid]){var a=b.toJSON();delete a.metadata;g[b.uuid]=a;h.geometries.push(a)}return b.uuid},k={},j=function(a){void 0===h.materials&&(h.materials=[]);if(void 0===k[a.uuid]){var d=a.toJSON();delete d.metadata;k[a.uuid]=d;h.materials.push(d)}return a.uuid},i=function(e){var c={};c.uuid=e.uuid;c.type=e.type;""!==e.name&&(c.name=e.name);"{}"!==JSON.stringify(e.userData)&&(c.userData=e.userData);!0!==e.visible&&(c.visible=e.visible);e instanceof THREE.PerspectiveCamera?(c.fov=e.fov,c.aspect=e.aspect,c.near=e.near,c.far=e.far):e instanceof THREE.OrthographicCamera?(c.left=e.left,c.right=e.right,c.top=e.top,c.bottom=e.bottom,c.near=e.near,c.far=e.far):e instanceof THREE.AmbientLight?c.color=e.color.getHex():e instanceof THREE.DirectionalLight?(c.color=e.color.getHex(),c.intensity=e.intensity):e instanceof THREE.PointLight?(c.color=e.color.getHex(),c.intensity=e.intensity,c.distance=e.distance):e instanceof THREE.SpotLight?(c.color=e.color.getHex(),c.intensity=e.intensity,c.distance=e.distance,c.angle=e.angle,c.exponent=e.exponent):e instanceof THREE.HemisphereLight?(c.color=e.color.getHex(),c.groundColor=e.groundColor.getHex()):e instanceof THREE.Mesh?(c.geometry=l(e.geometry),c.material=j(e.material)):e instanceof THREE.Line?(c.geometry=l(e.geometry),c.material=j(e.material)):e instanceof THREE.Sprite&&(c.material=j(e.material));c.matrix=e.matrix.toArray();if(0<e.children.length){c.children=[];for(var f=0;f<e.children.length;f++){c.children.push(i(e.children[f]))}}return c};h.object=i(this);return h},clone:function(e,d){void 0===e&&(e=new THREE.Object3D);void 0===d&&(d=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===d){for(var f=0;f<this.children.length;f++){e.add(this.children[f].clone())}}return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.materialIndex=this.materialIndex;for(var d=0,f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,h,n,m,l,k,j){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(i,h,n,l,k,j)};THREE.BufferAttribute=function(d,c){this.array=d;this.itemSize=c;this.needsUpdate=!1};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get lengthfunction(){return this.array.length},copyAt:function(g,f,j){g*=this.itemSize;j*=f.itemSize;for(var i=0,h=this.itemSize;i<h;i++){this.array[g+i]=f.array[j+i]}},set:function(b){this.array.set(b);return this},setX:function(d,c){this.array[d*this.itemSize]=c;return this},setY:function(d,c){this.array[d*this.itemSize+1]=c;return this},setZ:function(d,c){this.array[d*this.itemSize+2]=c;return this},setXY:function(e,d,f){e*=this.itemSize;this.array[e]=d;this.array[e+1]=f;return this},setXYZ:function(f,e,h,g){f*=this.itemSize;this.array[f]=e;this.array[f+1]=h;this.array[f+2]=g;return this},setXYZW:function(g,f,j,i,h){g*=this.itemSize;this.array[g]=f;this.array[g+1]=j;this.array[g+2]=i;this.array[g+3]=h;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};THREE.Int8Attribute=function(d,c){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Uint8Attribute=function(d,c){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Uint8ClampedAttribute=function(d,c){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Int16Attribute=function(d,c){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Uint16Attribute=function(d,c){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Int32Attribute=function(d,c){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Uint32Attribute=function(d,c){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Float32Attribute=function(d,c){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.Float64Attribute=function(d,c){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(d,c)};THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,d,f){!1===d instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:d,itemSize:f}):(this.attributes[e]=d,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(b){return this.attributes[b]},addDrawCall:function(e,d,f){this.drawcalls.push({start:e,count:d,index:void 0!==f?f:0})},applyMatrix:function(d){var c=this.attributes.position;void 0!==c&&(d.applyToVector3Array(c.array),c.needsUpdate=!0);c=this.attributes.normal;void 0!==c&&((new THREE.Matrix3).getNormalMatrix(d).applyToVector3Array(c.array),c.needsUpdate=!0)},center:function(){},fromGeometry:function(O,N){N=N||{vertexColors:THREE.NoColors};var M=O.vertices,L=O.faces,K=O.faceVertexUvs,J=N.vertexColors,I=0<K[0].length,H=3==L[0].vertexNormals.length,G=new Float32Array(9*L.length);this.addAttribute("position",new THREE.BufferAttribute(G,3));var E=new Float32Array(9*L.length);this.addAttribute("normal",new THREE.BufferAttribute(E,3));if(J!==THREE.NoColors){var D=new Float32Array(9*L.length);this.addAttribute("color",new THREE.BufferAttribute(D,3))}if(!0===I){var C=new Float32Array(6*L.length);this.addAttribute("uv",new THREE.BufferAttribute(C,2))}for(var F=0,o=0,A=0;F<L.length;F++,o+=6,A+=9){var B=L[F],l=M[B.a],j=M[B.b],i=M[B.c];G[A]=l.x;G[A+1]=l.y;G[A+2]=l.z;G[A+3]=j.x;G[A+4]=j.y;G[A+5]=j.z;G[A+6]=i.x;G[A+7]=i.y;G[A+8]=i.z;!0===H?(l=B.vertexNormals[0],j=B.vertexNormals[1],i=B.vertexNormals[2],E[A]=l.x,E[A+1]=l.y,E[A+2]=l.z,E[A+3]=j.x,E[A+4]=j.y,E[A+5]=j.z,E[A+6]=i.x,E[A+7]=i.y,E[A+8]=i.z):(l=B.normal,E[A]=l.x,E[A+1]=l.y,E[A+2]=l.z,E[A+3]=l.x,E[A+4]=l.y,E[A+5]=l.z,E[A+6]=l.x,E[A+7]=l.y,E[A+8]=l.z);J===THREE.FaceColors?(B=B.color,D[A]=B.r,D[A+1]=B.g,D[A+2]=B.b,D[A+3]=B.r,D[A+4]=B.g,D[A+5]=B.b,D[A+6]=B.r,D[A+7]=B.g,D[A+8]=B.b):J===THREE.VertexColors&&(l=B.vertexColors[0],j=B.vertexColors[1],B=B.vertexColors[2],D[A]=l.r,D[A+1]=l.g,D[A+2]=l.b,D[A+3]=j.r,D[A+4]=j.g,D[A+5]=j.b,D[A+6]=B.r,D[A+7]=B.g,D[A+8]=B.b);!0===I&&(B=K[0][F][0],l=K[0][F][1],j=K[0][F][2],C[o]=B.x,C[o+1]=B.y,C[o+2]=l.x,C[o+3]=l.y,C[o+4]=j.x,C[o+5]=j.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var b=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var h=this.boundingBox;h.makeEmpty();for(var g=0,f=a.length;g<f;g+=3){b.set(a[g],a[g+1],a[g+2]),h.expandByPoint(b)}}if(void 0===a||0===a.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var d=new THREE.Box3,c=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var j=this.attributes.position.array;if(j){d.makeEmpty();for(var i=this.boundingSphere.center,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),d.expandByPoint(c)}d.center(i);for(var a=0,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),a=Math.max(a,i.distanceToSquared(c))}this.boundingSphere.radius=Math.sqrt(a);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var N=this.attributes;if(N.position){var M=N.position.array;if(void 0===N.normal){this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(M.length),3))}else{for(var L=N.normal.array,K=0,J=L.length;K<J;K++){L[K]=0}}var L=N.normal.array,I,H,G,F=new THREE.Vector3,D=new THREE.Vector3,C=new THREE.Vector3,B=new THREE.Vector3,E=new THREE.Vector3;if(N.index){for(var l=N.index.array,o=0<this.offsets.length?this.offsets:[{start:0,count:l.length,index:0}],A=0,j=o.length;A<j;++A){J=o[A].start;I=o[A].count;for(var i=o[A].index,K=J,J=J+I;K<J;K+=3){I=3*(i+l[K]),H=3*(i+l[K+1]),G=3*(i+l[K+2]),F.fromArray(M,I),D.fromArray(M,H),C.fromArray(M,G),B.subVectors(C,D),E.subVectors(F,D),B.cross(E),L[I]+=B.x,L[I+1]+=B.y,L[I+2]+=B.z,L[H]+=B.x,L[H+1]+=B.y,L[H+2]+=B.z,L[G]+=B.x,L[G+1]+=B.y,L[G+2]+=B.z}}}else{for(K=0,J=M.length;K<J;K+=9){F.fromArray(M,K),D.fromArray(M,K+3),C.fromArray(M,K+6),B.subVectors(C,D),E.subVectors(F,D),B.cross(E),L[K]=B.x,L[K+1]=B.y,L[K+2]=B.z,L[K+3]=B.x,L[K+4]=B.y,L[K+5]=B.z,L[K+6]=B.x,L[K+7]=B.y,L[K+8]=B.z}}this.normalizeNormals();N.normal.needsUpdate=!0}},computeTangents:function(){function aE(e,d,f){aq.fromArray(aB,3*e);av.fromArray(aB,3*d);an.fromArray(aB,3*f);ao.fromArray(az,2*e);ap.fromArray(az,2*d);am.fromArray(az,2*f);al=av.x-aq.x;ai=an.x-aq.x;ad=av.y-aq.y;aj=an.y-aq.y;aa=av.z-aq.z;ah=an.z-aq.z;Z=ap.x-ao.x;ab=am.x-ao.x;ak=ap.y-ao.y;ac=am.y-ao.y;ae=1/(Z*ac-ab*ak);o.set((ac*al-ak*ai)*ae,(ac*ad-ak*aj)*ae,(ac*aa-ak*ah)*ae);R.set((Z*ai-ab*al)*ae,(Z*aj-ab*ad)*ae,(Z*ah-ab*aa)*ae);aw[e].add(o);aw[d].add(o);aw[f].add(o);au[e].add(R);au[d].add(R);au[f].add(R)}function aD(b){ar.fromArray(aA,3*b);Y.copy(ar);l=aw[b];af.copy(l);af.sub(ar.multiplyScalar(ar.dot(l))).normalize();i.crossVectors(Y,l);ag=i.dot(au[b]);X=0>ag?-1:1;ax[4*b]=af.x;ax[4*b+1]=af.y;ax[4*b+2]=af.z;ax[4*b+3]=X}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var aC=this.attributes.index.array,aB=this.attributes.position.array,aA=this.attributes.normal.array,az=this.attributes.uv.array,ay=aB.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*ay),4));for(var ax=this.attributes.tangent.array,aw=[],au=[],at=0;at<ay;at++){aw[at]=new THREE.Vector3,au[at]=new THREE.Vector3}var aq=new THREE.Vector3,av=new THREE.Vector3,an=new THREE.Vector3,ao=new THREE.Vector2,ap=new THREE.Vector2,am=new THREE.Vector2,al,ai,ad,aj,aa,ah,Z,ab,ak,ac,ae,o=new THREE.Vector3,R=new THREE.Vector3,V,S,P,B,I;0===this.drawcalls.length&&this.addDrawCall(0,aC.length,0);var j=this.drawcalls,at=0;for(S=j.length;at<S;++at){V=j[at].start;P=j[at].count;var J=j[at].index,ay=V;for(V+=P;ay<V;ay+=3){P=J+aC[ay],B=J+aC[ay+1],I=J+aC[ay+2],aE(P,B,I)}}var af=new THREE.Vector3,i=new THREE.Vector3,ar=new THREE.Vector3,Y=new THREE.Vector3,X,l,ag,at=0;for(S=j.length;at<S;++at){for(V=j[at].start,P=j[at].count,J=j[at].index,ay=V,V+=P;ay<V;ay+=3){P=J+aC[ay],B=J+aC[ay+1],I=J+aC[ay+2],aD(P),aD(B),aD(I)}}}},computeOffsets:function(H){var G=H;void 0===H&&(G=65535);Date.now();H=this.attributes.index.array;for(var F=this.attributes.position.array,E=H.length/3,D=new Uint16Array(H.length),C=0,B=0,A=[{start:0,count:0,index:0}],v=A[0],o=0,l=0,j=new Int32Array(6),u=new Int32Array(F.length),I=new Int32Array(F.length),J=0;J<F.length;J++){u[J]=-1,I[J]=-1}for(F=0;F<E;F++){for(var i=l=0;3>i;i++){J=H[3*F+i],-1==u[J]?(j[2*i]=J,j[2*i+1]=-1,l++):u[J]<v.index?(j[2*i]=J,j[2*i+1]=-1,o++):(j[2*i]=J,j[2*i+1]=u[J])}if(B+l>v.index+G){for(v={start:C,count:0,index:B},A.push(v),l=0;6>l;l+=2){i=j[l+1],-1<i&&i<v.index&&(j[l+1]=-1)}}for(l=0;6>l;l+=2){J=j[l],i=j[l+1],-1===i&&(i=B++),u[J]=i,I[i]=J,D[C++]=i-v.index,v.count++}}this.reorderBuffers(D,I,B);return this.offsets=A},merge:function(j,i){if(!1===j instanceof THREE.BufferGeometry){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",j)}else{void 0===i&&(i=0);var p=this.attributes,o;for(o in p){if(void 0!==j.attributes[o]){for(var n=p[o].array,m=j.attributes[o],l=m.array,k=0,m=m.itemSize*i;k<l.length;k++,m++){n[m]=l[k]}}}return this}},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},reorderBuffers:function(v,u,t){var s={},r;for(r in this.attributes){"index"!=r&&(s[r]=new this.attributes[r].array.constructor(this.attributes[r].itemSize*t))}for(var q=0;q<t;q++){var o=u[q];for(r in this.attributes){if("index"!=r){for(var m=this.attributes[r].array,l=this.attributes[r].itemSize,j=s[r],i=0;i<l;i++){j[q*l+i]=m[o*l+i]}}}}this.attributes.index.array=v;for(r in this.attributes){"index"!=r&&(this.attributes[r].array=s[r],this.attributes[r].numItems=this.attributes[r].itemSize*t)}},toJSON:function(){var t={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},s=this.attributes,r=this.offsets,q=this.boundingSphere,p;for(p in s){for(var o=s[p],m=[],l=o.array,j=0,i=l.length;j<i;j++){m[j]=l[j]}t.data.attributes[p]={itemSize:o.itemSize,type:o.array.constructor.name,array:m}}0<r.length&&(t.data.offsets=JSON.parse(JSON.stringify(r)));null!==q&&(t.data.boundingSphere={center:q.center.toArray(),radius:q.radius});return t},clone:function(){var f=new THREE.BufferGeometry,e;for(e in this.attributes){f.addAttribute(e,this.attributes[e].clone())}e=0;for(var h=this.offsets.length;e<h;e++){var g=this.offsets[e];f.offsets.push({start:g.start,index:g.index,count:g.count})}return f},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(h){for(var g=(new THREE.Matrix3).getNormalMatrix(h),l=0,k=this.vertices.length;l<k;l++){this.vertices[l].applyMatrix4(h)}l=0;for(k=this.faces.length;l<k;l++){h=this.faces[l];h.normal.applyMatrix3(g).normalize();for(var j=0,i=h.vertexNormals.length;j<i;j++){h.vertexNormals[j].applyMatrix3(g).normalize()}}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},fromBufferGeometry:function(v){for(var u=this,t=v.attributes,s=t.position.array,r=void 0!==t.index?t.index.array:void 0,q=void 0!==t.normal?t.normal.array:void 0,o=void 0!==t.color?t.color.array:void 0,m=void 0!==t.uv?t.uv.array:void 0,l=[],j=[],i=t=0;t<s.length;t+=3,i+=2){u.vertices.push(new THREE.Vector3(s[t],s[t+1],s[t+2])),void 0!==q&&l.push(new THREE.Vector3(q[t],q[t+1],q[t+2])),void 0!==o&&u.colors.push(new THREE.Color(o[t],o[t+1],o[t+2])),void 0!==m&&j.push(new THREE.Vector2(m[i],m[i+1]))}i=function(b,k,h){var g=void 0!==q?[l[b].clone(),l[k].clone(),l[h].clone()]:[],f=void 0!==o?[u.colors[b].clone(),u.colors[k].clone(),u.colors[h].clone()]:[];u.faces.push(new THREE.Face3(b,k,h,g,f));void 0!==m&&u.faceVertexUvs[0].push([j[b].clone(),j[k].clone(),j[h].clone()])};if(void 0!==r){for(t=0;t<r.length;t+=3){i(r[t],r[t+1],r[t+2])}}else{for(t=0;t<s.length/3;t+=3){i(t,t+1,t+2)}}this.computeFaceNormals();null!==v.boundingBox&&(this.boundingBox=v.boundingBox.clone());null!==v.boundingSphere&&(this.boundingSphere=v.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var b=new THREE.Vector3;b.addVectors(this.boundingBox.min,this.boundingBox.max);b.multiplyScalar(-0.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(b.x,b.y,b.z));this.computeBoundingBox();return b},computeFaceNormals:function(){for(var i=new THREE.Vector3,h=new THREE.Vector3,n=0,m=this.faces.length;n<m;n++){var l=this.faces[n],k=this.vertices[l.a],j=this.vertices[l.b];i.subVectors(this.vertices[l.c],j);h.subVectors(k,j);i.cross(h);i.normalize();l.normal.copy(i)}},computeVertexNormals:function(r){var q,p,o;o=Array(this.vertices.length);q=0;for(p=this.vertices.length;q<p;q++){o[q]=new THREE.Vector3}if(r){var n,m,l,j=new THREE.Vector3,i=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],n=this.vertices[p.a],m=this.vertices[p.b],l=this.vertices[p.c],j.subVectors(l,m),i.subVectors(n,m),j.cross(i),o[p.a].add(j),o[p.b].add(j),o[p.c].add(j)}}else{for(r=0,q=this.faces.length;r<q;r++){p=this.faces[r],o[p.a].add(p.normal),o[p.b].add(p.normal),o[p.c].add(p.normal)}}q=0;for(p=this.vertices.length;q<p;q++){o[q].normalize()}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.vertexNormals[0]=o[p.a].clone(),p.vertexNormals[1]=o[p.b].clone(),p.vertexNormals[2]=o[p.c].clone()}},computeMorphNormals:function(){var r,q,p,o,n;p=0;for(o=this.faces.length;p<o;p++){for(n=this.faces[p],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),r=0,q=n.vertexNormals.length;r<q;r++){n.__originalVertexNormals[r]?n.__originalVertexNormals[r].copy(n.vertexNormals[r]):n.__originalVertexNormals[r]=n.vertexNormals[r].clone()}}var m=new THREE.Geometry;m.faces=this.faces;r=0;for(q=this.morphTargets.length;r<q;r++){if(!this.morphNormals[r]){this.morphNormals[r]={};this.morphNormals[r].faceNormals=[];this.morphNormals[r].vertexNormals=[];n=this.morphNormals[r].faceNormals;var l=this.morphNormals[r].vertexNormals,j,i;p=0;for(o=this.faces.length;p<o;p++){j=new THREE.Vector3,i={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(j),l.push(i)}}l=this.morphNormals[r];m.vertices=this.morphTargets[r].vertices;m.computeFaceNormals();m.computeVertexNormals();p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],j=l.faceNormals[p],i=l.vertexNormals[p],j.copy(n.normal),i.a.copy(n.vertexNormals[0]),i.b.copy(n.vertexNormals[1]),i.c.copy(n.vertexNormals[2])}}p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals}},computeTangents:function(){var U,T,S,R,Q,P,O,N,M,K,J,I,L,D,E,H,B,o=[],j=[];S=new THREE.Vector3;var G=new THREE.Vector3,l=new THREE.Vector3,A=new THREE.Vector3,i=new THREE.Vector3;U=0;for(T=this.vertices.length;U<T;U++){o[U]=new THREE.Vector3,j[U]=new THREE.Vector3}U=0;for(T=this.faces.length;U<T;U++){Q=this.faces[U],P=this.faceVertexUvs[0][U],R=Q.a,B=Q.b,Q=Q.c,O=this.vertices[R],N=this.vertices[B],M=this.vertices[Q],K=P[0],J=P[1],I=P[2],P=N.x-O.x,L=M.x-O.x,D=N.y-O.y,E=M.y-O.y,N=N.z-O.z,O=M.z-O.z,M=J.x-K.x,H=I.x-K.x,J=J.y-K.y,K=I.y-K.y,I=1/(M*K-H*J),S.set((K*P-J*L)*I,(K*D-J*E)*I,(K*N-J*O)*I),G.set((M*L-H*P)*I,(M*E-H*D)*I,(M*O-H*N)*I),o[R].add(S),o[B].add(S),o[Q].add(S),j[R].add(G),j[B].add(G),j[Q].add(G)}G=["a","b","c","d"];U=0;for(T=this.faces.length;U<T;U++){for(Q=this.faces[U],S=0;S<Math.min(Q.vertexNormals.length,3);S++){i.copy(Q.vertexNormals[S]),R=Q[G[S]],B=o[R],l.copy(B),l.sub(i.multiplyScalar(i.dot(B))).normalize(),A.crossVectors(Q.vertexNormals[S],B),R=A.dot(j[R]),R=0>R?-1:1,Q.vertexTangents[S]=new THREE.Vector4(l.x,l.y,l.z,R)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(H,G,F){if(!1===H instanceof THREE.Geometry){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",H)}else{var E,D=this.vertices.length,C=this.vertices,B=H.vertices,A=this.faces,v=H.faces,o=this.faceVertexUvs[0];H=H.faceVertexUvs[0];void 0===F&&(F=0);void 0!==G&&(E=(new THREE.Matrix3).getNormalMatrix(G));for(var l=0,j=B.length;l<j;l++){var u=B[l].clone();void 0!==G&&u.applyMatrix4(G);C.push(u)}l=0;for(j=v.length;l<j;l++){var B=v[l],I,J=B.vertexNormals,i=B.vertexColors,u=new THREE.Face3(B.a+D,B.b+D,B.c+D);u.normal.copy(B.normal);void 0!==E&&u.normal.applyMatrix3(E).normalize();G=0;for(C=J.length;G<C;G++){I=J[G].clone(),void 0!==E&&I.applyMatrix3(E).normalize(),u.vertexNormals.push(I)}u.color.copy(B.color);G=0;for(C=i.length;G<C;G++){I=i[G],u.vertexColors.push(I.clone())}u.materialIndex=B.materialIndex+F;A.push(u)}l=0;for(j=H.length;l<j;l++){if(F=H[l],E=[],void 0!==F){G=0;for(C=F.length;G<C;G++){E.push(F[G].clone())}o.push(E)}}}},mergeMesh:function(b){!1===b instanceof THREE.Mesh?console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",b):(b.matrixAutoUpdate&&b.updateMatrix(),this.merge(b.geometry,b.matrix))},mergeVertices:function(){var i={},h=[],n=[],m,l=Math.pow(10,4),k,j;k=0;for(j=this.vertices.length;k<j;k++){m=this.vertices[k],m=Math.round(m.x*l)+"_"+Math.round(m.y*l)+"_"+Math.round(m.z*l),void 0===i[m]?(i[m]=k,h.push(this.vertices[k]),n[k]=h.length-1):n[k]=n[i[m]]}i=[];k=0;for(j=this.faces.length;k<j;k++){for(l=this.faces[k],l.a=n[l.a],l.b=n[l.b],l.c=n[l.c],l=[l.a,l.b,l.c],m=0;3>m;m++){if(l[m]==l[(m+1)%3]){i.push(k);break}}}for(k=i.length-1;0<=k;k--){for(l=i[k],this.faces.splice(l,1),n=0,j=this.faceVertexUvs.length;n<j;n++){this.faceVertexUvs[n].splice(l,1)}}k=this.vertices.length-h.length;this.vertices=h;return k},toJSON:function(){function R(e,d,f){return f?e|1<<d:e&~(1<<d)}function Q(d){var c=d.x.toString()+d.y.toString()+d.z.toString();if(void 0!==H[c]){return H[c]}H[c]=J.length/3;J.push(d.x,d.y,d.z);return H[c]}function P(d){var c=d.r.toString()+d.g.toString()+d.b.toString();if(void 0!==F[c]){return F[c]}F[c]=G.length;G.push(d.getHex());return F[c]}function O(d){var c=d.x.toString()+d.y.toString();if(void 0!==A[c]){return A[c]}A[c]=I.length/2;I.push(d.x,d.y);return A[c]}var N={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(N.name=this.name);if(void 0!==this.parameters){var M=this.parameters,L;for(L in M){void 0!==M[L]&&(N[L]=M[L])}return N}M=[];for(L=0;L<this.vertices.length;L++){var K=this.vertices[L];M.push(K.x,K.y,K.z)}var K=[],J=[],H={},G=[],F={},I=[],A={};for(L=0;L<this.faces.length;L++){var B=this.faces[L],E=void 0!==this.faceVertexUvs[0][L],o=0<B.normal.length(),l=0<B.vertexNormals.length,i=1!==B.color.r||1!==B.color.g||1!==B.color.b,D=0<B.vertexColors.length,j=0,j=R(j,0,0),j=R(j,1,!1),j=R(j,2,!1),j=R(j,3,E),j=R(j,4,o),j=R(j,5,l),j=R(j,6,i),j=R(j,7,D);K.push(j);K.push(B.a,B.b,B.c);E&&(E=this.faceVertexUvs[0][L],K.push(O(E[0]),O(E[1]),O(E[2])));o&&K.push(Q(B.normal));l&&(o=B.vertexNormals,K.push(Q(o[0]),Q(o[1]),Q(o[2])));i&&K.push(P(B.color));D&&(B=B.vertexColors,K.push(P(B[0]),P(B[1]),P(B[2])))}N.data={};N.data.vertices=M;N.data.normals=J;0<G.length&&(N.data.colors=G);0<I.length&&(N.data.uvs=[I]);N.data.faces=K;return N},clone:function(){for(var t=new THREE.Geometry,s=this.vertices,r=0,q=s.length;r<q;r++){t.vertices.push(s[r].clone())}s=this.faces;r=0;for(q=s.length;r<q;r++){t.faces.push(s[r].clone())}r=0;for(q=this.faceVertexUvs.length;r<q;r++){s=this.faceVertexUvs[r];void 0===t.faceVertexUvs[r]&&(t.faceVertexUvs[r]=[]);for(var p=0,o=s.length;p<o;p++){for(var m=s[p],l=[],j=0,i=m.length;j<i;j++){l.push(m[j].clone())}t.faceVertexUvs[r].push(l)}}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var b=new THREE.Quaternion;return function(a){a=a||new THREE.Vector3;this.getWorldQuaternion(b);return a.set(0,0,-1).applyQuaternion(b)}}();THREE.Camera.prototype.lookAt=function(){var b=new THREE.Matrix4;return function(a){b.lookAt(this.position,a,this.up);this.quaternion.setFromRotationMatrix(b)}}();THREE.Camera.prototype.clone=function(b){void 0===b&&(b=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,b);b.matrixWorldInverse.copy(this.matrixWorldInverse);b.projectionMatrix.copy(this.projectionMatrix);return b};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);this.type="CubeCamera";var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,0,-1);l.lookAt(new THREE.Vector3(0,-1,0));this.add(l);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,1));this.add(j);var i=new THREE.PerspectiveCamera(90,1,r,q);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(f,e){var g=this.renderTarget,d=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;f.render(e,o,g);g.activeCubeFace=1;f.render(e,n,g);g.activeCubeFace=2;f.render(e,m,g);g.activeCubeFace=3;f.render(e,l,g);g.activeCubeFace=4;f.render(e,j,g);g.generateMipmaps=d;g.activeCubeFace=5;f.render(e,i,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var f=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),h=(this.right+this.left)/2,g=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(h-f,h+f,g+e,g-e,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var b=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,b);b.zoom=this.zoom;b.left=this.left;b.right=this.right;b.top=this.top;b.bottom=this.bottom;b.near=this.near;b.far=this.far;b.projectionMatrix.copy(this.projectionMatrix);return b};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var f=THREE.Math.radToDeg(2*Math.atan(Math.tan(0.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var e=this.fullWidth/this.fullHeight,f=Math.tan(THREE.Math.degToRad(0.5*f))*this.near,h=-f,g=e*h,e=Math.abs(e*f-g),h=Math.abs(f-h);this.projectionMatrix.makeFrustum(g+this.x*e/this.fullWidth,g+(this.x+this.width)*e/this.fullWidth,f-(this.y+this.height)*h/this.fullHeight,f-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(f,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.clone=function(){var b=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,b);b.zoom=this.zoom;b.fov=this.fov;b.aspect=this.aspect;b.near=this.near;b.far=this.far;b.projectionMatrix.copy(this.projectionMatrix);return b};THREE.Light=function(b){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.clone=function(b){void 0===b&&(b=new THREE.Light);THREE.Object3D.prototype.clone.call(this,b);b.color.copy(this.color);return b};THREE.AmbientLight=function(b){THREE.Light.call(this,b);this.type="AmbientLight"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.clone=function(){var b=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,b);return b};THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.type="AreaLight";this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight.prototype.constructor=THREE.AreaLight;THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.type="DirectionalLight";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.DirectionalLight.prototype.clone=function(){var b=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;b.shadowCameraNear=this.shadowCameraNear;b.shadowCameraFar=this.shadowCameraFar;b.shadowCameraLeft=this.shadowCameraLeft;b.shadowCameraRight=this.shadowCameraRight;b.shadowCameraTop=this.shadowCameraTop;b.shadowCameraBottom=this.shadowCameraBottom;b.shadowCameraVisible=this.shadowCameraVisible;b.shadowBias=this.shadowBias;b.shadowDarkness=this.shadowDarkness;b.shadowMapWidth=this.shadowMapWidth;b.shadowMapHeight=this.shadowMapHeight;b.shadowCascade=this.shadowCascade;b.shadowCascadeOffset.copy(this.shadowCascadeOffset);b.shadowCascadeCount=this.shadowCascadeCount;b.shadowCascadeBias=this.shadowCascadeBias.slice(0);b.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);b.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);b.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);b.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return b};THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.type="HemisphereLight";this.position.set(0,100,0);this.groundColor=new THREE.Color(d);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.clone=function(){var b=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,b);b.groundColor.copy(this.groundColor);b.intensity=this.intensity;return b};THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.type="PointLight";this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.PointLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.intensity=this.intensity;b.distance=this.distance;return b};THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.type="SpotLight";this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.SpotLight.prototype.clone=function(){var b=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.distance=this.distance;b.angle=this.angle;b.exponent=this.exponent;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;b.shadowCameraNear=this.shadowCameraNear;b.shadowCameraFar=this.shadowCameraFar;b.shadowCameraFov=this.shadowCameraFov;b.shadowCameraVisible=this.shadowCameraVisible;b.shadowBias=this.shadowBias;b.shadowDarkness=this.shadowDarkness;b.shadowMapWidth=this.shadowMapWidth;b.shadowMapHeight=this.shadowMapHeight;return b};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(d,c){this.files[d]=c},get:function(b){return this.files[b]},remove:function(b){delete this.files[b]},clear:function(){this.files={}}};THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");if(1===b.length){return"./"}b.pop();return b.join("/")+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=this.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(r,q){function p(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function o(C,A,t,s,f,c,b){var E=q+t,D,B=THREE.Loader.Handlers.get(E);null!==B?D=B.load(E):(D=new THREE.Texture,B=m.imageLoader,B.crossOrigin=m.crossOrigin,B.load(E,function(h){if(!1===THREE.Math.isPowerOfTwo(h.width)||!1===THREE.Math.isPowerOfTwo(h.height)){var g=p(h.width),u=p(h.height),k=document.createElement("canvas");k.width=g;k.height=u;k.getContext("2d").drawImage(h,0,0,g,u);D.image=k}else{D.image=h}D.needsUpdate=!0}));D.sourceFile=t;s&&(D.repeat.set(s[0],s[1]),1!==s[0]&&(D.wrapS=THREE.RepeatWrapping),1!==s[1]&&(D.wrapT=THREE.RepeatWrapping));f&&D.offset.set(f[0],f[1]);c&&(t={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==t[c[0]]&&(D.wrapS=t[c[0]]),void 0!==t[c[1]]&&(D.wrapT=t[c[1]]));b&&(D.anisotropy=b);C[A]=D}function n(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var m=this,l="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(r.shading){var i=r.shading.toLowerCase();"phong"===i?l="MeshPhongMaterial":"basic"===i&&(l="MeshBasicMaterial")}void 0!==r.blending&&void 0!==THREE[r.blending]&&(j.blending=THREE[r.blending]);if(void 0!==r.transparent||1>r.opacity){j.transparent=r.transparent}void 0!==r.depthTest&&(j.depthTest=r.depthTest);void 0!==r.depthWrite&&(j.depthWrite=r.depthWrite);void 0!==r.visible&&(j.visible=r.visible);void 0!==r.flipSided&&(j.side=THREE.BackSide);void 0!==r.doubleSided&&(j.side=THREE.DoubleSide);void 0!==r.wireframe&&(j.wireframe=r.wireframe);void 0!==r.vertexColors&&("face"===r.vertexColors?j.vertexColors=THREE.FaceColors:r.vertexColors&&(j.vertexColors=THREE.VertexColors));r.colorDiffuse?j.color=n(r.colorDiffuse):r.DbgColor&&(j.color=r.DbgColor);r.colorSpecular&&(j.specular=n(r.colorSpecular));r.colorAmbient&&(j.ambient=n(r.colorAmbient));r.colorEmissive&&(j.emissive=n(r.colorEmissive));r.transparency&&(j.opacity=r.transparency);r.specularCoef&&(j.shininess=r.specularCoef);r.mapDiffuse&&q&&o(j,"map",r.mapDiffuse,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);r.mapLight&&q&&o(j,"lightMap",r.mapLight,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);r.mapBump&&q&&o(j,"bumpMap",r.mapBump,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);r.mapNormal&&q&&o(j,"normalMap",r.mapNormal,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);r.mapSpecular&&q&&o(j,"specularMap",r.mapSpecular,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);r.mapAlpha&&q&&o(j,"alphaMap",r.mapAlpha,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);r.mapBumpScale&&(j.bumpScale=r.mapBumpScale);r.mapNormalFactor&&(j.normalScale=new THREE.Vector2(r.mapNormalFactor,r.mapNormalFactor));l=new THREE[l](j);void 0!==r.DbgName&&(l.name=r.DbgName);return l}};THREE.Loader.Handlers={handlers:[],add:function(d,c){this.handlers.push(d,c)},get:function(f){for(var e=0,h=this.handlers.length;e<h;e+=2){var g=this.handlers[e+1];if(this.handlers[e].test(f)){return g}}return null}};THREE.XHRLoader=function(b){this.cache=new THREE.Cache;this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(h,g,l,k){var j=this,i=j.cache.get(h);void 0!==i?g&&g(i):(i=new XMLHttpRequest,i.open("GET",h,!0),i.addEventListener("load",function(a){j.cache.add(h,this.response);g&&g(this.response);j.manager.itemEnd(h)},!1),void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1),void 0!==k&&i.addEventListener("error",function(b){k(b)},!1),void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(i.responseType=this.responseType),i.send(null),j.manager.itemStart(h))},setResponseType:function(b){this.responseType=b},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.ImageLoader=function(b){this.cache=new THREE.Cache;this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(h,g,l,k){var j=this,i=j.cache.get(h);if(void 0!==i){g(i)}else{return i=document.createElement("img"),void 0!==g&&i.addEventListener("load",function(a){j.cache.add(h,this);g(this);j.manager.itemEnd(h)},!1),void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1),void 0!==k&&i.addEventListener("error",function(b){k(b)},!1),void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),i.src=h,j.manager.itemStart(h),i}},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,h,n,m,l){var k=new XMLHttpRequest,j=0;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText);if(void 0!==a.metadata&&"scene"===a.metadata.type){console.error('THREE.JSONLoader: "'+h+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}a=i.parse(a,m);n(a.geometry,a.materials)}else{console.error('THREE.JSONLoader: "'+h+'" seems to be unreachable or the file is empty.')}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load \""+h+'" ('+k.status+")")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&void 0!==l&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",h,!0);k.withCredentials=this.withCredentials;k.send(null)};THREE.JSONLoader.prototype.parse=function(f,e){var h=new THREE.Geometry,g=void 0!==f.scale?1/f.scale:1;(function(N){var M,L,K,J,H,G,E,I,o,A,D,l,i,a=f.faces;G=f.vertices;var B=f.normals,c=f.colors,j=0;if(void 0!==f.uvs){for(M=0;M<f.uvs.length;M++){f.uvs[M].length&&j++}for(M=0;M<j;M++){h.faceVertexUvs[M]=[]}}J=0;for(H=G.length;J<H;){M=new THREE.Vector3,M.x=G[J++]*N,M.y=G[J++]*N,M.z=G[J++]*N,h.vertices.push(M)}J=0;for(H=a.length;J<H;){if(N=a[J++],o=N&1,K=N&2,M=N&8,E=N&16,A=N&32,G=N&64,N&=128,o){o=new THREE.Face3;o.a=a[J];o.b=a[J+1];o.c=a[J+3];D=new THREE.Face3;D.a=a[J+1];D.b=a[J+2];D.c=a[J+3];J+=4;K&&(K=a[J++],o.materialIndex=K,D.materialIndex=K);K=h.faces.length;if(M){for(M=0;M<j;M++){for(l=f.uvs[M],h.faceVertexUvs[M][K]=[],h.faceVertexUvs[M][K+1]=[],L=0;4>L;L++){I=a[J++],i=l[2*I],I=l[2*I+1],i=new THREE.Vector2(i,I),2!==L&&h.faceVertexUvs[M][K].push(i),0!==L&&h.faceVertexUvs[M][K+1].push(i)}}}E&&(E=3*a[J++],o.normal.set(B[E++],B[E++],B[E]),D.normal.copy(o.normal));if(A){for(M=0;4>M;M++){E=3*a[J++],A=new THREE.Vector3(B[E++],B[E++],B[E]),2!==M&&o.vertexNormals.push(A),0!==M&&D.vertexNormals.push(A)}}G&&(G=a[J++],G=c[G],o.color.setHex(G),D.color.setHex(G));if(N){for(M=0;4>M;M++){G=a[J++],G=c[G],2!==M&&o.vertexColors.push(new THREE.Color(G)),0!==M&&D.vertexColors.push(new THREE.Color(G))}}h.faces.push(o);h.faces.push(D)}else{o=new THREE.Face3;o.a=a[J++];o.b=a[J++];o.c=a[J++];K&&(K=a[J++],o.materialIndex=K);K=h.faces.length;if(M){for(M=0;M<j;M++){for(l=f.uvs[M],h.faceVertexUvs[M][K]=[],L=0;3>L;L++){I=a[J++],i=l[2*I],I=l[2*I+1],i=new THREE.Vector2(i,I),h.faceVertexUvs[M][K].push(i)}}}E&&(E=3*a[J++],o.normal.set(B[E++],B[E++],B[E]));if(A){for(M=0;3>M;M++){E=3*a[J++],A=new THREE.Vector3(B[E++],B[E++],B[E]),o.vertexNormals.push(A)}}G&&(G=a[J++],o.color.setHex(c[G]));if(N){for(M=0;3>M;M++){G=a[J++],o.vertexColors.push(new THREE.Color(c[G]))}}h.faces.push(o)}}})(g);(function(){var a=void 0!==f.influencesPerVertex?f.influencesPerVertex:2;if(f.skinWeights){for(var i=0,c=f.skinWeights.length;i<c;i+=a){h.skinWeights.push(new THREE.Vector4(f.skinWeights[i],1<a?f.skinWeights[i+1]:0,2<a?f.skinWeights[i+2]:0,3<a?f.skinWeights[i+3]:0))}}if(f.skinIndices){for(i=0,c=f.skinIndices.length;i<c;i+=a){h.skinIndices.push(new THREE.Vector4(f.skinIndices[i],1<a?f.skinIndices[i+1]:0,2<a?f.skinIndices[i+2]:0,3<a?f.skinIndices[i+3]:0))}}h.bones=f.bones;h.bones&&0<h.bones.length&&(h.skinWeights.length!==h.skinIndices.length||h.skinIndices.length!==h.vertices.length)&&console.warn("When skinning, number of vertices ("+h.vertices.length+"), skinIndices ("+h.skinIndices.length+"), and skinWeights ("+h.skinWeights.length+") should match.");h.animation=f.animation;h.animations=f.animations})();(function(a){if(void 0!==f.morphTargets){var o,j,i,c,r,m;o=0;for(j=f.morphTargets.length;o<j;o++){for(h.morphTargets[o]={},h.morphTargets[o].name=f.morphTargets[o].name,h.morphTargets[o].vertices=[],r=h.morphTargets[o].vertices,m=f.morphTargets[o].vertices,i=0,c=m.length;i<c;i+=3){var l=new THREE.Vector3;l.x=m[i]*a;l.y=m[i+1]*a;l.z=m[i+2]*a;r.push(l)}}}if(void 0!==f.morphColors){for(o=0,j=f.morphColors.length;o<j;o++){for(h.morphColors[o]={},h.morphColors[o].name=f.morphColors[o].name,h.morphColors[o].colors=[],c=h.morphColors[o].colors,r=f.morphColors[o].colors,a=0,i=r.length;a<i;a+=3){m=new THREE.Color(16755200),m.setRGB(r[a],r[a+1],r[a+2]),c.push(m)}}}})(g);h.computeFaceNormals();h.computeBoundingSphere();if(void 0===f.materials||0===f.materials.length){return{geometry:h}}g=this.initMaterials(f.materials,e);this.needsTangents(g)&&h.computeTangents();return{geometry:h,materials:g}};THREE.LoadingManager=function(h,g,l){var k=this,j=0,i=0;this.onLoad=h;this.onProgress=g;this.onError=l;this.itemStart=function(b){i++};this.itemEnd=function(b){j++;if(void 0!==k.onProgress){k.onProgress(b,j,i)}if(j===i&&void 0!==k.onLoad){k.onLoad()}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(h,g,l,k){var j=this,i=new THREE.XHRLoader(j.manager);i.setCrossOrigin(this.crossOrigin);i.load(h,function(b){g(j.parse(JSON.parse(b)))},l,k)},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(h){var g=new THREE.BufferGeometry,l=h.attributes,k;for(k in l){var j=l[k],i=new self[j.type](j.array);g.addAttribute(k,new THREE.BufferAttribute(i,j.itemSize))}l=h.offsets;void 0!==l&&(g.offsets=JSON.parse(JSON.stringify(l)));h=h.boundingSphere;void 0!==h&&(l=new THREE.Vector3,void 0!==h.center&&l.fromArray(h.center),g.boundingSphere=new THREE.Sphere(l,h.radius));return g}};THREE.MaterialLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(h,g,l,k){var j=this,i=new THREE.XHRLoader(j.manager);i.setCrossOrigin(this.crossOrigin);i.load(h,function(b){g(j.parse(JSON.parse(b)))},l,k)},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(f){var e=new THREE[f.type];void 0!==f.color&&e.color.setHex(f.color);void 0!==f.ambient&&e.ambient.setHex(f.ambient);void 0!==f.emissive&&e.emissive.setHex(f.emissive);void 0!==f.specular&&e.specular.setHex(f.specular);void 0!==f.shininess&&(e.shininess=f.shininess);void 0!==f.uniforms&&(e.uniforms=f.uniforms);void 0!==f.vertexShader&&(e.vertexShader=f.vertexShader);void 0!==f.fragmentShader&&(e.fragmentShader=f.fragmentShader);void 0!==f.vertexColors&&(e.vertexColors=f.vertexColors);void 0!==f.shading&&(e.shading=f.shading);void 0!==f.blending&&(e.blending=f.blending);void 0!==f.side&&(e.side=f.side);void 0!==f.opacity&&(e.opacity=f.opacity);void 0!==f.transparent&&(e.transparent=f.transparent);void 0!==f.wireframe&&(e.wireframe=f.wireframe);if(void 0!==f.materials){for(var h=0,g=f.materials.length;h<g;h++){e.materials.push(this.parse(f.materials[h]))}}return e}};THREE.ObjectLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(h,g,l,k){var j=this,i=new THREE.XHRLoader(j.manager);i.setCrossOrigin(this.crossOrigin);i.load(h,function(b){g(j.parse(JSON.parse(b)))},l,k)},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(e){var d=this.parseGeometries(e.geometries),f=this.parseMaterials(e.materials);return this.parseObject(e.object,d,f)},parseGeometries:function(j){var i={};if(void 0!==j){for(var p=new THREE.JSONLoader,o=new THREE.BufferGeometryLoader,n=0,m=j.length;n<m;n++){var l,k=j[n];switch(k.type){case"PlaneGeometry":l=new THREE.PlaneGeometry(k.width,k.height,k.widthSegments,k.heightSegments);break;case"BoxGeometry":case"CubeGeometry":l=new THREE.BoxGeometry(k.width,k.height,k.depth,k.widthSegments,k.heightSegments,k.depthSegments);break;case"CircleGeometry":l=new THREE.CircleGeometry(k.radius,k.segments);break;case"CylinderGeometry":l=new THREE.CylinderGeometry(k.radiusTop,k.radiusBottom,k.height,k.radialSegments,k.heightSegments,k.openEnded);break;case"SphereGeometry":l=new THREE.SphereGeometry(k.radius,k.widthSegments,k.heightSegments,k.phiStart,k.phiLength,k.thetaStart,k.thetaLength);break;case"IcosahedronGeometry":l=new THREE.IcosahedronGeometry(k.radius,k.detail);break;case"TorusGeometry":l=new THREE.TorusGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.arc);break;case"TorusKnotGeometry":l=new THREE.TorusKnotGeometry(k.radius,k.tube,k.radialSegments,k.tubularSegments,k.p,k.q,k.heightScale);break;case"BufferGeometry":l=o.parse(k.data);break;case"Geometry":l=p.parse(k.data).geometry}l.uuid=k.uuid;void 0!==k.name&&(l.name=k.name);i[k.uuid]=l}}return i},parseMaterials:function(i){var h={};if(void 0!==i){for(var n=new THREE.MaterialLoader,m=0,l=i.length;m<l;m++){var k=i[m],j=n.parse(k);j.uuid=k.uuid;void 0!==k.name&&(j.name=k.name);h[k.uuid]=j}}return h},parseObject:function(){var b=new THREE.Matrix4;return function(a,l,k){var j;switch(a.type){case"Scene":j=new THREE.Scene;break;case"PerspectiveCamera":j=new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far);break;case"OrthographicCamera":j=new THREE.OrthographicCamera(a.left,a.right,a.top,a.bottom,a.near,a.far);break;case"AmbientLight":j=new THREE.AmbientLight(a.color);break;case"DirectionalLight":j=new THREE.DirectionalLight(a.color,a.intensity);break;case"PointLight":j=new THREE.PointLight(a.color,a.intensity,a.distance);break;case"SpotLight":j=new THREE.SpotLight(a.color,a.intensity,a.distance,a.angle,a.exponent);break;case"HemisphereLight":j=new THREE.HemisphereLight(a.color,a.groundColor,a.intensity);break;case"Mesh":j=l[a.geometry];var i=k[a.material];void 0===j&&console.warn("THREE.ObjectLoader: Undefined geometry",a.geometry);void 0===i&&console.warn("THREE.ObjectLoader: Undefined material",a.material);j=new THREE.Mesh(j,i);break;case"Line":j=l[a.geometry];i=k[a.material];void 0===j&&console.warn("THREE.ObjectLoader: Undefined geometry",a.geometry);void 0===i&&console.warn("THREE.ObjectLoader: Undefined material",a.material);j=new THREE.Line(j,i);break;case"Sprite":i=k[a.material];void 0===i&&console.warn("THREE.ObjectLoader: Undefined material",a.material);j=new THREE.Sprite(i);break;case"Group":j=new THREE.Group;break;default:j=new THREE.Object3D}j.uuid=a.uuid;void 0!==a.name&&(j.name=a.name);void 0!==a.matrix?(b.fromArray(a.matrix),b.decompose(j.position,j.quaternion,j.scale)):(void 0!==a.position&&j.position.fromArray(a.position),void 0!==a.rotation&&j.rotation.fromArray(a.rotation),void 0!==a.scale&&j.scale.fromArray(a.scale));void 0!==a.visible&&(j.visible=a.visible);void 0!==a.userData&&(j.userData=a.userData);if(void 0!==a.children){for(var h in a.children){j.add(this.parseObject(a.children[h],l,k))}}return j}}()};THREE.TextureLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(g,f,j,i){var h=new THREE.ImageLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.load(g,function(b){b=new THREE.Texture(b);b.needsUpdate=!0;void 0!==f&&f(b)},j,i)},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null};THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(i,h,n,m){var l=this,k=new THREE.DataTexture,j=new THREE.XHRLoader;j.setResponseType("arraybuffer");j.load(i,function(b){if(b=l._parser(b)){void 0!==b.image?k.image=b.image:void 0!==b.data&&(k.image.width=b.width,k.image.height=b.height,k.image.data=b.data),k.wrapS=void 0!==b.wrapS?b.wrapS:THREE.ClampToEdgeWrapping,k.wrapT=void 0!==b.wrapT?b.wrapT:THREE.ClampToEdgeWrapping,k.magFilter=void 0!==b.magFilter?b.magFilter:THREE.LinearFilter,k.minFilter=void 0!==b.minFilter?b.minFilter:THREE.LinearMipMapLinearFilter,k.anisotropy=void 0!==b.anisotropy?b.anisotropy:1,void 0!==b.format&&(k.format=b.format),void 0!==b.type&&(k.type=b.type),void 0!==b.mipmaps&&(k.mipmaps=b.mipmaps),1===b.mipmapCount&&(k.minFilter=THREE.LinearFilter),k.needsUpdate=!0,h&&h(k,b)}},n,m);return k}};THREE.CompressedTextureLoader=function(){this._parser=null};THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(t,s,r){var q=this,p=[],o=new THREE.CompressedTexture;o.image=p;var m=new THREE.XHRLoader;m.setResponseType("arraybuffer");if(t instanceof Array){var l=0;r=function(a){m.load(t[a],function(b){b=q._parser(b,!0);p[a]={width:b.width,height:b.height,format:b.format,mipmaps:b.mipmaps};l+=1;6===l&&(1==b.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.format=b.format,o.needsUpdate=!0,s&&s(o))})};for(var j=0,i=t.length;j<i;++j){r(j)}}else{m.load(t,function(b){b=q._parser(b,!0);if(b.isCubemap){for(var f=b.mipmaps.length/b.mipmapCount,e=0;e<f;e++){p[e]={mipmaps:[]};for(var d=0;d<b.mipmapCount;d++){p[e].mipmaps.push(b.mipmaps[e*b.mipmapCount+d]),p[e].format=b.format,p[e].width=b.width,p[e].height=b.height}}}else{o.image.width=b.width,o.image.height=b.height,o.mipmaps=b.mipmaps}1===b.mipmapCount&&(o.minFilter=THREE.LinearFilter);o.format=b.format;o.needsUpdate=!0;s&&s(o)})}return o}};THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]="overdraw"==e?Number(h):h}}}}},toJSON:function(){var b={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(b.name=this.name);this instanceof THREE.MeshBasicMaterial?(b.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(b.blending=this.blending),this.side!==THREE.FrontSide&&(b.side=this.side)):this instanceof THREE.MeshLambertMaterial?(b.color=this.color.getHex(),b.ambient=this.ambient.getHex(),b.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(b.blending=this.blending),this.side!==THREE.FrontSide&&(b.side=this.side)):this instanceof THREE.MeshPhongMaterial?(b.color=this.color.getHex(),b.ambient=this.ambient.getHex(),b.emissive=this.emissive.getHex(),b.specular=this.specular.getHex(),b.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(b.blending=this.blending),this.side!==THREE.FrontSide&&(b.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.shading!==THREE.FlatShading&&(b.shading=this.shading),this.blending!==THREE.NormalBlending&&(b.blending=this.blending),this.side!==THREE.FrontSide&&(b.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(b.blending=this.blending),this.side!==THREE.FrontSide&&(b.side=this.side)):this instanceof THREE.ShaderMaterial?(b.uniforms=this.uniforms,b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(b.color=this.color.getHex());1>this.opacity&&(b.opacity=this.opacity);!1!==this.transparent&&(b.transparent=this.transparent);!1!==this.wireframe&&(b.wireframe=this.wireframe);return b},clone:function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.alphaMap=this.alphaMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.alphaMap=this.alphaMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.alphaMap=this.alphaMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.type="MeshNormalMaterial";this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},d=0,f=this.materials.length;d<f;d++){e.materials.push(this.materials[d].toJSON())}return e},clone:function(){for(var d=new THREE.MeshFaceMaterial,c=0;c<this.materials.length;c++){d.materials.push(this.materials[c].clone())}return d}};THREE.PointCloudMaterial=function(b){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(b)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;THREE.PointCloudMaterial.prototype.clone=function(){var b=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleBasicMaterial=function(b){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(b)};THREE.ParticleSystemMaterial=function(b){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(b)};THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.RawShaderMaterial=function(b){THREE.ShaderMaterial.call(this,b);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var b=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,b);return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(b)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.rotation=this.rotation;b.fog=this.fog;return b};THREE.Texture=function(r,q,p,o,n,m,l,j,i){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.image=void 0!==r?r:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==q?q:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==l?l:THREE.RGBAFormat;this.type=void 0!==j?j:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdatefunction(){return this._needsUpdate},set needsUpdatefunction(b){!0===b&&this.update();this._needsUpdate=b},clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(r,q,p,o,n,m,l,j,i){q=void 0!==q?q:THREE.CubeReflectionMapping;THREE.Texture.call(this,r,q,p,o,n,m,l,j,i);this.images=r};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.clone=function(b){void 0===b&&(b=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,b);b.images=this.images;return b};THREE.CompressedTexture=function(v,u,t,s,r,q,o,m,l,j,i){THREE.Texture.call(this,null,q,o,m,l,j,s,r,i);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,o,m,l,j,i){THREE.Texture.call(this,null,q,o,m,l,j,s,r,i);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.VideoTexture=function(v,u,t,s,r,q,o,m,l){THREE.Texture.call(this,v,u,t,s,r,q,o,m,l);this.generateMipmaps=!1;var j=this,i=function(){requestAnimationFrame(i);v.readyState===v.HAVE_ENOUGH_DATA&&(j.needsUpdate=!0)};i()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.PointCloud=function(d,c){THREE.Object3D.call(this);this.type="PointCloud";this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.PointCloudMaterial({color:16777215*Math.random()})};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.constructor=THREE.PointCloud;THREE.PointCloud.prototype.raycast=function(){var d=new THREE.Matrix4,c=new THREE.Ray;return function(E,D){var C=this,B=C.geometry,A=E.params.PointCloud.threshold;d.getInverse(this.matrixWorld);c.copy(E.ray).applyMatrix4(d);if(null===B.boundingBox||!1!==c.isIntersectionBox(B.boundingBox)){var v=A/((this.scale.x+this.scale.y+this.scale.z)/3),o=new THREE.Vector3,A=function(h,q){var p=c.distanceToPoint(h);if(p<v){var n=c.closestPointToPoint(h);n.applyMatrix4(C.matrixWorld);var e=E.ray.origin.distanceTo(n);D.push({distance:e,distanceToRay:p,point:n.clone(),index:q,face:null,object:C})}};if(B instanceof THREE.BufferGeometry){var j=B.attributes,i=j.position.array;if(void 0!==j.index){var j=j.index.array,b=B.offsets;0===b.length&&(b=[{start:0,count:j.length,index:0}]);for(var l=0,G=b.length;l<G;++l){for(var H=b[l].start,a=b[l].index,B=H,H=H+b[l].count;B<H;B++){var F=a+j[B];o.fromArray(i,3*F);A(o,F)}}}else{for(j=i.length/3,B=0;B<j;B++){o.set(i[3*B],i[3*B+1],i[3*B+2]),A(o,B)}}}else{for(o=this.geometry.vertices,B=0;B<o.length;B++){A(o[B],B)}}}}}();THREE.PointCloud.prototype.clone=function(b){void 0===b&&(b=new THREE.PointCloud(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(d,c)};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.type="Line";this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==f?f:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,d=new THREE.Ray,f=new THREE.Sphere;return function(F,E){var D=F.linePrecision,D=D*D,B=this.geometry;null===B.boundingSphere&&B.computeBoundingSphere();f.copy(B.boundingSphere);f.applyMatrix4(this.matrixWorld);if(!1!==F.ray.isIntersectionSphere(f)){e.getInverse(this.matrixWorld);d.copy(F.ray).applyMatrix4(e);var A=new THREE.Vector3,o=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3,c=this.mode===THREE.LineStrip?1:2;if(B instanceof THREE.BufferGeometry){var l=B.attributes;if(void 0!==l.index){var J=l.index.array,l=l.position.array,K=B.offsets;0===K.length&&(K=[{start:0,count:J.length,index:0}]);for(var a=0;a<K.length;a++){for(var I=K[a].start,H=K[a].count,G=K[a].index,B=I;B<I+H-1;B+=c){var b=G+J[B+1];A.fromArray(l,3*(G+J[B]));o.fromArray(l,3*b);b=d.distanceSqToSegment(A,o,i,j);b>D||(b=d.origin.distanceTo(i),b<F.near||b>F.far||E.push({distance:b,point:j.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this}))}}}else{for(l=l.position.array,B=0;B<l.length/3-1;B+=c){A.fromArray(l,3*B),o.fromArray(l,3*B+3),b=d.distanceSqToSegment(A,o,i,j),b>D||(b=d.origin.distanceTo(i),b<F.near||b>F.far||E.push({distance:b,point:j.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this}))}}}else{if(B instanceof THREE.Geometry){for(A=B.vertices,o=A.length,B=0;B<o-1;B+=c){b=d.distanceSqToSegment(A[B],A[B+1],i,j),b>D||(b=d.origin.distanceTo(i),b<F.near||b>F.far||E.push({distance:b,point:j.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this}))}}}}}}();THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(d,c){THREE.Object3D.call(this);this.type="Mesh";this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,c=this.geometry.morphTargets.length;d<c;d++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.raycast=function(){var h=new THREE.Matrix4,g=new THREE.Ray,l=new THREE.Sphere,k=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3;return function(Q,P){var O=this.geometry;null===O.boundingSphere&&O.computeBoundingSphere();l.copy(O.boundingSphere);l.applyMatrix4(this.matrixWorld);if(!1!==Q.ray.isIntersectionSphere(l)&&(h.getInverse(this.matrixWorld),g.copy(Q.ray).applyMatrix4(h),null===O.boundingBox||!1!==g.isIntersectionBox(O.boundingBox))){if(O instanceof THREE.BufferGeometry){var M=this.material;if(void 0!==M){var L=O.attributes,K,N,D=Q.precision;if(void 0!==L.index){var H=L.index.array,J=L.position.array,A=O.offsets;0===A.length&&(A=[{start:0,count:H.length,index:0}]);for(var f=0,b=A.length;f<b;++f){for(var L=A[f].start,I=A[f].index,O=L,c=L+A[f].count;O<c;O+=3){L=I+H[O];K=I+H[O+1];N=I+H[O+2];k.fromArray(J,3*L);j.fromArray(J,3*K);i.fromArray(J,3*N);var o=M.side===THREE.BackSide?g.intersectTriangle(i,j,k,!0):g.intersectTriangle(k,j,i,M.side!==THREE.DoubleSide);if(null!==o){o.applyMatrix4(this.matrixWorld);var a=Q.ray.origin.distanceTo(o);a<D||a<Q.near||a>Q.far||P.push({distance:a,point:o,face:new THREE.Face3(L,K,N,THREE.Triangle.normal(k,j,i)),faceIndex:null,object:this})}}}}else{for(J=L.position.array,H=O=0,c=J.length;O<c;O+=3,H+=9){L=O,K=O+1,N=O+2,k.fromArray(J,H),j.fromArray(J,H+3),i.fromArray(J,H+6),o=M.side===THREE.BackSide?g.intersectTriangle(i,j,k,!0):g.intersectTriangle(k,j,i,M.side!==THREE.DoubleSide),null!==o&&(o.applyMatrix4(this.matrixWorld),a=Q.ray.origin.distanceTo(o),a<D||a<Q.near||a>Q.far||P.push({distance:a,point:o,face:new THREE.Face3(L,K,N,THREE.Triangle.normal(k,j,i)),faceIndex:null,object:this}))}}}}else{if(O instanceof THREE.Geometry){for(H=this.material instanceof THREE.MeshFaceMaterial,J=!0===H?this.material.materials:null,D=Q.precision,A=O.vertices,f=0,b=O.faces.length;f<b;f++){if(I=O.faces[f],M=!0===H?J[I.materialIndex]:this.material,void 0!==M){L=A[I.a];K=A[I.b];N=A[I.c];if(!0===M.morphTargets){o=O.morphTargets;a=this.morphTargetInfluences;k.set(0,0,0);j.set(0,0,0);i.set(0,0,0);for(var c=0,e=o.length;c<e;c++){var B=a[c];if(0!==B){var d=o[c].vertices;k.x+=(d[I.a].x-L.x)*B;k.y+=(d[I.a].y-L.y)*B;k.z+=(d[I.a].z-L.z)*B;j.x+=(d[I.b].x-K.x)*B;j.y+=(d[I.b].y-K.y)*B;j.z+=(d[I.b].z-K.z)*B;i.x+=(d[I.c].x-N.x)*B;i.y+=(d[I.c].y-N.y)*B;i.z+=(d[I.c].z-N.z)*B}}k.add(L);j.add(K);i.add(N);L=k;K=j;N=i}o=M.side===THREE.BackSide?g.intersectTriangle(N,K,L,!0):g.intersectTriangle(L,K,N,M.side!==THREE.DoubleSide);null!==o&&(o.applyMatrix4(this.matrixWorld),a=Q.ray.origin.distanceTo(o),a<D||a<Q.near||a>Q.far||P.push({distance:a,point:o,face:I,faceIndex:f,object:this}))}}}}}}}();THREE.Mesh.prototype.clone=function(d,c){void 0===d&&(d=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,d,c);return d};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Skeleton=function(e,d,f){this.useVertexTexture=void 0!==f?f:!0;this.identityMatrix=new THREE.Matrix4;e=e||[];this.bones=e.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===d){this.calculateInverses()}else{if(this.bones.length===d.length){this.boneInverses=d.slice(0)}else{for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],d=0,e=this.bones.length;d<e;d++){this.boneInverses.push(new THREE.Matrix4)}}}};THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,d=this.bones.length;e<d;e++){var f=new THREE.Matrix4;this.bones[e]&&f.getInverse(this.bones[e].matrixWorld);this.boneInverses.push(f)}};THREE.Skeleton.prototype.pose=function(){for(var e,d=0,f=this.bones.length;d<f;d++){(e=this.bones[d])&&e.matrixWorld.getInverse(this.boneInverses[d])}d=0;for(f=this.bones.length;d<f;d++){if(e=this.bones[d]){e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale)}}};THREE.Skeleton.prototype.update=function(){var b=new THREE.Matrix4;return function(){for(var a=0,d=this.bones.length;a<d;a++){b.multiplyMatrices(this.bones[a]?this.bones[a].matrixWorld:this.identityMatrix,this.boneInverses[a]),b.flattenToArrayOffset(this.boneMatrices,16*a)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh=function(r,q,p){THREE.Mesh.call(this,r,q);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;r=[];if(this.geometry&&void 0!==this.geometry.bones){for(var o,n,m,l,j=0,i=this.geometry.bones.length;j<i;++j){o=this.geometry.bones[j],n=o.pos,m=o.rotq,l=o.scl,q=new THREE.Bone(this),r.push(q),q.name=o.name,q.position.set(n[0],n[1],n[2]),q.quaternion.set(m[0],m[1],m[2],m[3]),void 0!==l?q.scale.set(l[0],l[1],l[2]):q.scale.set(1,1,1)}j=0;for(i=this.geometry.bones.length;j<i;++j){o=this.geometry.bones[j],-1!==o.parent?r[o.parent].add(r[j]):this.add(r[j])}}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(r,void 0,p))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(d,c){this.skeleton=d;void 0===c&&(this.updateMatrixWorld(!0),c=this.matrixWorld);this.bindMatrix.copy(c);this.bindMatrixInverse.getInverse(c)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}}};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(b){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.type="MorphAnimMesh";this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)_?(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var l=j.morphTargets[n].name.match(o);if(l&&1<l.length){l=l[1];p[l]||(p[l]={start:Infinity,end:-Infinity});var k=p[l];n<k.start&&(k.start=n);n>k.end&&(k.end=n);i||(i=l)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=(f.end-f.start)/d*1000,this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.interpolateTargets=function(h,g,l){for(var k=this.morphTargetInfluences,j=0,i=k.length;j<i;j++){k[j]=0}-1<h&&(k[h]=1-l);-1<g&&(k[g]=l)};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);d=Math.abs(d);for(var f=0;f<this.objects.length&&!(d<this.objects[f].distance);f++){}this.objects.splice(f,0,{distance:d,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var d=1,f=this.objects.length;d<f&&!(e<this.objects[d].distance);d++){}return this.objects[d-1].object};THREE.LOD.prototype.raycast=function(){var b=new THREE.Vector3;return function(a,f){b.setFromMatrixPosition(this.matrixWorld);var e=a.ray.origin.distanceTo(b);this.getObjectForDistance(e).raycast(a,f)}}();THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f){if(1<this.objects.length){d.setFromMatrixPosition(f.matrixWorld);c.setFromMatrixPosition(this.matrixWorld);f=d.distanceTo(c);this.objects[0].object.visible=!0;for(var b=1,a=this.objects.length;b<a;b++){if(f>=this.objects[b].distance){this.objects[b-1].object.visible=!1,this.objects[b].object.visible=!0}else{break}}for(;b<a;b++){this.objects[b].object.visible=!1}}}}();THREE.LOD.prototype.clone=function(f){void 0===f&&(f=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,f);for(var e=0,h=this.objects.length;e<h;e++){var g=this.objects[e].object.clone();g.visible=0===e;f.addLevel(g,this.objects[e].distance)}return f};THREE.Sprite=function(){var f=new Uint16Array([0,1,2,0,2,3]),e=new Float32Array([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0,-0.5,0.5,0]),h=new Float32Array([0,0,1,0,1,1,0,1]),g=new THREE.BufferGeometry;g.addAttribute("index",new THREE.BufferAttribute(f,1));g.addAttribute("position",new THREE.BufferAttribute(e,3));g.addAttribute("uv",new THREE.BufferAttribute(h,2));return function(b){THREE.Object3D.call(this);this.type="Sprite";this.geometry=g;this.material=void 0!==b?b:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var b=new THREE.Vector3;return function(a,f){b.setFromMatrixPosition(this.matrixWorld);var e=a.ray.distanceToPoint(b);e>this.scale.x||f.push({distance:e,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Particle=THREE.Sprite;THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=j.x*Math.PI*0.25,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.clone=function(b){void 0===b&&(b=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,b);null!==this.fog&&(b.fog=this.fog.clone());null!==this.overrideMaterial&&(b.overrideMaterial=this.overrideMaterial.clone());b.autoUpdate=this.autoUpdate;b.matrixAutoUpdate=this.matrixAutoUpdate;return b};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t\t\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tenvColor.xyz *= envColor.xyz;\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\tgl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif";THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n\tvec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n\tvec3 objectNormal = morphedNormal;\n\n#else\n\n\tvec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#elif defined( USE_MORPHTARGETS )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif";THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";THREE.UniformsUtils={merge:function(g){for(var f={},j=0;j<g.length;j++){var i=this.clone(g[j]),h;for(h in i){f[h]=i[h]}}return f},clone:function(g){var f={},j;for(j in g){f[j]={};for(var i in g[j]){var h=g[j][i];f[j][i]=h instanceof THREE.Color||h instanceof THREE.Vector2||h instanceof THREE.Vector3||h instanceof THREE.Vector4||h instanceof THREE.Matrix4||h instanceof THREE.Texture?h.clone():h instanceof Array?h.slice():h}}return f}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);\nsampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};THREE.WebGLRenderer=function(aV){function aU(h){var g=h.geometry;h=h.material;var n=g.vertices.length;if(h.attributes){void 0===g.__webglCustomAttributesList&&(g.__webglCustomAttributesList=[]);for(var m in h.attributes){var l=h.attributes[m];if(!l.__webglInitialized||l.createUniqueBuffers){l.__webglInitialized=!0;var k=1;"v2"===l.type?k=2:"v3"===l.type?k=3:"v4"===l.type?k=4:"c"===l.type&&(k=3);l.size=k;l.array=new Float32Array(n*k);l.buffer=aF.createBuffer();l.buffer.belongsToAttribute=m;l.needsUpdate=!0}g.__webglCustomAttributesList.push(l)}}}function aT(A,v){var u=v.geometry,t=A.faces3,s=3*t.length,r=1*t.length,q=3*t.length,t=aS(v,A);A.__vertexArray=new Float32Array(3*s);A.__normalArray=new Float32Array(3*s);A.__colorArray=new Float32Array(3*s);A.__uvArray=new Float32Array(2*s);1<u.faceVertexUvs.length&&(A.__uv2Array=new Float32Array(2*s));u.hasTangents&&(A.__tangentArray=new Float32Array(4*s));v.geometry.skinWeights.length&&v.geometry.skinIndices.length&&(A.__skinIndexArray=new Float32Array(4*s),A.__skinWeightArray=new Float32Array(4*s));u=null!==bx.get("OES_element_index_uint")&&21845<r?Uint32Array:Uint16Array;A.__typeArray=u;A.__faceArray=new u(3*r);A.__lineArray=new u(2*q);var p=A.numMorphTargets;if(p){for(A.__morphTargetsArrays=[],u=0;u<p;u++){A.__morphTargetsArrays.push(new Float32Array(3*s))}}if(p=A.numMorphNormals){for(A.__morphNormalsArrays=[],u=0;u<p;u++){A.__morphNormalsArrays.push(new Float32Array(3*s))}}A.__webglFaceCount=3*r;A.__webglLineCount=2*q;if(t.attributes){void 0===A.__webglCustomAttributesList&&(A.__webglCustomAttributesList=[]);for(var l in t.attributes){var r=t.attributes[l],q={},d;for(d in r){q[d]=r[d]}if(!q.__webglInitialized||q.createUniqueBuffers){q.__webglInitialized=!0,u=1,"v2"===q.type?u=2:"v3"===q.type?u=3:"v4"===q.type?u=4:"c"===q.type&&(u=3),q.size=u,q.array=new Float32Array(s*u),q.buffer=aF.createBuffer(),q.buffer.belongsToAttribute=l,r.needsUpdate=!0,q.__original=r}A.__webglCustomAttributesList.push(q)}}A.__inittedArrays=!0}function aS(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aQ(A,v,u,t){u=u.attributes;var s=v.attributes;v=v.attributesKeys;for(var r=0,q=v.length;r<q;r++){var l=v[r],h=s[l];if(0<=h){var g=u[l];void 0!==g?(l=g.itemSize,aF.bindBuffer(aF.ARRAY_BUFFER,g.buffer),aM(h),aF.vertexAttribPointer(h,l,aF.FLOAT,!1,0,t*l*4)):void 0!==A.defaultAttributeValues&&(2===A.defaultAttributeValues[l].length?aF.vertexAttrib2fv(h,A.defaultAttributeValues[l]):3===A.defaultAttributeValues[l].length&&aF.vertexAttrib3fv(h,A.defaultAttributeValues[l]))}}aL()}function aO(){for(var d=0,c=Z.length;d<c;d++){Z[d]=0}}function aM(b){Z[b]=1;0===bW[b]&&(aF.enableVertexAttribArray(b),bW[b]=1)}function aL(){for(var d=0,c=bW.length;d<c;d++){bW[d]!==Z[d]&&(aF.disableVertexAttribArray(d),bW[d]=0)}}function aH(d,c){return d.material.id!==c.material.id?d.material.id-c.material.id:d.z!==c.z?d.z-c.z:d.id-c.id}function aD(d,c){return d.z!==c.z?c.z-d.z:d.id-c.id}function aC(d,c){return c[0]-d[0]}function aB(u){if(!1!==u.visible){if(!(u instanceof THREE.Scene||u instanceof THREE.Group)){void 0===u.__webglInit&&(u.__webglInit=!0,u._modelViewMatrix=new THREE.Matrix4,u._normalMatrix=new THREE.Matrix3,u.addEventListener("removed",aG));var t=u.geometry;if(void 0!==t&&void 0===t.__webglInit){if(t.__webglInit=!0,t.addEventListener("dispose",ai),t instanceof THREE.BufferGeometry){bd.info.memory.geometries++}else{if(u instanceof THREE.Mesh){aA(u,t)}else{if(u instanceof THREE.Line){if(void 0===t.__webglVertexBuffer){t.__webglVertexBuffer=aF.createBuffer();t.__webglColorBuffer=aF.createBuffer();t.__webglLineDistanceBuffer=aF.createBuffer();bd.info.memory.geometries++;var s=t.vertices.length;t.__vertexArray=new Float32Array(3*s);t.__colorArray=new Float32Array(3*s);t.__lineDistanceArray=new Float32Array(1*s);t.__webglLineCount=s;aU(u);t.verticesNeedUpdate=!0;t.colorsNeedUpdate=!0;t.lineDistancesNeedUpdate=!0}}else{u instanceof THREE.PointCloud&&void 0===t.__webglVertexBuffer&&(t.__webglVertexBuffer=aF.createBuffer(),t.__webglColorBuffer=aF.createBuffer(),bd.info.memory.geometries++,s=t.vertices.length,t.__vertexArray=new Float32Array(3*s),t.__colorArray=new Float32Array(3*s),t.__sortArray=[],t.__webglParticleCount=s,aU(u),t.verticesNeedUpdate=!0,t.colorsNeedUpdate=!0)}}}}if(void 0===u.__webglActive){if(u.__webglActive=!0,u instanceof THREE.Mesh){if(t instanceof THREE.BufferGeometry){ax(ab,t,u)}else{if(t instanceof THREE.Geometry){for(var t=bG[t.id],s=0,r=t.length;s<r;s++){ax(ab,t[s],u)}}}}else{u instanceof THREE.Line||u instanceof THREE.PointCloud?ax(ab,t,u):(u instanceof THREE.ImmediateRenderObject||u.immediateRenderCallback)&&bS.push({id:null,object:u,opaque:null,transparent:null,z:0})}}if(u instanceof THREE.Light){an.push(u)}else{if(u instanceof THREE.Sprite){br.push(u)}else{if(u instanceof THREE.LensFlare){R.push(u)}else{if((t=ab[u.id])&&(!1===u.frustumCulled||!0===aY.intersectsObject(u))){for(s=0,r=t.length;s<r;s++){var q=t[s],p=q,n=p.object,l=p.buffer,b=n.geometry,n=n.material;n instanceof THREE.MeshFaceMaterial?(n=n.materials[b instanceof THREE.BufferGeometry?0:l.materialIndex],p.material=n,n.transparent?bw.push(p):bL.push(p)):n&&(p.material=n,n.transparent?bw.push(p):bL.push(p));q.render=!0;!0===bd.sortObjects&&(aK.setFromMatrixPosition(u.matrixWorld),aK.applyProjection(ap),q.z=aK.z)}}}}}}s=0;for(r=u.children.length;s<r;s++){aB(u.children[s])}}}function aE(D,C,A,v,u,t){for(var s,r=0,p=D.length;r<p;r++){s=D[r];var q=s.object,n=s.buffer;bg(q,C);if(t){s=t}else{s=s.material;if(!s){continue}u&&bd.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst);bd.setDepthTest(s.depthTest);bd.setDepthWrite(s.depthWrite);bq(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}bd.setMaterialFaces(s);n instanceof THREE.BufferGeometry?bd.renderBufferDirect(C,A,v,s,n,q):bd.renderBuffer(C,A,v,s,n,q)}}function ay(D,C,A,v,u,t,s){for(var r,p=0,q=D.length;p<q;p++){r=D[p];var n=r.object;if(n.visible){if(s){r=s}else{r=r[C];if(!r){continue}t&&bd.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst);bd.setDepthTest(r.depthTest);bd.setDepthWrite(r.depthWrite);bq(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits)}bd.renderImmediateObject(A,v,u,r,n)}}}function az(d){var c=d.object.material;c.transparent?(d.transparent=c,d.opaque=null):(d.opaque=c,d.transparent=null)}function aA(L,K){var I=L.material,H=!1;if(void 0===bG[K.id]||!0===K.groupsNeedUpdate){delete ab[L.id];for(var G=bG,F=K.id,I=I instanceof THREE.MeshFaceMaterial,E=bx.get("OES_element_index_uint")?4294967296:65535,D,H={},C=K.morphTargets.length,A=K.morphNormals.length,u,l={},c=[],N=0,O=K.faces.length;N<O;N++){D=K.faces[N];var M=I?D.materialIndex:0;M in H||(H[M]={hash:M,counter:0});D=H[M].hash+"_"+H[M].counter;D in l||(u={id:V++,faces3:[],materialIndex:M,vertices:0,numMorphTargets:C,numMorphNormals:A},l[D]=u,c.push(u));l[D].vertices+3>E&&(H[M].counter+=1,D=H[M].hash+"_"+H[M].counter,D in l||(u={id:V++,faces3:[],materialIndex:M,vertices:0,numMorphTargets:C,numMorphNormals:A},l[D]=u,c.push(u)));l[D].faces3.push(N);l[D].vertices+=3}G[F]=c;K.groupsNeedUpdate=!1}G=bG[K.id];F=0;for(I=G.length;F<I;F++){E=G[F];if(void 0===E.__webglVertexBuffer){H=E;H.__webglVertexBuffer=aF.createBuffer();H.__webglNormalBuffer=aF.createBuffer();H.__webglTangentBuffer=aF.createBuffer();H.__webglColorBuffer=aF.createBuffer();H.__webglUVBuffer=aF.createBuffer();H.__webglUV2Buffer=aF.createBuffer();H.__webglSkinIndicesBuffer=aF.createBuffer();H.__webglSkinWeightsBuffer=aF.createBuffer();H.__webglFaceBuffer=aF.createBuffer();H.__webglLineBuffer=aF.createBuffer();if(A=H.numMorphTargets){for(H.__webglMorphTargetsBuffers=[],C=0;C<A;C++){H.__webglMorphTargetsBuffers.push(aF.createBuffer())}}if(A=H.numMorphNormals){for(H.__webglMorphNormalsBuffers=[],C=0;C<A;C++){H.__webglMorphNormalsBuffers.push(aF.createBuffer())}}bd.info.memory.geometries++;aT(E,L);K.verticesNeedUpdate=!0;K.morphTargetsNeedUpdate=!0;K.elementsNeedUpdate=!0;K.uvsNeedUpdate=!0;K.normalsNeedUpdate=!0;K.tangentsNeedUpdate=!0;H=K.colorsNeedUpdate=!0}else{H=!1}(H||void 0===L.__webglActive)&&ax(ab,E,L)}L.__webglActive=!0}function ax(f,e,h){var g=h.id;f[g]=f[g]||[];f[g].push({id:g,buffer:e,object:h,material:null,z:0})}function aw(dr){var dq=dr.geometry;if(dq instanceof THREE.BufferGeometry){for(var dp=dq.attributes,dm=dq.attributesKeys,dk=0,di=dm.length;dk<di;dk++){var dh=dm[dk],dg=dp[dh];void 0===dg.buffer&&(dg.buffer=aF.createBuffer(),dg.needsUpdate=!0);if(!0===dg.needsUpdate){var df="index"===dh?aF.ELEMENT_ARRAY_BUFFER:aF.ARRAY_BUFFER;aF.bindBuffer(df,dg.buffer);aF.bufferData(df,dg.array,aF.STATIC_DRAW);dg.needsUpdate=!1}}}else{if(dr instanceof THREE.Mesh){!0===dq.groupsNeedUpdate&&aA(dr,dq);for(var de=bG[dq.id],dk=0,c9=de.length;dk<c9;dk++){var c6=de[dk],c7=aS(dr,c6);!0===dq.groupsNeedUpdate&&aT(c6,dr);var c5=c7.attributes&&ar(c7);if(dq.verticesNeedUpdate||dq.morphTargetsNeedUpdate||dq.elementsNeedUpdate||dq.uvsNeedUpdate||dq.normalsNeedUpdate||dq.colorsNeedUpdate||dq.tangentsNeedUpdate||c5){var c4=c6,c2=dr,c0=aF.DYNAMIC_DRAW,dT=!dq.dynamic,dW=c7;if(c4.__inittedArrays){var dX=dW&&void 0!==dW.shading&&dW.shading===THREE.SmoothShading,c3=void 0,dV=void 0,dP=void 0,dZ=void 0,dH=void 0,dL=void 0,dN=void 0,dK=void 0,dJ=void 0,dC=void 0,dB=void 0,dR=void 0,dM=void 0,dy=void 0,dz=void 0,c1=void 0,cw=void 0,cE=void 0,bZ=void 0,cA=void 0,el=void 0,ee=void 0,ep=void 0,d9=void 0,cs=void 0,dI=void 0,cO=void 0,cH=void 0,ej=void 0,dx=void 0,cv=void 0,cS=void 0,ci=void 0,cG=void 0,eh=void 0,bX=void 0,d5=void 0,ed=void 0,cN=void 0,d=void 0,cC=0,d7=0,ei=0,en=0,cT=0,dG=0,d3=0,d4=0,cu=0,ck=0,cL=0,dO=0,cy=void 0,dS=c4.__vertexArray,b4=c4.__uvArray,du=c4.__uv2Array,cm=c4.__normalArray,cq=c4.__tangentArray,dl=c4.__colorArray,cY=c4.__skinIndexArray,cQ=c4.__skinWeightArray,d1=c4.__morphTargetsArrays,C=c4.__morphNormalsArrays,cZ=c4.__webglCustomAttributesList,dY=void 0,cV=c4.__faceArray,cD=c4.__lineArray,dv=c2.geometry,r=dv.elementsNeedUpdate,cJ=dv.uvsNeedUpdate,cF=dv.normalsNeedUpdate,eg=dv.tangentsNeedUpdate,d2=dv.colorsNeedUpdate,c=dv.morphTargetsNeedUpdate,cp=dv.vertices,dA=c4.faces3,dt=dv.faces,dd=dv.faceVertexUvs[0],ch=dv.faceVertexUvs[1],cl=dv.skinIndices,ef=dv.skinWeights,b6=dv.morphTargets,dF=dv.morphNormals;if(dv.verticesNeedUpdate){c3=0;for(dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dR=cp[dZ.a],dM=cp[dZ.b],dy=cp[dZ.c],dS[d7]=dR.x,dS[d7+1]=dR.y,dS[d7+2]=dR.z,dS[d7+3]=dM.x,dS[d7+4]=dM.y,dS[d7+5]=dM.z,dS[d7+6]=dy.x,dS[d7+7]=dy.y,dS[d7+8]=dy.z,d7+=9}aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglVertexBuffer);aF.bufferData(aF.ARRAY_BUFFER,dS,c0)}if(c){for(eh=0,bX=b6.length;eh<bX;eh++){c3=cL=0;for(dV=dA.length;c3<dV;c3++){cN=dA[c3],dZ=dt[cN],dR=b6[eh].vertices[dZ.a],dM=b6[eh].vertices[dZ.b],dy=b6[eh].vertices[dZ.c],d5=d1[eh],d5[cL]=dR.x,d5[cL+1]=dR.y,d5[cL+2]=dR.z,d5[cL+3]=dM.x,d5[cL+4]=dM.y,d5[cL+5]=dM.z,d5[cL+6]=dy.x,d5[cL+7]=dy.y,d5[cL+8]=dy.z,dW.morphNormals&&(dX?(d=dF[eh].vertexNormals[cN],cE=d.a,bZ=d.b,cA=d.c):cA=bZ=cE=dF[eh].faceNormals[cN],ed=C[eh],ed[cL]=cE.x,ed[cL+1]=cE.y,ed[cL+2]=cE.z,ed[cL+3]=bZ.x,ed[cL+4]=bZ.y,ed[cL+5]=bZ.z,ed[cL+6]=cA.x,ed[cL+7]=cA.y,ed[cL+8]=cA.z),cL+=9}aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglMorphTargetsBuffers[eh]);aF.bufferData(aF.ARRAY_BUFFER,d1[eh],c0);dW.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglMorphNormalsBuffers[eh]),aF.bufferData(aF.ARRAY_BUFFER,C[eh],c0))}}if(ef.length){c3=0;for(dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],d9=ef[dZ.a],cs=ef[dZ.b],dI=ef[dZ.c],cQ[ck]=d9.x,cQ[ck+1]=d9.y,cQ[ck+2]=d9.z,cQ[ck+3]=d9.w,cQ[ck+4]=cs.x,cQ[ck+5]=cs.y,cQ[ck+6]=cs.z,cQ[ck+7]=cs.w,cQ[ck+8]=dI.x,cQ[ck+9]=dI.y,cQ[ck+10]=dI.z,cQ[ck+11]=dI.w,cO=cl[dZ.a],cH=cl[dZ.b],ej=cl[dZ.c],cY[ck]=cO.x,cY[ck+1]=cO.y,cY[ck+2]=cO.z,cY[ck+3]=cO.w,cY[ck+4]=cH.x,cY[ck+5]=cH.y,cY[ck+6]=cH.z,cY[ck+7]=cH.w,cY[ck+8]=ej.x,cY[ck+9]=ej.y,cY[ck+10]=ej.z,cY[ck+11]=ej.w,ck+=12}0<ck&&(aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglSkinIndicesBuffer),aF.bufferData(aF.ARRAY_BUFFER,cY,c0),aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglSkinWeightsBuffer),aF.bufferData(aF.ARRAY_BUFFER,cQ,c0))}if(d2){c3=0;for(dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dN=dZ.vertexColors,dK=dZ.color,3===dN.length&&dW.vertexColors===THREE.VertexColors?(el=dN[0],ee=dN[1],ep=dN[2]):ep=ee=el=dK,dl[cu]=el.r,dl[cu+1]=el.g,dl[cu+2]=el.b,dl[cu+3]=ee.r,dl[cu+4]=ee.g,dl[cu+5]=ee.b,dl[cu+6]=ep.r,dl[cu+7]=ep.g,dl[cu+8]=ep.b,cu+=9}0<cu&&(aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglColorBuffer),aF.bufferData(aF.ARRAY_BUFFER,dl,c0))}if(eg&&dv.hasTangents){c3=0;for(dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dJ=dZ.vertexTangents,dz=dJ[0],c1=dJ[1],cw=dJ[2],cq[d3]=dz.x,cq[d3+1]=dz.y,cq[d3+2]=dz.z,cq[d3+3]=dz.w,cq[d3+4]=c1.x,cq[d3+5]=c1.y,cq[d3+6]=c1.z,cq[d3+7]=c1.w,cq[d3+8]=cw.x,cq[d3+9]=cw.y,cq[d3+10]=cw.z,cq[d3+11]=cw.w,d3+=12}aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglTangentBuffer);aF.bufferData(aF.ARRAY_BUFFER,cq,c0)}if(cF){c3=0;for(dV=dA.length;c3<dV;c3++){if(dZ=dt[dA[c3]],dH=dZ.vertexNormals,dL=dZ.normal,3===dH.length&&dX){for(dx=0;3>dx;dx++){cS=dH[dx],cm[dG]=cS.x,cm[dG+1]=cS.y,cm[dG+2]=cS.z,dG+=3}}else{for(dx=0;3>dx;dx++){cm[dG]=dL.x,cm[dG+1]=dL.y,cm[dG+2]=dL.z,dG+=3}}}aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglNormalBuffer);aF.bufferData(aF.ARRAY_BUFFER,cm,c0)}if(cJ&&dd){c3=0;for(dV=dA.length;c3<dV;c3++){if(dP=dA[c3],dC=dd[dP],void 0!==dC){for(dx=0;3>dx;dx++){ci=dC[dx],b4[ei]=ci.x,b4[ei+1]=ci.y,ei+=2}}}0<ei&&(aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglUVBuffer),aF.bufferData(aF.ARRAY_BUFFER,b4,c0))}if(cJ&&ch){c3=0;for(dV=dA.length;c3<dV;c3++){if(dP=dA[c3],dB=ch[dP],void 0!==dB){for(dx=0;3>dx;dx++){cG=dB[dx],du[en]=cG.x,du[en+1]=cG.y,en+=2}}}0<en&&(aF.bindBuffer(aF.ARRAY_BUFFER,c4.__webglUV2Buffer),aF.bufferData(aF.ARRAY_BUFFER,du,c0))}if(r){c3=0;for(dV=dA.length;c3<dV;c3++){cV[cT]=cC,cV[cT+1]=cC+1,cV[cT+2]=cC+2,cT+=3,cD[d4]=cC,cD[d4+1]=cC+1,cD[d4+2]=cC,cD[d4+3]=cC+2,cD[d4+4]=cC+1,cD[d4+5]=cC+2,d4+=6,cC+=3}aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,c4.__webglFaceBuffer);aF.bufferData(aF.ELEMENT_ARRAY_BUFFER,cV,c0);aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,c4.__webglLineBuffer);aF.bufferData(aF.ELEMENT_ARRAY_BUFFER,cD,c0)}if(cZ){for(dx=0,cv=cZ.length;dx<cv;dx++){if(dY=cZ[dx],dY.__original.needsUpdate){dO=0;if(1===dY.size){if(void 0===dY.boundTo||"vertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dY.array[dO]=dY.value[dZ.a],dY.array[dO+1]=dY.value[dZ.b],dY.array[dO+2]=dY.value[dZ.c],dO+=3}}else{if("faces"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){cy=dY.value[dA[c3]],dY.array[dO]=cy,dY.array[dO+1]=cy,dY.array[dO+2]=cy,dO+=3}}}}else{if(2===dY.size){if(void 0===dY.boundTo||"vertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dR=dY.value[dZ.a],dM=dY.value[dZ.b],dy=dY.value[dZ.c],dY.array[dO]=dR.x,dY.array[dO+1]=dR.y,dY.array[dO+2]=dM.x,dY.array[dO+3]=dM.y,dY.array[dO+4]=dy.x,dY.array[dO+5]=dy.y,dO+=6}}else{if("faces"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dy=dM=dR=cy=dY.value[dA[c3]],dY.array[dO]=dR.x,dY.array[dO+1]=dR.y,dY.array[dO+2]=dM.x,dY.array[dO+3]=dM.y,dY.array[dO+4]=dy.x,dY.array[dO+5]=dy.y,dO+=6}}}}else{if(3===dY.size){var dD;dD="c"===dY.type?["r","g","b"]:["x","y","z"];if(void 0===dY.boundTo||"vertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dR=dY.value[dZ.a],dM=dY.value[dZ.b],dy=dY.value[dZ.c],dY.array[dO]=dR[dD[0]],dY.array[dO+1]=dR[dD[1]],dY.array[dO+2]=dR[dD[2]],dY.array[dO+3]=dM[dD[0]],dY.array[dO+4]=dM[dD[1]],dY.array[dO+5]=dM[dD[2]],dY.array[dO+6]=dy[dD[0]],dY.array[dO+7]=dy[dD[1]],dY.array[dO+8]=dy[dD[2]],dO+=9}}else{if("faces"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dy=dM=dR=cy=dY.value[dA[c3]],dY.array[dO]=dR[dD[0]],dY.array[dO+1]=dR[dD[1]],dY.array[dO+2]=dR[dD[2]],dY.array[dO+3]=dM[dD[0]],dY.array[dO+4]=dM[dD[1]],dY.array[dO+5]=dM[dD[2]],dY.array[dO+6]=dy[dD[0]],dY.array[dO+7]=dy[dD[1]],dY.array[dO+8]=dy[dD[2]],dO+=9}}else{if("faceVertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){cy=dY.value[dA[c3]],dR=cy[0],dM=cy[1],dy=cy[2],dY.array[dO]=dR[dD[0]],dY.array[dO+1]=dR[dD[1]],dY.array[dO+2]=dR[dD[2]],dY.array[dO+3]=dM[dD[0]],dY.array[dO+4]=dM[dD[1]],dY.array[dO+5]=dM[dD[2]],dY.array[dO+6]=dy[dD[0]],dY.array[dO+7]=dy[dD[1]],dY.array[dO+8]=dy[dD[2]],dO+=9}}}}}else{if(4===dY.size){if(void 0===dY.boundTo||"vertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dZ=dt[dA[c3]],dR=dY.value[dZ.a],dM=dY.value[dZ.b],dy=dY.value[dZ.c],dY.array[dO]=dR.x,dY.array[dO+1]=dR.y,dY.array[dO+2]=dR.z,dY.array[dO+3]=dR.w,dY.array[dO+4]=dM.x,dY.array[dO+5]=dM.y,dY.array[dO+6]=dM.z,dY.array[dO+7]=dM.w,dY.array[dO+8]=dy.x,dY.array[dO+9]=dy.y,dY.array[dO+10]=dy.z,dY.array[dO+11]=dy.w,dO+=12}}else{if("faces"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){dy=dM=dR=cy=dY.value[dA[c3]],dY.array[dO]=dR.x,dY.array[dO+1]=dR.y,dY.array[dO+2]=dR.z,dY.array[dO+3]=dR.w,dY.array[dO+4]=dM.x,dY.array[dO+5]=dM.y,dY.array[dO+6]=dM.z,dY.array[dO+7]=dM.w,dY.array[dO+8]=dy.x,dY.array[dO+9]=dy.y,dY.array[dO+10]=dy.z,dY.array[dO+11]=dy.w,dO+=12}}else{if("faceVertices"===dY.boundTo){for(c3=0,dV=dA.length;c3<dV;c3++){cy=dY.value[dA[c3]],dR=cy[0],dM=cy[1],dy=cy[2],dY.array[dO]=dR.x,dY.array[dO+1]=dR.y,dY.array[dO+2]=dR.z,dY.array[dO+3]=dR.w,dY.array[dO+4]=dM.x,dY.array[dO+5]=dM.y,dY.array[dO+6]=dM.z,dY.array[dO+7]=dM.w,dY.array[dO+8]=dy.x,dY.array[dO+9]=dy.y,dY.array[dO+10]=dy.z,dY.array[dO+11]=dy.w,dO+=12}}}}}}}}aF.bindBuffer(aF.ARRAY_BUFFER,dY.buffer);aF.bufferData(aF.ARRAY_BUFFER,dY.array,c0)}}}dT&&(delete c4.__inittedArrays,delete c4.__colorArray,delete c4.__normalArray,delete c4.__tangentArray,delete c4.__uvArray,delete c4.__uv2Array,delete c4.__faceArray,delete c4.__vertexArray,delete c4.__lineArray,delete c4.__skinIndexArray,delete c4.__skinWeightArray)}}}dq.verticesNeedUpdate=!1;dq.morphTargetsNeedUpdate=!1;dq.elementsNeedUpdate=!1;dq.uvsNeedUpdate=!1;dq.normalsNeedUpdate=!1;dq.colorsNeedUpdate=!1;dq.tangentsNeedUpdate=!1;c7.attributes&&bm(c7)}else{if(dr instanceof THREE.Line){c7=aS(dr,dq);c5=c7.attributes&&ar(c7);if(dq.verticesNeedUpdate||dq.colorsNeedUpdate||dq.lineDistancesNeedUpdate||c5){var dw=aF.DYNAMIC_DRAW,b7,b1,cx,bY,dU,cz,co=dq.vertices,cd=dq.colors,b2=dq.lineDistances,cR=co.length,l=cd.length,em=b2.length,eo=dq.__vertexArray,cK=dq.__colorArray,b0=dq.__lineDistanceArray,cI=dq.colorsNeedUpdate,ct=dq.lineDistancesNeedUpdate,cr=dq.__webglCustomAttributesList,cM,cj,cg,cX,ce,dn;if(dq.verticesNeedUpdate){for(b7=0;b7<cR;b7++){bY=co[b7],dU=3*b7,eo[dU]=bY.x,eo[dU+1]=bY.y,eo[dU+2]=bY.z}aF.bindBuffer(aF.ARRAY_BUFFER,dq.__webglVertexBuffer);aF.bufferData(aF.ARRAY_BUFFER,eo,dw)}if(cI){for(b1=0;b1<l;b1++){cz=cd[b1],dU=3*b1,cK[dU]=cz.r,cK[dU+1]=cz.g,cK[dU+2]=cz.b}aF.bindBuffer(aF.ARRAY_BUFFER,dq.__webglColorBuffer);aF.bufferData(aF.ARRAY_BUFFER,cK,dw)}if(ct){for(cx=0;cx<em;cx++){b0[cx]=b2[cx]}aF.bindBuffer(aF.ARRAY_BUFFER,dq.__webglLineDistanceBuffer);aF.bufferData(aF.ARRAY_BUFFER,b0,dw)}if(cr){for(cM=0,cj=cr.length;cM<cj;cM++){if(dn=cr[cM],dn.needsUpdate&&(void 0===dn.boundTo||"vertices"===dn.boundTo)){dU=0;cX=dn.value.length;if(1===dn.size){for(cg=0;cg<cX;cg++){dn.array[cg]=dn.value[cg]}}else{if(2===dn.size){for(cg=0;cg<cX;cg++){ce=dn.value[cg],dn.array[dU]=ce.x,dn.array[dU+1]=ce.y,dU+=2}}else{if(3===dn.size){if("c"===dn.type){for(cg=0;cg<cX;cg++){ce=dn.value[cg],dn.array[dU]=ce.r,dn.array[dU+1]=ce.g,dn.array[dU+2]=ce.b,dU+=3}}else{for(cg=0;cg<cX;cg++){ce=dn.value[cg],dn.array[dU]=ce.x,dn.array[dU+1]=ce.y,dn.array[dU+2]=ce.z,dU+=3}}}else{if(4===dn.size){for(cg=0;cg<cX;cg++){ce=dn.value[cg],dn.array[dU]=ce.x,dn.array[dU+1]=ce.y,dn.array[dU+2]=ce.z,dn.array[dU+3]=ce.w,dU+=4}}}}}aF.bindBuffer(aF.ARRAY_BUFFER,dn.buffer);aF.bufferData(aF.ARRAY_BUFFER,dn.array,dw);dn.needsUpdate=!1}}}}dq.verticesNeedUpdate=!1;dq.colorsNeedUpdate=!1;dq.lineDistancesNeedUpdate=!1;c7.attributes&&bm(c7)}else{if(dr instanceof THREE.PointCloud){c7=aS(dr,dq);c5=c7.attributes&&ar(c7);if(dq.verticesNeedUpdate||dq.colorsNeedUpdate||c5){var b8=aF.DYNAMIC_DRAW,ek,d6,d0,b9,ec,cn=dq.vertices,cf=cn.length,cB=dq.colors,dE=cB.length,dQ=dq.__vertexArray,dj=dq.__colorArray,c8=dq.colorsNeedUpdate,ds=dq.__webglCustomAttributesList,cU,d8,b5,cP,b3,cW;if(dq.verticesNeedUpdate){for(ek=0;ek<cf;ek++){d0=cn[ek],b9=3*ek,dQ[b9]=d0.x,dQ[b9+1]=d0.y,dQ[b9+2]=d0.z}aF.bindBuffer(aF.ARRAY_BUFFER,dq.__webglVertexBuffer);aF.bufferData(aF.ARRAY_BUFFER,dQ,b8)}if(c8){for(d6=0;d6<dE;d6++){ec=cB[d6],b9=3*d6,dj[b9]=ec.r,dj[b9+1]=ec.g,dj[b9+2]=ec.b}aF.bindBuffer(aF.ARRAY_BUFFER,dq.__webglColorBuffer);aF.bufferData(aF.ARRAY_BUFFER,dj,b8)}if(ds){for(cU=0,d8=ds.length;cU<d8;cU++){cW=ds[cU];if(cW.needsUpdate&&(void 0===cW.boundTo||"vertices"===cW.boundTo)){if(cP=cW.value.length,b9=0,1===cW.size){for(b5=0;b5<cP;b5++){cW.array[b5]=cW.value[b5]}}else{if(2===cW.size){for(b5=0;b5<cP;b5++){b3=cW.value[b5],cW.array[b9]=b3.x,cW.array[b9+1]=b3.y,b9+=2}}else{if(3===cW.size){if("c"===cW.type){for(b5=0;b5<cP;b5++){b3=cW.value[b5],cW.array[b9]=b3.r,cW.array[b9+1]=b3.g,cW.array[b9+2]=b3.b,b9+=3}}else{for(b5=0;b5<cP;b5++){b3=cW.value[b5],cW.array[b9]=b3.x,cW.array[b9+1]=b3.y,cW.array[b9+2]=b3.z,b9+=3}}}else{if(4===cW.size){for(b5=0;b5<cP;b5++){b3=cW.value[b5],cW.array[b9]=b3.x,cW.array[b9+1]=b3.y,cW.array[b9+2]=b3.z,cW.array[b9+3]=b3.w,b9+=4}}}}}}aF.bindBuffer(aF.ARRAY_BUFFER,cW.buffer);aF.bufferData(aF.ARRAY_BUFFER,cW.array,b8);cW.needsUpdate=!1}}}dq.verticesNeedUpdate=!1;dq.colorsNeedUpdate=!1;c7.attributes&&bm(c7)}}}}}function ar(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function bm(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function au(cH,cG,cF,cD,cB){var cz,cy,cx,ct;bV=0;if(cD.needsUpdate){cD.program&&bQ(cD);cD.addEventListener("dispose",bB);var cs=aI[cD.type];if(cs){var cr=THREE.ShaderLib[cs];cD.__webglShader={uniforms:THREE.UniformsUtils.clone(cr.uniforms),vertexShader:cr.vertexShader,fragmentShader:cr.fragmentShader}}else{cD.__webglShader={uniforms:cD.uniforms,vertexShader:cD.vertexShader,fragmentShader:cD.fragmentShader}}for(var cp=0,co=0,cn=0,cl=0,cm=0,cj=cG.length;cm<cj;cm++){var ck=cG[cm];ck.onlyShadow||!1===ck.visible||(ck instanceof THREE.DirectionalLight&&cp++,ck instanceof THREE.PointLight&&co++,ck instanceof THREE.SpotLight&&cn++,ck instanceof THREE.HemisphereLight&&cl++)}cz=cp;cy=co;cx=cn;ct=cl;for(var ci,cg=0,dc=0,c6=cG.length;dc<c6;dc++){var df=cG[dc];df.castShadow&&(df instanceof THREE.SpotLight&&cg++,df instanceof THREE.DirectionalLight&&!df.shadowCascade&&cg++)}ci=cg;var c9;if(bI&&cB&&cB.skeleton&&cB.skeleton.useVertexTexture){c9=1024}else{var c5=aF.getParameter(aF.MAX_VERTEX_UNIFORM_VECTORS),cY=Math.floor((c5-20)/4);void 0!==cB&&cB instanceof THREE.SkinnedMesh&&(cY=Math.min(cB.skeleton.bones.length,cY),cY<cB.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+cB.skeleton.bones.length+", this GPU supports just "+cY+" (try OpenGL instead of ANGLE)"));c9=cY}var cZ={precision:bA,supportsVertexTextures:aZ,map:!!cD.map,envMap:!!cD.envMap,envMapMode:cD.envMap&&cD.envMap.mapping,lightMap:!!cD.lightMap,bumpMap:!!cD.bumpMap,normalMap:!!cD.normalMap,specularMap:!!cD.specularMap,alphaMap:!!cD.alphaMap,combine:cD.combine,vertexColors:cD.vertexColors,fog:cF,useFog:cD.fog,fogExp:cF instanceof THREE.FogExp2,sizeAttenuation:cD.sizeAttenuation,logarithmicDepthBuffer:a0,skinning:cD.skinning,maxBones:c9,useVertexTexture:bI&&cB&&cB.skeleton&&cB.skeleton.useVertexTexture,morphTargets:cD.morphTargets,morphNormals:cD.morphNormals,maxMorphTargets:bd.maxMorphTargets,maxMorphNormals:bd.maxMorphNormals,maxDirLights:cz,maxPointLights:cy,maxSpotLights:cx,maxHemiLights:ct,maxShadows:ci,shadowMapEnabled:bd.shadowMapEnabled&&cB.receiveShadow&&0<ci,shadowMapType:bd.shadowMapType,shadowMapDebug:bd.shadowMapDebug,shadowMapCascade:bd.shadowMapCascade,alphaTest:cD.alphaTest,metal:cD.metal,wrapAround:cD.wrapAround,doubleSided:cD.side===THREE.DoubleSide,flipSided:cD.side===THREE.BackSide},cX=[];cs?cX.push(cs):(cX.push(cD.fragmentShader),cX.push(cD.vertexShader));if(void 0!==cD.defines){for(var cW in cD.defines){cX.push(cW),cX.push(cD.defines[cW])}}for(cW in cZ){cX.push(cW),cX.push(cZ[cW])}for(var cP=cX.join(),cc,dh=0,dC=ah.length;dh<dC;dh++){var bZ=ah[dh];if(bZ.code===cP){cc=bZ;cc.usedTimes++;break}}void 0===cc&&(cc=new THREE.WebGLProgram(bd,cP,cD,cZ),ah.push(cc),bd.info.memory.programs=ah.length);cD.program=cc;var dA=cc.attributes;if(cD.morphTargets){cD.numSupportedMorphTargets=0;for(var dn,dK="morphTarget",dk=0;dk<bd.maxMorphTargets;dk++){dn=dK+dk,0<=dA[dn]&&cD.numSupportedMorphTargets++}}if(cD.morphNormals){for(cD.numSupportedMorphNormals=0,dK="morphNormal",dk=0;dk<bd.maxMorphNormals;dk++){dn=dK+dk,0<=dA[dn]&&cD.numSupportedMorphNormals++}}cD.uniformsList=[];for(var U in cD.__webglShader.uniforms){var dg=cD.program.uniforms[U];dg&&cD.uniformsList.push([cD.__webglShader.uniforms[U],dg])}cD.needsUpdate=!1}cD.morphTargets&&!cB.__webglMorphTargetInfluences&&(cB.__webglMorphTargetInfluences=new Float32Array(bd.maxMorphTargets));var b1=!1,T=!1,dz=!1,F=cD.program,c3=F.uniforms,cU=cD.__webglShader.uniforms;F.id!==at&&(aF.useProgram(F.program),at=F.id,dz=T=b1=!0);cD.id!==bE&&(-1===bE&&(dz=!0),bE=cD.id,T=!0);if(b1||cH!==bk){aF.uniformMatrix4fv(c3.projectionMatrix,!1,cH.projectionMatrix.elements),a0&&aF.uniform1f(c3.logDepthBufFC,2/(Math.log(cH.far+1)/Math.LN2)),cH!==bk&&(bk=cH),(cD instanceof THREE.ShaderMaterial||cD instanceof THREE.MeshPhongMaterial||cD.envMap)&&null!==c3.cameraPosition&&(aK.setFromMatrixPosition(cH.matrixWorld),aF.uniform3f(c3.cameraPosition,aK.x,aK.y,aK.z)),(cD instanceof THREE.MeshPhongMaterial||cD instanceof THREE.MeshLambertMaterial||cD instanceof THREE.MeshBasicMaterial||cD instanceof THREE.ShaderMaterial||cD.skinning)&&null!==c3.viewMatrix&&aF.uniformMatrix4fv(c3.viewMatrix,!1,cH.matrixWorldInverse.elements)}if(cD.skinning){if(cB.bindMatrix&&null!==c3.bindMatrix&&aF.uniformMatrix4fv(c3.bindMatrix,!1,cB.bindMatrix.elements),cB.bindMatrixInverse&&null!==c3.bindMatrixInverse&&aF.uniformMatrix4fv(c3.bindMatrixInverse,!1,cB.bindMatrixInverse.elements),bI&&cB.skeleton&&cB.skeleton.useVertexTexture){if(null!==c3.boneTexture){var dd=aq();aF.uniform1i(c3.boneTexture,dd);bd.setTexture(cB.skeleton.boneTexture,dd)}null!==c3.boneTextureWidth&&aF.uniform1i(c3.boneTextureWidth,cB.skeleton.boneTextureWidth);null!==c3.boneTextureHeight&&aF.uniform1i(c3.boneTextureHeight,cB.skeleton.boneTextureHeight)}else{cB.skeleton&&cB.skeleton.boneMatrices&&null!==c3.boneGlobalMatrices&&aF.uniformMatrix4fv(c3.boneGlobalMatrices,!1,cB.skeleton.boneMatrices)}}if(T){cF&&cD.fog&&(cU.fogColor.value=cF.color,cF instanceof THREE.Fog?(cU.fogNear.value=cF.near,cU.fogFar.value=cF.far):cF instanceof THREE.FogExp2&&(cU.fogDensity.value=cF.density));if(cD instanceof THREE.MeshPhongMaterial||cD instanceof THREE.MeshLambertMaterial||cD.lights){if(bs){var dz=!0,dF,dD,cO,dN=0,I=0,Q=0,dG,dt,c0,c8,dm,b7,dJ=bf,dx=dJ.directional.colors,dl=dJ.directional.positions,ds=dJ.point.colors,X=dJ.point.positions,dv=dJ.point.distances,cN=dJ.spot.colors,da=dJ.spot.positions,c7=dJ.spot.distances,di=dJ.spot.directions,cw=dJ.spot.anglesCos,dM=dJ.spot.exponents,c2=dJ.hemi.skyColors,dr=dJ.hemi.groundColors,cT=dJ.hemi.positions,b3=0,cA=0,cL=0,c4=0,cq=0,cd=0,b2=0,cu=0,l=0,ca=0,de=0,b6=0;dF=0;for(dD=cG.length;dF<dD;dF++){cO=cG[dF],cO.onlyShadow||(dG=cO.color,c8=cO.intensity,b7=cO.distance,cO instanceof THREE.AmbientLight?cO.visible&&(bd.gammaInput?(dN+=dG.r*dG.r,I+=dG.g*dG.g,Q+=dG.b*dG.b):(dN+=dG.r,I+=dG.g,Q+=dG.b)):cO instanceof THREE.DirectionalLight?(cq+=1,cO.visible&&(bD.setFromMatrixPosition(cO.matrixWorld),aK.setFromMatrixPosition(cO.target.matrixWorld),bD.sub(aK),bD.normalize(),l=3*b3,dl[l]=bD.x,dl[l+1]=bD.y,dl[l+2]=bD.z,bd.gammaInput?bj(dx,l,dG,c8*c8):av(dx,l,dG,c8),b3+=1)):cO instanceof THREE.PointLight?(cd+=1,cO.visible&&(ca=3*cA,bd.gammaInput?bj(ds,ca,dG,c8*c8):av(ds,ca,dG,c8),aK.setFromMatrixPosition(cO.matrixWorld),X[ca]=aK.x,X[ca+1]=aK.y,X[ca+2]=aK.z,dv[cA]=b7,cA+=1)):cO instanceof THREE.SpotLight?(b2+=1,cO.visible&&(de=3*cL,bd.gammaInput?bj(cN,de,dG,c8*c8):av(cN,de,dG,c8),bD.setFromMatrixPosition(cO.matrixWorld),da[de]=bD.x,da[de+1]=bD.y,da[de+2]=bD.z,c7[cL]=b7,aK.setFromMatrixPosition(cO.target.matrixWorld),bD.sub(aK),bD.normalize(),di[de]=bD.x,di[de+1]=bD.y,di[de+2]=bD.z,cw[cL]=Math.cos(cO.angle),dM[cL]=cO.exponent,cL+=1)):cO instanceof THREE.HemisphereLight&&(cu+=1,cO.visible&&(bD.setFromMatrixPosition(cO.matrixWorld),bD.normalize(),b6=3*c4,cT[b6]=bD.x,cT[b6+1]=bD.y,cT[b6+2]=bD.z,dt=cO.color,c0=cO.groundColor,bd.gammaInput?(dm=c8*c8,bj(c2,b6,dt,dm),bj(dr,b6,c0,dm)):(av(c2,b6,dt,c8),av(dr,b6,c0,c8)),c4+=1)))}dF=3*b3;for(dD=Math.max(dx.length,3*cq);dF<dD;dF++){dx[dF]=0}dF=3*cA;for(dD=Math.max(ds.length,3*cd);dF<dD;dF++){ds[dF]=0}dF=3*cL;for(dD=Math.max(cN.length,3*b2);dF<dD;dF++){cN[dF]=0}dF=3*c4;for(dD=Math.max(c2.length,3*cu);dF<dD;dF++){c2[dF]=0}dF=3*c4;for(dD=Math.max(dr.length,3*cu);dF<dD;dF++){dr[dF]=0}dJ.directional.length=b3;dJ.point.length=cA;dJ.spot.length=cL;dJ.hemi.length=c4;dJ.ambient[0]=dN;dJ.ambient[1]=I;dJ.ambient[2]=Q;bs=!1}if(dz){var dw=bf;cU.ambientLightColor.value=dw.ambient;cU.directionalLightColor.value=dw.directional.colors;cU.directionalLightDirection.value=dw.directional.positions;cU.pointLightColor.value=dw.point.colors;cU.pointLightPosition.value=dw.point.positions;cU.pointLightDistance.value=dw.point.distances;cU.spotLightColor.value=dw.spot.colors;cU.spotLightPosition.value=dw.spot.positions;cU.spotLightDistance.value=dw.spot.distances;cU.spotLightDirection.value=dw.spot.directions;cU.spotLightAngleCos.value=dw.spot.anglesCos;cU.spotLightExponent.value=dw.spot.exponents;cU.hemisphereLightSkyColor.value=dw.hemi.skyColors;cU.hemisphereLightGroundColor.value=dw.hemi.groundColors;cU.hemisphereLightDirection.value=dw.hemi.positions;bi(cU,!0)}else{bi(cU,!1)}}if(cD instanceof THREE.MeshBasicMaterial||cD instanceof THREE.MeshLambertMaterial||cD instanceof THREE.MeshPhongMaterial){cU.opacity.value=cD.opacity;bd.gammaInput?cU.diffuse.value.copyGammaToLinear(cD.color):cU.diffuse.value=cD.color;cU.map.value=cD.map;cU.lightMap.value=cD.lightMap;cU.specularMap.value=cD.specularMap;cU.alphaMap.value=cD.alphaMap;cD.bumpMap&&(cU.bumpMap.value=cD.bumpMap,cU.bumpScale.value=cD.bumpScale);cD.normalMap&&(cU.normalMap.value=cD.normalMap,cU.normalScale.value.copy(cD.normalScale));var cC;cD.map?cC=cD.map:cD.specularMap?cC=cD.specularMap:cD.normalMap?cC=cD.normalMap:cD.bumpMap?cC=cD.bumpMap:cD.alphaMap&&(cC=cD.alphaMap);if(void 0!==cC){var cI=cC.offset,dj=cC.repeat;cU.offsetRepeat.value.set(cI.x,cI.y,dj.x,dj.y)}cU.envMap.value=cD.envMap;cU.flipEnvMap.value=cD.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;cU.reflectivity.value=cD.reflectivity;cU.refractionRatio.value=cD.refractionRatio}cD instanceof THREE.LineBasicMaterial?(cU.diffuse.value=cD.color,cU.opacity.value=cD.opacity):cD instanceof THREE.LineDashedMaterial?(cU.diffuse.value=cD.color,cU.opacity.value=cD.opacity,cU.dashSize.value=cD.dashSize,cU.totalSize.value=cD.dashSize+cD.gapSize,cU.scale.value=cD.scale):cD instanceof THREE.PointCloudMaterial?(cU.psColor.value=cD.color,cU.opacity.value=cD.opacity,cU.size.value=cD.size,cU.scale.value=a4.height/2,cU.map.value=cD.map):cD instanceof THREE.MeshPhongMaterial?(cU.shininess.value=cD.shininess,bd.gammaInput?(cU.ambient.value.copyGammaToLinear(cD.ambient),cU.emissive.value.copyGammaToLinear(cD.emissive),cU.specular.value.copyGammaToLinear(cD.specular)):(cU.ambient.value=cD.ambient,cU.emissive.value=cD.emissive,cU.specular.value=cD.specular),cD.wrapAround&&cU.wrapRGB.value.copy(cD.wrapRGB)):cD instanceof THREE.MeshLambertMaterial?(bd.gammaInput?(cU.ambient.value.copyGammaToLinear(cD.ambient),cU.emissive.value.copyGammaToLinear(cD.emissive)):(cU.ambient.value=cD.ambient,cU.emissive.value=cD.emissive),cD.wrapAround&&cU.wrapRGB.value.copy(cD.wrapRGB)):cD instanceof THREE.MeshDepthMaterial?(cU.mNear.value=cH.near,cU.mFar.value=cH.far,cU.opacity.value=cD.opacity):cD instanceof THREE.MeshNormalMaterial&&(cU.opacity.value=cD.opacity);if(cB.receiveShadow&&!cD._shadowPass&&cU.shadowMatrix){for(var dE=0,ce=0,b5=cG.length;ce<b5;ce++){var dH=cG[ce];dH.castShadow&&(dH instanceof THREE.SpotLight||dH instanceof THREE.DirectionalLight&&!dH.shadowCascade)&&(cU.shadowMap.value[dE]=dH.shadowMap,cU.shadowMapSize.value[dE]=dH.shadowMapSize,cU.shadowMatrix.value[dE]=dH.shadowMatrix,cU.shadowDarkness.value[dE]=dH.shadowDarkness,cU.shadowBias.value[dE]=dH.shadowBias,dE++)}}for(var c1=cD.uniformsList,cQ,cE,ch,cv=0,cK=c1.length;cv<cK;cv++){var du=c1[cv][0];if(!1!==du.needsUpdate){var b8=du.type,cS=du.value,cR=c1[cv][1];switch(b8){case"1i":aF.uniform1i(cR,cS);break;case"1f":aF.uniform1f(cR,cS);break;case"2f":aF.uniform2f(cR,cS[0],cS[1]);break;case"3f":aF.uniform3f(cR,cS[0],cS[1],cS[2]);break;case"4f":aF.uniform4f(cR,cS[0],cS[1],cS[2],cS[3]);break;case"1iv":aF.uniform1iv(cR,cS);break;case"3iv":aF.uniform3iv(cR,cS);break;case"1fv":aF.uniform1fv(cR,cS);break;case"2fv":aF.uniform2fv(cR,cS);break;case"3fv":aF.uniform3fv(cR,cS);break;case"4fv":aF.uniform4fv(cR,cS);break;case"Matrix3fv":aF.uniformMatrix3fv(cR,!1,cS);break;case"Matrix4fv":aF.uniformMatrix4fv(cR,!1,cS);break;case"i":aF.uniform1i(cR,cS);break;case"f":aF.uniform1f(cR,cS);break;case"v2":aF.uniform2f(cR,cS.x,cS.y);break;case"v3":aF.uniform3f(cR,cS.x,cS.y,cS.z);break;case"v4":aF.uniform4f(cR,cS.x,cS.y,cS.z,cS.w);break;case"c":aF.uniform3f(cR,cS.r,cS.g,cS.b);break;case"iv1":aF.uniform1iv(cR,cS);break;case"iv":aF.uniform3iv(cR,cS);break;case"fv1":aF.uniform1fv(cR,cS);break;case"fv":aF.uniform3fv(cR,cS);break;case"v2v":void 0===du._array&&(du._array=new Float32Array(2*cS.length));for(var cM=0,b9=cS.length;cM<b9;cM++){ch=2*cM,du._array[ch]=cS[cM].x,du._array[ch+1]=cS[cM].y}aF.uniform2fv(cR,du._array);break;case"v3v":void 0===du._array&&(du._array=new Float32Array(3*cS.length));cM=0;for(b9=cS.length;cM<b9;cM++){ch=3*cM,du._array[ch]=cS[cM].x,du._array[ch+1]=cS[cM].y,du._array[ch+2]=cS[cM].z}aF.uniform3fv(cR,du._array);break;case"v4v":void 0===du._array&&(du._array=new Float32Array(4*cS.length));cM=0;for(b9=cS.length;cM<b9;cM++){ch=4*cM,du._array[ch]=cS[cM].x,du._array[ch+1]=cS[cM].y,du._array[ch+2]=cS[cM].z,du._array[ch+3]=cS[cM].w}aF.uniform4fv(cR,du._array);break;case"m3":aF.uniformMatrix3fv(cR,!1,cS.elements);break;case"m3v":void 0===du._array&&(du._array=new Float32Array(9*cS.length));cM=0;for(b9=cS.length;cM<b9;cM++){cS[cM].flattenToArrayOffset(du._array,9*cM)}aF.uniformMatrix3fv(cR,!1,du._array);break;case"m4":aF.uniformMatrix4fv(cR,!1,cS.elements);break;case"m4v":void 0===du._array&&(du._array=new Float32Array(16*cS.length));cM=0;for(b9=cS.length;cM<b9;cM++){cS[cM].flattenToArrayOffset(du._array,16*cM)}aF.uniformMatrix4fv(cR,!1,du._array);break;case"t":cQ=cS;cE=aq();aF.uniform1i(cR,cE);if(!cQ){continue}if(cQ instanceof THREE.CubeTexture||cQ.image instanceof Array&&6===cQ.image.length){var bY=cQ,dq=cE;if(6===bY.image.length){if(bY.needsUpdate){bY.image.__webglTextureCube||(bY.addEventListener("dispose",aR),bY.image.__webglTextureCube=aF.createTexture(),bd.info.memory.textures++);aF.activeTexture(aF.TEXTURE0+dq);aF.bindTexture(aF.TEXTURE_CUBE_MAP,bY.image.__webglTextureCube);aF.pixelStorei(aF.UNPACK_FLIP_Y_WEBGL,bY.flipY);for(var bX=bY instanceof THREE.CompressedTexture,cV=bY.image[0] instanceof THREE.DataTexture,dp=[],cJ=0;6>cJ;cJ++){dp[cJ]=!bd.autoScaleCubemaps||bX||cV?cV?bY.image[cJ].image:bY.image[cJ]:a7(bY.image[cJ],aj)}var cf=dp[0],b4=THREE.Math.isPowerOfTwo(cf.width)&&THREE.Math.isPowerOfTwo(cf.height),b0=a3(bY.format),E=a3(bY.type);a2(aF.TEXTURE_CUBE_MAP,bY,b4);for(cJ=0;6>cJ;cJ++){if(bX){for(var dy,dI=dp[cJ].mipmaps,dL=0,M=dI.length;dL<M;dL++){dy=dI[dL],bY.format!==THREE.RGBAFormat&&bY.format!==THREE.RGBFormat?-1<aN().indexOf(b0)?aF.compressedTexImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+cJ,dL,b0,dy.width,dy.height,0,dy.data):console.warn("Attempt to load unsupported compressed texture format"):aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+cJ,dL,b0,dy.width,dy.height,0,b0,E,dy.data)}}else{cV?aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+cJ,0,b0,dp[cJ].width,dp[cJ].height,0,b0,E,dp[cJ].data):aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+cJ,0,b0,b0,E,dp[cJ])}}bY.generateMipmaps&&b4&&aF.generateMipmap(aF.TEXTURE_CUBE_MAP);bY.needsUpdate=!1;if(bY.onUpdate){bY.onUpdate()}}else{aF.activeTexture(aF.TEXTURE0+dq),aF.bindTexture(aF.TEXTURE_CUBE_MAP,bY.image.__webglTextureCube)}}}else{if(cQ instanceof THREE.WebGLRenderTargetCube){var dB=cQ;aF.activeTexture(aF.TEXTURE0+cE);aF.bindTexture(aF.TEXTURE_CUBE_MAP,dB.__webglTexture)}else{bd.setTexture(cQ,cE)}}break;case"tv":void 0===du._array&&(du._array=[]);cM=0;for(b9=du.value.length;cM<b9;cM++){du._array[cM]=aq()}aF.uniform1iv(cR,du._array);cM=0;for(b9=du.value.length;cM<b9;cM++){cQ=du.value[cM],cE=du._array[cM],cQ&&bd.setTexture(cQ,cE)}break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+b8)}}}}aF.uniformMatrix4fv(c3.modelViewMatrix,!1,cB._modelViewMatrix.elements);c3.normalMatrix&&aF.uniformMatrix3fv(c3.normalMatrix,!1,cB._normalMatrix.elements);null!==c3.modelMatrix&&aF.uniformMatrix4fv(c3.modelMatrix,!1,cB.matrixWorld.elements);return F}function bi(d,c){d.ambientLightColor.needsUpdate=c;d.directionalLightColor.needsUpdate=c;d.directionalLightDirection.needsUpdate=c;d.pointLightColor.needsUpdate=c;d.pointLightPosition.needsUpdate=c;d.pointLightDistance.needsUpdate=c;d.spotLightColor.needsUpdate=c;d.spotLightPosition.needsUpdate=c;d.spotLightDistance.needsUpdate=c;d.spotLightDirection.needsUpdate=c;d.spotLightAngleCos.needsUpdate=c;d.spotLightExponent.needsUpdate=c;d.hemisphereLightSkyColor.needsUpdate=c;d.hemisphereLightGroundColor.needsUpdate=c;d.hemisphereLightDirection.needsUpdate=c}function aq(){var b=bV;b>=al&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+al);bV+=1;return b}function bg(d,c){d._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,d.matrixWorld);d._normalMatrix.getNormalMatrix(d._modelViewMatrix)}function bj(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function av(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function bl(b){b*=a5;b!==ac&&(aF.lineWidth(b),ac=b)}function bq(e,d,f){bT!==e&&(e?aF.enable(aF.POLYGON_OFFSET_FILL):aF.disable(aF.POLYGON_OFFSET_FILL),bT=e);!e||bF===d&&bo===f||(aF.polygonOffset(d,f),bF=d,bo=f)}function a2(e,d,f){f?(aF.texParameteri(e,aF.TEXTURE_WRAP_S,a3(d.wrapS)),aF.texParameteri(e,aF.TEXTURE_WRAP_T,a3(d.wrapT)),aF.texParameteri(e,aF.TEXTURE_MAG_FILTER,a3(d.magFilter)),aF.texParameteri(e,aF.TEXTURE_MIN_FILTER,a3(d.minFilter))):(aF.texParameteri(e,aF.TEXTURE_WRAP_S,aF.CLAMP_TO_EDGE),aF.texParameteri(e,aF.TEXTURE_WRAP_T,aF.CLAMP_TO_EDGE),d.wrapS===THREE.ClampToEdgeWrapping&&d.wrapT===THREE.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( "+d.sourceFile+" )"),aF.texParameteri(e,aF.TEXTURE_MAG_FILTER,a6(d.magFilter)),aF.texParameteri(e,aF.TEXTURE_MIN_FILTER,a6(d.minFilter)),d.minFilter!==THREE.NearestFilter&&d.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( "+d.sourceFile+" )"));(f=bx.get("EXT_texture_filter_anisotropic"))&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)&&(aF.texParameterf(e,f.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,bd.getMaxAnisotropy())),d.__oldAnisotropy=d.anisotropy)}function a7(f,e){if(f.width>e||f.height>e){var h=e/Math.max(f.width,f.height),g=document.createElement("canvas");g.width=Math.floor(f.width*h);g.height=Math.floor(f.height*h);g.getContext("2d").drawImage(f,0,0,f.width,f.height,0,0,g.width,g.height);console.log("THREE.WebGLRenderer:",f,"is too big ("+f.width+"x"+f.height+"). Resized to "+g.width+"x"+g.height+".");return g}return f}function bc(d,c){aF.bindRenderbuffer(aF.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(aF.renderbufferStorage(aF.RENDERBUFFER,aF.DEPTH_COMPONENT16,c.width,c.height),aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_ATTACHMENT,aF.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(aF.renderbufferStorage(aF.RENDERBUFFER,aF.DEPTH_STENCIL,c.width,c.height),aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_STENCIL_ATTACHMENT,aF.RENDERBUFFER,d)):aF.renderbufferStorage(aF.RENDERBUFFER,aF.RGBA4,c.width,c.height)}function a8(b){b instanceof THREE.WebGLRenderTargetCube?(aF.bindTexture(aF.TEXTURE_CUBE_MAP,b.__webglTexture),aF.generateMipmap(aF.TEXTURE_CUBE_MAP),aF.bindTexture(aF.TEXTURE_CUBE_MAP,null)):(aF.bindTexture(aF.TEXTURE_2D,b.__webglTexture),aF.generateMipmap(aF.TEXTURE_2D),aF.bindTexture(aF.TEXTURE_2D,null))}function a6(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?aF.NEAREST:aF.LINEAR}function a3(d){var c;if(d===THREE.RepeatWrapping){return aF.REPEAT}if(d===THREE.ClampToEdgeWrapping){return aF.CLAMP_TO_EDGE}if(d===THREE.MirroredRepeatWrapping){return aF.MIRRORED_REPEAT}if(d===THREE.NearestFilter){return aF.NEAREST}if(d===THREE.NearestMipMapNearestFilter){return aF.NEAREST_MIPMAP_NEAREST}if(d===THREE.NearestMipMapLinearFilter){return aF.NEAREST_MIPMAP_LINEAR}if(d===THREE.LinearFilter){return aF.LINEAR}if(d===THREE.LinearMipMapNearestFilter){return aF.LINEAR_MIPMAP_NEAREST}if(d===THREE.LinearMipMapLinearFilter){return aF.LINEAR_MIPMAP_LINEAR}if(d===THREE.UnsignedByteType){return aF.UNSIGNED_BYTE}if(d===THREE.UnsignedShort4444Type){return aF.UNSIGNED_SHORT_4_4_4_4}if(d===THREE.UnsignedShort5551Type){return aF.UNSIGNED_SHORT_5_5_5_1}if(d===THREE.UnsignedShort565Type){return aF.UNSIGNED_SHORT_5_6_5}if(d===THREE.ByteType){return aF.BYTE}if(d===THREE.ShortType){return aF.SHORT}if(d===THREE.UnsignedShortType){return aF.UNSIGNED_SHORT}if(d===THREE.IntType){return aF.INT}if(d===THREE.UnsignedIntType){return aF.UNSIGNED_INT}if(d===THREE.FloatType){return aF.FLOAT}if(d===THREE.AlphaFormat){return aF.ALPHA}if(d===THREE.RGBFormat){return aF.RGB}if(d===THREE.RGBAFormat){return aF.RGBA}if(d===THREE.LuminanceFormat){return aF.LUMINANCE}if(d===THREE.LuminanceAlphaFormat){return aF.LUMINANCE_ALPHA}if(d===THREE.AddEquation){return aF.FUNC_ADD}if(d===THREE.SubtractEquation){return aF.FUNC_SUBTRACT}if(d===THREE.ReverseSubtractEquation){return aF.FUNC_REVERSE_SUBTRACT}if(d===THREE.ZeroFactor){return aF.ZERO}if(d===THREE.OneFactor){return aF.ONE}if(d===THREE.SrcColorFactor){return aF.SRC_COLOR}if(d===THREE.OneMinusSrcColorFactor){return aF.ONE_MINUS_SRC_COLOR}if(d===THREE.SrcAlphaFactor){return aF.SRC_ALPHA}if(d===THREE.OneMinusSrcAlphaFactor){return aF.ONE_MINUS_SRC_ALPHA}if(d===THREE.DstAlphaFactor){return aF.DST_ALPHA}if(d===THREE.OneMinusDstAlphaFactor){return aF.ONE_MINUS_DST_ALPHA}if(d===THREE.DstColorFactor){return aF.DST_COLOR}if(d===THREE.OneMinusDstColorFactor){return aF.ONE_MINUS_DST_COLOR}if(d===THREE.SrcAlphaSaturateFactor){return aF.SRC_ALPHA_SATURATE}c=bx.get("WEBGL_compressed_texture_s3tc");if(null!==c){if(d===THREE.RGB_S3TC_DXT1_Format){return c.COMPRESSED_RGB_S3TC_DXT1_EXT}if(d===THREE.RGBA_S3TC_DXT1_Format){return c.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(d===THREE.RGBA_S3TC_DXT3_Format){return c.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(d===THREE.RGBA_S3TC_DXT5_Format){return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}}c=bx.get("WEBGL_compressed_texture_pvrtc");if(null!==c){if(d===THREE.RGB_PVRTC_4BPPV1_Format){return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG}if(d===THREE.RGB_PVRTC_2BPPV1_Format){return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG}if(d===THREE.RGBA_PVRTC_4BPPV1_Format){return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG}if(d===THREE.RGBA_PVRTC_2BPPV1_Format){return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}}c=bx.get("EXT_blend_minmax");if(null!==c){if(d===THREE.MinEquation){return c.MIN_EXT}if(d===THREE.MaxEquation){return c.MAX_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);aV=aV||{};var a4=void 0!==aV.canvas?aV.canvas:document.createElement("canvas"),a1=void 0!==aV.context?aV.context:null,a5=1,bA=void 0!==aV.precision?aV.precision:"highp",S=void 0!==aV.alpha?aV.alpha:!1,j=void 0!==aV.depth?aV.depth:!0,be=void 0!==aV.stencil?aV.stencil:!0,bn=void 0!==aV.antialias?aV.antialias:!1,ae=void 0!==aV.premultipliedAlpha?aV.premultipliedAlpha:!0,bK=void 0!==aV.preserveDrawingBuffer?aV.preserveDrawingBuffer:!1,a0=void 0!==aV.logarithmicDepthBuffer?aV.logarithmicDepthBuffer:!1,bt=new THREE.Color(0),bN=0,an=[],ab={},bS=[],bL=[],bw=[],br=[],R=[];this.domElement=a4;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var bd=this,ah=[],at=null,aW=null,bE=-1,o="",bk=null,bV=0,bv=-1,ag=-1,B=-1,bM=-1,P=-1,bO=-1,by=-1,a9=-1,bT=null,bF=null,bo=null,ac=null,bb=0,J=0,aJ=a4.width,ak=a4.height,ao=0,af=0,Z=new Uint8Array(16),bW=new Uint8Array(16),aY=new THREE.Frustum,ap=new THREE.Matrix4;new THREE.Matrix4;var aK=new THREE.Vector3,bD=new THREE.Vector3,bs=!0,bf={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},aF;try{var i={alpha:S,depth:j,stencil:be,antialias:bn,premultipliedAlpha:ae,preserveDrawingBuffer:bK};aF=a1||a4.getContext("webgl",i)||a4.getContext("experimental-webgl",i);if(null===aF){if(null!==a4.getContext("webgl")){throw"Error creating WebGL context with your selected attributes."}throw"Error creating WebGL context."}a4.addEventListener("webglcontextlost",function(b){b.preventDefault();bJ();bu();ab={}},!1)}catch(Y){console.error(Y)}void 0===aF.getShaderPrecisionFormat&&(aF.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var bx=new THREE.WebGLExtensions(aF);bx.get("OES_texture_float");bx.get("OES_texture_float_linear");bx.get("OES_standard_derivatives");a0&&bx.get("EXT_frag_depth");var bu=function(){aF.clearColor(0,0,0,1);aF.clearDepth(1);aF.clearStencil(0);aF.enable(aF.DEPTH_TEST);aF.depthFunc(aF.LEQUAL);aF.frontFace(aF.CCW);aF.cullFace(aF.BACK);aF.enable(aF.CULL_FACE);aF.enable(aF.BLEND);aF.blendEquation(aF.FUNC_ADD);aF.blendFunc(aF.SRC_ALPHA,aF.ONE_MINUS_SRC_ALPHA);aF.viewport(bb,J,aJ,ak);aF.clearColor(bt.r,bt.g,bt.b,bN)},bJ=function(){bk=at=null;ag=bv=a9=by=B=-1;o="";bE=-1;bs=!0;for(var b=0;b<bW.length;b++){bW[b]=0}};bu();this.context=aF;var al=aF.getParameter(aF.MAX_TEXTURE_IMAGE_UNITS),bR=aF.getParameter(aF.MAX_VERTEX_TEXTURE_IMAGE_UNITS),bC=aF.getParameter(aF.MAX_TEXTURE_SIZE),aj=aF.getParameter(aF.MAX_CUBE_MAP_TEXTURE_SIZE),aZ=0<bR,bI=aZ&&bx.get("OES_texture_float"),bh=aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.HIGH_FLOAT),aP=aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.MEDIUM_FLOAT);aF.getShaderPrecisionFormat(aF.VERTEX_SHADER,aF.LOW_FLOAT);var am=aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.HIGH_FLOAT),ad=aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.MEDIUM_FLOAT);aF.getShaderPrecisionFormat(aF.FRAGMENT_SHADER,aF.LOW_FLOAT);var aN=function(){var b;return function(){if(void 0!==b){return b}b=[];if(bx.get("WEBGL_compressed_texture_pvrtc")||bx.get("WEBGL_compressed_texture_s3tc")){for(var a=aF.getParameter(aF.COMPRESSED_TEXTURE_FORMATS),d=0;d<a.length;d++){b.push(a[d])}}return b}}(),bU=0<bh.precision&&0<am.precision,bP=0<aP.precision&&0<ad.precision;"highp"!==bA||bU||(bP?(bA="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(bA="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));"mediump"!==bA||bP||(bA="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var bH=new THREE.ShadowMapPlugin(this,an,ab,bS),bp=new THREE.SpritePlugin(this,br),aX=new THREE.LensFlarePlugin(this,R);this.getContext=function(){return aF};this.forceContextLoss=function(){bx.get("WEBGL_lose_context").loseContext()};this.supportsVertexTextures=function(){return aZ};this.supportsFloatTextures=function(){return bx.get("OES_texture_float")};this.supportsStandardDerivatives=function(){return bx.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){return bx.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=function(){return bx.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){return bx.get("EXT_blend_minmax")};this.getMaxAnisotropy=function(){var b;return function(){if(void 0!==b){return b}var a=bx.get("EXT_texture_filter_anisotropic");return b=null!==a?aF.getParameter(a.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return bA};this.getPixelRatio=function(){return a5};this.setPixelRatio=function(b){a5=b};this.setSize=function(e,d,f){a4.width=e*a5;a4.height=d*a5;!1!==f&&(a4.style.width=e+"px",a4.style.height=d+"px");this.setViewport(0,0,e,d)};this.setViewport=function(f,e,h,g){bb=f*a5;J=e*a5;aJ=h*a5;ak=g*a5;aF.viewport(bb,J,aJ,ak)};this.setScissor=function(f,e,h,g){aF.scissor(f*a5,e*a5,h*a5,g*a5)};this.enableScissorTest=function(b){b?aF.enable(aF.SCISSOR_TEST):aF.disable(aF.SCISSOR_TEST)};this.getClearColor=function(){return bt};this.setClearColor=function(d,c){bt.set(d);bN=void 0!==c?c:1;aF.clearColor(bt.r,bt.g,bt.b,bN)};this.getClearAlpha=function(){return bN};this.setClearAlpha=function(b){bN=b;aF.clearColor(bt.r,bt.g,bt.b,bN)};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=aF.COLOR_BUFFER_BIT}if(void 0===e||e){g|=aF.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=aF.STENCIL_BUFFER_BIT}aF.clear(g)};this.clearColor=function(){aF.clear(aF.COLOR_BUFFER_BIT)};this.clearDepth=function(){aF.clear(aF.DEPTH_BUFFER_BIT)};this.clearStencil=function(){aF.clear(aF.STENCIL_BUFFER_BIT)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.resetGLState=bJ;var aG=function(b){b.target.traverse(function(e){e.removeEventListener("remove",aG);if(e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line){delete ab[e.id]}else{if(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback){for(var d=bS,f=d.length-1;0<=f;f--){d[f].object===e&&d.splice(f,1)}}}delete e.__webglInit;delete e._modelViewMatrix;delete e._normalMatrix;delete e.__webglActive})},ai=function(k){k=k.target;k.removeEventListener("dispose",ai);delete k.__webglInit;if(k instanceof THREE.BufferGeometry){for(var h in k.attributes){var q=k.attributes[h];void 0!==q.buffer&&(aF.deleteBuffer(q.buffer),delete q.buffer)}bd.info.memory.geometries--}else{if(h=bG[k.id],void 0!==h){for(var q=0,p=h.length;q<p;q++){var n=h[q];if(void 0!==n.numMorphTargets){for(var m=0,l=n.numMorphTargets;m<l;m++){aF.deleteBuffer(n.__webglMorphTargetsBuffers[m])}delete n.__webglMorphTargetsBuffers}if(void 0!==n.numMorphNormals){m=0;for(l=n.numMorphNormals;m<l;m++){aF.deleteBuffer(n.__webglMorphNormalsBuffers[m])}delete n.__webglMorphNormalsBuffers}bz(n)}delete bG[k.id]}else{bz(k)}}o=""},aR=function(b){b=b.target;b.removeEventListener("dispose",aR);b.image&&b.image.__webglTextureCube?(aF.deleteTexture(b.image.__webglTextureCube),delete b.image.__webglTextureCube):void 0!==b.__webglInit&&(aF.deleteTexture(b.__webglTexture),delete b.__webglTexture,delete b.__webglInit);bd.info.memory.textures--},ba=function(d){d=d.target;d.removeEventListener("dispose",ba);if(d&&void 0!==d.__webglTexture){aF.deleteTexture(d.__webglTexture);delete d.__webglTexture;if(d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){aF.deleteFramebuffer(d.__webglFramebuffer[c]),aF.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{aF.deleteFramebuffer(d.__webglFramebuffer),aF.deleteRenderbuffer(d.__webglRenderbuffer)}delete d.__webglFramebuffer;delete d.__webglRenderbuffer}bd.info.memory.textures--},bB=function(b){b=b.target;b.removeEventListener("dispose",bB);bQ(b)},bz=function(g){for(var f="__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),l=0,k=f.length;l<k;l++){var h=f[l];void 0!==g[h]&&(aF.deleteBuffer(g[h]),delete g[h])}if(void 0!==g.__webglCustomAttributesList){for(h in g.__webglCustomAttributesList){aF.deleteBuffer(g.__webglCustomAttributesList[h].buffer)}delete g.__webglCustomAttributesList}bd.info.memory.geometries--},bQ=function(g){var f=g.program.program;if(void 0!==f){g.program=void 0;var l,k,h=!1;g=0;for(l=ah.length;g<l;g++){if(k=ah[g],k.program===f){k.usedTimes--;0===k.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(l=ah.length;g<l;g++){k=ah[g],k.program!==f&&h.push(k)}ah=h;aF.deleteProgram(f);bd.info.memory.programs--}}};this.renderBufferImmediate=function(H,G,F){aO();H.hasPositions&&!H.__webglVertexBuffer&&(H.__webglVertexBuffer=aF.createBuffer());H.hasNormals&&!H.__webglNormalBuffer&&(H.__webglNormalBuffer=aF.createBuffer());H.hasUvs&&!H.__webglUvBuffer&&(H.__webglUvBuffer=aF.createBuffer());H.hasColors&&!H.__webglColorBuffer&&(H.__webglColorBuffer=aF.createBuffer());H.hasPositions&&(aF.bindBuffer(aF.ARRAY_BUFFER,H.__webglVertexBuffer),aF.bufferData(aF.ARRAY_BUFFER,H.positionArray,aF.DYNAMIC_DRAW),aM(G.attributes.position),aF.vertexAttribPointer(G.attributes.position,3,aF.FLOAT,!1,0,0));if(H.hasNormals){aF.bindBuffer(aF.ARRAY_BUFFER,H.__webglNormalBuffer);if(F.shading===THREE.FlatShading){var E,D,C,A,l,h,g,f,L,M,I,K=3*H.count;for(I=0;I<K;I+=9){M=H.normalArray,E=M[I],D=M[I+1],C=M[I+2],A=M[I+3],h=M[I+4],f=M[I+5],l=M[I+6],g=M[I+7],L=M[I+8],E=(E+A+l)/3,D=(D+h+g)/3,C=(C+f+L)/3,M[I]=E,M[I+1]=D,M[I+2]=C,M[I+3]=E,M[I+4]=D,M[I+5]=C,M[I+6]=E,M[I+7]=D,M[I+8]=C}}aF.bufferData(aF.ARRAY_BUFFER,H.normalArray,aF.DYNAMIC_DRAW);aM(G.attributes.normal);aF.vertexAttribPointer(G.attributes.normal,3,aF.FLOAT,!1,0,0)}H.hasUvs&&F.map&&(aF.bindBuffer(aF.ARRAY_BUFFER,H.__webglUvBuffer),aF.bufferData(aF.ARRAY_BUFFER,H.uvArray,aF.DYNAMIC_DRAW),aM(G.attributes.uv),aF.vertexAttribPointer(G.attributes.uv,2,aF.FLOAT,!1,0,0));H.hasColors&&F.vertexColors!==THREE.NoColors&&(aF.bindBuffer(aF.ARRAY_BUFFER,H.__webglColorBuffer),aF.bufferData(aF.ARRAY_BUFFER,H.colorArray,aF.DYNAMIC_DRAW),aM(G.attributes.color),aF.vertexAttribPointer(G.attributes.color,3,aF.FLOAT,!1,0,0));aL();aF.drawArrays(aF.TRIANGLES,0,H.count);H.count=0};this.renderBufferDirect=function(E,D,C,A,v,u){if(!1!==A.visible){if(aw(u),E=au(E,D,C,A,u),D=!1,C="direct_"+v.id+"_"+E.id+"_"+(A.wireframe?1:0),C!==o&&(o=C,D=!0),D&&aO(),u instanceof THREE.Mesh){u=!0===A.wireframe?aF.LINES:aF.TRIANGLES;var t=v.attributes.index;if(t){var r,l;t.array instanceof Uint32Array&&bx.get("OES_element_index_uint")?(r=aF.UNSIGNED_INT,l=4):(r=aF.UNSIGNED_SHORT,l=2);C=v.offsets;if(0===C.length){D&&(aQ(A,E,v,0),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(u,t.array.length,r,0),bd.info.render.calls++,bd.info.render.vertices+=t.array.length,bd.info.render.faces+=t.array.length/3}else{D=!0;for(var f=0,e=C.length;f<e;f++){var F=C[f].index;D&&(aQ(A,E,v,F),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer));aF.drawElements(u,C[f].count,r,C[f].start*l);bd.info.render.calls++;bd.info.render.vertices+=C[f].count;bd.info.render.faces+=C[f].count/3}}}else{D&&aQ(A,E,v,0),A=v.attributes.position,aF.drawArrays(u,0,A.array.length/3),bd.info.render.calls++,bd.info.render.vertices+=A.array.length/3,bd.info.render.faces+=A.array.length/9}}else{if(u instanceof THREE.PointCloud){if(u=aF.POINTS,t=v.attributes.index){if(t.array instanceof Uint32Array&&bx.get("OES_element_index_uint")?(r=aF.UNSIGNED_INT,l=4):(r=aF.UNSIGNED_SHORT,l=2),C=v.offsets,0===C.length){D&&(aQ(A,E,v,0),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(u,t.array.length,r,0),bd.info.render.calls++,bd.info.render.points+=t.array.length}else{for(1<C.length&&(D=!0),f=0,e=C.length;f<e;f++){F=C[f].index,D&&(aQ(A,E,v,F),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(u,C[f].count,r,C[f].start*l),bd.info.render.calls++,bd.info.render.points+=C[f].count}}}else{if(D&&aQ(A,E,v,0),A=v.attributes.position,C=v.offsets,0===C.length){aF.drawArrays(u,0,A.array.length/3),bd.info.render.calls++,bd.info.render.points+=A.array.length/3}else{for(f=0,e=C.length;f<e;f++){aF.drawArrays(u,C[f].index,C[f].count),bd.info.render.calls++,bd.info.render.points+=C[f].count}}}}else{if(u instanceof THREE.Line){if(u=u.mode===THREE.LineStrip?aF.LINE_STRIP:aF.LINES,bl(A.linewidth),t=v.attributes.index){if(t.array instanceof Uint32Array?(r=aF.UNSIGNED_INT,l=4):(r=aF.UNSIGNED_SHORT,l=2),C=v.offsets,0===C.length){D&&(aQ(A,E,v,0),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(u,t.array.length,r,0),bd.info.render.calls++,bd.info.render.vertices+=t.array.length}else{for(1<C.length&&(D=!0),f=0,e=C.length;f<e;f++){F=C[f].index,D&&(aQ(A,E,v,F),aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,t.buffer)),aF.drawElements(u,C[f].count,r,C[f].start*l),bd.info.render.calls++,bd.info.render.vertices+=C[f].count}}}else{if(D&&aQ(A,E,v,0),A=v.attributes.position,C=v.offsets,0===C.length){aF.drawArrays(u,0,A.array.length/3),bd.info.render.calls++,bd.info.render.vertices+=A.array.length/3}else{for(f=0,e=C.length;f<e;f++){aF.drawArrays(u,C[f].index,C[f].count),bd.info.render.calls++,bd.info.render.vertices+=C[f].count}}}}}}}};this.renderBuffer=function(D,C,A,v,u,p){if(!1!==v.visible){aw(p);A=au(D,C,A,v,p);C=A.attributes;D=!1;A=u.id+"_"+A.id+"_"+(v.wireframe?1:0);A!==o&&(o=A,D=!0);D&&aO();if(!v.morphTargets&&0<=C.position){D&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglVertexBuffer),aM(C.position),aF.vertexAttribPointer(C.position,3,aF.FLOAT,!1,0,0))}else{if(p.morphTargetBase){A=v.program.attributes;-1!==p.morphTargetBase&&0<=A.position?(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[p.morphTargetBase]),aM(A.position),aF.vertexAttribPointer(A.position,3,aF.FLOAT,!1,0,0)):0<=A.position&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglVertexBuffer),aM(A.position),aF.vertexAttribPointer(A.position,3,aF.FLOAT,!1,0,0));if(p.morphTargetForcedOrder.length){for(var l=0,h=p.morphTargetForcedOrder,g=p.morphTargetInfluences,F;l<v.numSupportedMorphTargets&&l<h.length;){F=A["morphTarget"+l],0<=F&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[h[l]]),aM(F),aF.vertexAttribPointer(F,3,aF.FLOAT,!1,0,0)),F=A["morphNormal"+l],0<=F&&v.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglMorphNormalsBuffers[h[l]]),aM(F),aF.vertexAttribPointer(F,3,aF.FLOAT,!1,0,0)),p.__webglMorphTargetInfluences[l]=g[h[l]],l++}}else{h=[];g=p.morphTargetInfluences;l=0;for(F=g.length;l<F;l++){h.push([g[l],l])}h.length>v.numSupportedMorphTargets?(h.sort(aC),h.length=v.numSupportedMorphTargets):h.length>v.numSupportedMorphNormals?h.sort(aC):0===h.length&&h.push([0,0]);for(var l=0,f=v.numSupportedMorphTargets;l<f;l++){if(h[l]){var E=h[l][1];F=A["morphTarget"+l];0<=F&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[E]),aM(F),aF.vertexAttribPointer(F,3,aF.FLOAT,!1,0,0));F=A["morphNormal"+l];0<=F&&v.morphNormals&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglMorphNormalsBuffers[E]),aM(F),aF.vertexAttribPointer(F,3,aF.FLOAT,!1,0,0));p.__webglMorphTargetInfluences[l]=g[E]}else{p.__webglMorphTargetInfluences[l]=0}}}null!==v.program.uniforms.morphTargetInfluences&&aF.uniform1fv(v.program.uniforms.morphTargetInfluences,p.__webglMorphTargetInfluences)}}if(D){if(u.__webglCustomAttributesList){for(A=0,g=u.__webglCustomAttributesList.length;A<g;A++){h=u.__webglCustomAttributesList[A],0<=C[h.buffer.belongsToAttribute]&&(aF.bindBuffer(aF.ARRAY_BUFFER,h.buffer),aM(C[h.buffer.belongsToAttribute]),aF.vertexAttribPointer(C[h.buffer.belongsToAttribute],h.size,aF.FLOAT,!1,0,0))}}0<=C.color&&(0<p.geometry.colors.length||0<p.geometry.faces.length?(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglColorBuffer),aM(C.color),aF.vertexAttribPointer(C.color,3,aF.FLOAT,!1,0,0)):void 0!==v.defaultAttributeValues&&aF.vertexAttrib3fv(C.color,v.defaultAttributeValues.color));0<=C.normal&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglNormalBuffer),aM(C.normal),aF.vertexAttribPointer(C.normal,3,aF.FLOAT,!1,0,0));0<=C.tangent&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglTangentBuffer),aM(C.tangent),aF.vertexAttribPointer(C.tangent,4,aF.FLOAT,!1,0,0));0<=C.uv&&(p.geometry.faceVertexUvs[0]?(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglUVBuffer),aM(C.uv),aF.vertexAttribPointer(C.uv,2,aF.FLOAT,!1,0,0)):void 0!==v.defaultAttributeValues&&aF.vertexAttrib2fv(C.uv,v.defaultAttributeValues.uv));0<=C.uv2&&(p.geometry.faceVertexUvs[1]?(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglUV2Buffer),aM(C.uv2),aF.vertexAttribPointer(C.uv2,2,aF.FLOAT,!1,0,0)):void 0!==v.defaultAttributeValues&&aF.vertexAttrib2fv(C.uv2,v.defaultAttributeValues.uv2));v.skinning&&0<=C.skinIndex&&0<=C.skinWeight&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglSkinIndicesBuffer),aM(C.skinIndex),aF.vertexAttribPointer(C.skinIndex,4,aF.FLOAT,!1,0,0),aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglSkinWeightsBuffer),aM(C.skinWeight),aF.vertexAttribPointer(C.skinWeight,4,aF.FLOAT,!1,0,0));0<=C.lineDistance&&(aF.bindBuffer(aF.ARRAY_BUFFER,u.__webglLineDistanceBuffer),aM(C.lineDistance),aF.vertexAttribPointer(C.lineDistance,1,aF.FLOAT,!1,0,0))}aL();p instanceof THREE.Mesh?(p=u.__typeArray===Uint32Array?aF.UNSIGNED_INT:aF.UNSIGNED_SHORT,v.wireframe?(bl(v.wireframeLinewidth),D&&aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,u.__webglLineBuffer),aF.drawElements(aF.LINES,u.__webglLineCount,p,0)):(D&&aF.bindBuffer(aF.ELEMENT_ARRAY_BUFFER,u.__webglFaceBuffer),aF.drawElements(aF.TRIANGLES,u.__webglFaceCount,p,0)),bd.info.render.calls++,bd.info.render.vertices+=u.__webglFaceCount,bd.info.render.faces+=u.__webglFaceCount/3):p instanceof THREE.Line?(p=p.mode===THREE.LineStrip?aF.LINE_STRIP:aF.LINES,bl(v.linewidth),aF.drawArrays(p,0,u.__webglLineCount),bd.info.render.calls++):p instanceof THREE.PointCloud&&(aF.drawArrays(aF.POINTS,0,u.__webglParticleCount),bd.info.render.calls++,bd.info.render.points+=u.__webglParticleCount)}};this.render=function(l,k,s,r){if(!1===k instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var q=l.fog;o="";bE=-1;bk=null;bs=!0;!0===l.autoUpdate&&l.updateMatrixWorld();void 0===k.parent&&k.updateMatrixWorld();l.traverse(function(b){b instanceof THREE.SkinnedMesh&&b.skeleton.update()});k.matrixWorldInverse.getInverse(k.matrixWorld);ap.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse);aY.setFromMatrix(ap);an.length=0;bL.length=0;bw.length=0;br.length=0;R.length=0;aB(l);!0===bd.sortObjects&&(bL.sort(aH),bw.sort(aD));bH.render(l,k);bd.info.render.calls=0;bd.info.render.vertices=0;bd.info.render.faces=0;bd.info.render.points=0;this.setRenderTarget(s);(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);r=0;for(var p=bS.length;r<p;r++){var n=bS[r],m=n.object;m.visible&&(bg(m,k),az(n))}l.overrideMaterial?(r=l.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),bq(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),aE(bL,k,an,q,!0,r),aE(bw,k,an,q,!0,r),ay(bS,"",k,an,q,!1,r)):(r=null,this.setBlending(THREE.NoBlending),aE(bL,k,an,q,!1,r),ay(bS,"opaque",k,an,q,!1,r),aE(bw,k,an,q,!0,r),ay(bS,"transparent",k,an,q,!0,r));bp.render(l,k);aX.render(l,k,ao,af);s&&s.generateMipmaps&&s.minFilter!==THREE.NearestFilter&&s.minFilter!==THREE.LinearFilter&&a8(s);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,n,m,l){var k=au(h,g,n,m,l);o="";bd.setMaterialFaces(m);l.immediateRenderCallback?l.immediateRenderCallback(k,aF,aY):l.render(function(b){bd.renderBufferImmediate(b,k,m)})};var bG={},V=0,aI={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?aF.disable(aF.CULL_FACE):(c===THREE.FrontFaceDirectionCW?aF.frontFace(aF.CW):aF.frontFace(aF.CCW),d===THREE.CullFaceBack?aF.cullFace(aF.BACK):d===THREE.CullFaceFront?aF.cullFace(aF.FRONT):aF.cullFace(aF.FRONT_AND_BACK),aF.enable(aF.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide;d=d.side===THREE.BackSide;bv!==c&&(c?aF.disable(aF.CULL_FACE):aF.enable(aF.CULL_FACE),bv=c);ag!==d&&(d?aF.frontFace(aF.CW):aF.frontFace(aF.CCW),ag=d)};this.setDepthTest=function(b){by!==b&&(b?aF.enable(aF.DEPTH_TEST):aF.disable(aF.DEPTH_TEST),by=b)};this.setDepthWrite=function(b){a9!==b&&(aF.depthMask(b),a9=b)};this.setBlending=function(f,e,h,g){f!==B&&(f===THREE.NoBlending?aF.disable(aF.BLEND):f===THREE.AdditiveBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.SRC_ALPHA,aF.ONE)):f===THREE.SubtractiveBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.ZERO,aF.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(aF.enable(aF.BLEND),aF.blendEquation(aF.FUNC_ADD),aF.blendFunc(aF.ZERO,aF.SRC_COLOR)):f===THREE.CustomBlending?aF.enable(aF.BLEND):(aF.enable(aF.BLEND),aF.blendEquationSeparate(aF.FUNC_ADD,aF.FUNC_ADD),aF.blendFuncSeparate(aF.SRC_ALPHA,aF.ONE_MINUS_SRC_ALPHA,aF.ONE,aF.ONE_MINUS_SRC_ALPHA)),B=f);if(f===THREE.CustomBlending){if(e!==bM&&(aF.blendEquation(a3(e)),bM=e),h!==P||g!==bO){aF.blendFunc(a3(h),a3(g)),P=h,bO=g}}else{bO=P=bM=null}};this.uploadTexture=function(l){void 0===l.__webglInit&&(l.__webglInit=!0,l.addEventListener("dispose",aR),l.__webglTexture=aF.createTexture(),bd.info.memory.textures++);aF.bindTexture(aF.TEXTURE_2D,l.__webglTexture);aF.pixelStorei(aF.UNPACK_FLIP_Y_WEBGL,l.flipY);aF.pixelStorei(aF.UNPACK_PREMULTIPLY_ALPHA_WEBGL,l.premultiplyAlpha);aF.pixelStorei(aF.UNPACK_ALIGNMENT,l.unpackAlignment);l.image=a7(l.image,bC);var k=l.image,s=THREE.Math.isPowerOfTwo(k.width)&&THREE.Math.isPowerOfTwo(k.height),r=a3(l.format),q=a3(l.type);a2(aF.TEXTURE_2D,l,s);var p=l.mipmaps;if(l instanceof THREE.DataTexture){if(0<p.length&&s){for(var n=0,m=p.length;n<m;n++){k=p[n],aF.texImage2D(aF.TEXTURE_2D,n,r,k.width,k.height,0,r,q,k.data)}l.generateMipmaps=!1}else{aF.texImage2D(aF.TEXTURE_2D,0,r,k.width,k.height,0,r,q,k.data)}}else{if(l instanceof THREE.CompressedTexture){for(n=0,m=p.length;n<m;n++){k=p[n],l.format!==THREE.RGBAFormat&&l.format!==THREE.RGBFormat?-1<aN().indexOf(r)?aF.compressedTexImage2D(aF.TEXTURE_2D,n,r,k.width,k.height,0,k.data):console.warn("Attempt to load unsupported compressed texture format"):aF.texImage2D(aF.TEXTURE_2D,n,r,k.width,k.height,0,r,q,k.data)}}else{if(0<p.length&&s){n=0;for(m=p.length;n<m;n++){k=p[n],aF.texImage2D(aF.TEXTURE_2D,n,r,r,q,k)}l.generateMipmaps=!1}else{aF.texImage2D(aF.TEXTURE_2D,0,r,r,q,l.image)}}}l.generateMipmaps&&s&&aF.generateMipmap(aF.TEXTURE_2D);l.needsUpdate=!1;if(l.onUpdate){l.onUpdate()}};this.setTexture=function(d,c){aF.activeTexture(aF.TEXTURE0+c);d.needsUpdate?bd.uploadTexture(d):aF.bindTexture(aF.TEXTURE_2D,d.__webglTexture)};this.setRenderTarget=function(l){var k=l instanceof THREE.WebGLRenderTargetCube;if(l&&void 0===l.__webglFramebuffer){void 0===l.depthBuffer&&(l.depthBuffer=!0);void 0===l.stencilBuffer&&(l.stencilBuffer=!0);l.addEventListener("dispose",ba);l.__webglTexture=aF.createTexture();bd.info.memory.textures++;var s=THREE.Math.isPowerOfTwo(l.width)&&THREE.Math.isPowerOfTwo(l.height),r=a3(l.format),q=a3(l.type);if(k){l.__webglFramebuffer=[];l.__webglRenderbuffer=[];aF.bindTexture(aF.TEXTURE_CUBE_MAP,l.__webglTexture);a2(aF.TEXTURE_CUBE_MAP,l,s);for(var n=0;6>n;n++){l.__webglFramebuffer[n]=aF.createFramebuffer();l.__webglRenderbuffer[n]=aF.createRenderbuffer();aF.texImage2D(aF.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,l.width,l.height,0,r,q,null);var p=l,m=aF.TEXTURE_CUBE_MAP_POSITIVE_X+n;aF.bindFramebuffer(aF.FRAMEBUFFER,l.__webglFramebuffer[n]);aF.framebufferTexture2D(aF.FRAMEBUFFER,aF.COLOR_ATTACHMENT0,m,p.__webglTexture,0);bc(l.__webglRenderbuffer[n],l)}s&&aF.generateMipmap(aF.TEXTURE_CUBE_MAP)}else{l.__webglFramebuffer=aF.createFramebuffer(),l.__webglRenderbuffer=l.shareDepthFrom?l.shareDepthFrom.__webglRenderbuffer:aF.createRenderbuffer(),aF.bindTexture(aF.TEXTURE_2D,l.__webglTexture),a2(aF.TEXTURE_2D,l,s),aF.texImage2D(aF.TEXTURE_2D,0,r,l.width,l.height,0,r,q,null),r=aF.TEXTURE_2D,aF.bindFramebuffer(aF.FRAMEBUFFER,l.__webglFramebuffer),aF.framebufferTexture2D(aF.FRAMEBUFFER,aF.COLOR_ATTACHMENT0,r,l.__webglTexture,0),l.shareDepthFrom?l.depthBuffer&&!l.stencilBuffer?aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_ATTACHMENT,aF.RENDERBUFFER,l.__webglRenderbuffer):l.depthBuffer&&l.stencilBuffer&&aF.framebufferRenderbuffer(aF.FRAMEBUFFER,aF.DEPTH_STENCIL_ATTACHMENT,aF.RENDERBUFFER,l.__webglRenderbuffer):bc(l.__webglRenderbuffer,l),s&&aF.generateMipmap(aF.TEXTURE_2D)}k?aF.bindTexture(aF.TEXTURE_CUBE_MAP,null):aF.bindTexture(aF.TEXTURE_2D,null);aF.bindRenderbuffer(aF.RENDERBUFFER,null);aF.bindFramebuffer(aF.FRAMEBUFFER,null)}l?(k=k?l.__webglFramebuffer[l.activeCubeFace]:l.__webglFramebuffer,s=l.width,l=l.height,q=r=0):(k=null,s=aJ,l=ak,r=bb,q=J);k!==aW&&(aF.bindFramebuffer(aF.FRAMEBUFFER,k),aF.viewport(r,q,s,l),aW=k);ao=s;af=l};this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};THREE.WebGLRenderTarget=function(e,d,f){this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(d,c){this.width=d;this.height=c},clone:function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.WebGLExtensions=function(d){var c={};this.get=function(b){if(void 0!==c[b]){return c[b]}var a;switch(b){case"EXT_texture_filter_anisotropic":a=d.getExtension("EXT_texture_filter_anisotropic")||d.getExtension("MOZ_EXT_texture_filter_anisotropic")||d.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":a=d.getExtension("WEBGL_compressed_texture_s3tc")||d.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||d.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":a=d.getExtension("WEBGL_compressed_texture_pvrtc")||d.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:a=d.getExtension(b)}null===a&&console.log("THREE.WebGLRenderer: "+b+" extension not supported.");return c[b]=a}};THREE.WebGLProgram=function(){var b=0;return function(P,O,N,M){var L=P.context,K=N.defines,J=N.__webglShader.uniforms,I=N.attributes,G=N.__webglShader.vertexShader,F=N.__webglShader.fragmentShader,E=N.index0AttributeName;void 0===E&&!0===M.morphTargets&&(E="position");var H="SHADOWMAP_TYPE_BASIC";M.shadowMapType===THREE.PCFShadowMap?H="SHADOWMAP_TYPE_PCF":M.shadowMapType===THREE.PCFSoftShadowMap&&(H="SHADOWMAP_TYPE_PCF_SOFT");var o="ENVMAP_TYPE_CUBE",A="ENVMAP_MODE_REFLECTION",D="ENVMAP_BLENDING_MULTIPLY";if(M.envMap){switch(N.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:o="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:o="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:o="ENVMAP_TYPE_SPHERE"}switch(N.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:A="ENVMAP_MODE_REFRACTION"}switch(N.combine){case THREE.MultiplyOperation:D="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:D="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:D="ENVMAP_BLENDING_ADD"}}var l,j;l=[];for(var a in K){j=K[a],!1!==j&&(j="#define "+a+" "+j,l.push(j))}l=l.join("\n");K=L.createProgram();N instanceof THREE.RawShaderMaterial?P=N="":(N=["precision "+M.precision+" float;","precision "+M.precision+" int;",l,M.supportsVertexTextures?"#define VERTEX_TEXTURES":"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+M.maxDirLights,"#define MAX_POINT_LIGHTS "+M.maxPointLights,"#define MAX_SPOT_LIGHTS "+M.maxSpotLights,"#define MAX_HEMI_LIGHTS "+M.maxHemiLights,"#define MAX_SHADOWS "+M.maxShadows,"#define MAX_BONES "+M.maxBones,M.map?"#define USE_MAP":"",M.envMap?"#define USE_ENVMAP":"",M.envMap?"#define "+A:"",M.lightMap?"#define USE_LIGHTMAP":"",M.bumpMap?"#define USE_BUMPMAP":"",M.normalMap?"#define USE_NORMALMAP":"",M.specularMap?"#define USE_SPECULARMAP":"",M.alphaMap?"#define USE_ALPHAMAP":"",M.vertexColors?"#define USE_COLOR":"",M.skinning?"#define USE_SKINNING":"",M.useVertexTexture?"#define BONE_TEXTURE":"",M.morphTargets?"#define USE_MORPHTARGETS":"",M.morphNormals?"#define USE_MORPHNORMALS":"",M.wrapAround?"#define WRAP_AROUND":"",M.doubleSided?"#define DOUBLE_SIDED":"",M.flipSided?"#define FLIP_SIDED":"",M.shadowMapEnabled?"#define USE_SHADOWMAP":"",M.shadowMapEnabled?"#define "+H:"",M.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",M.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",M.sizeAttenuation?"#define USE_SIZEATTENUATION":"",M.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),P=["precision "+M.precision+" float;","precision "+M.precision+" int;",M.bumpMap||M.normalMap?"#extension GL_OES_standard_derivatives : enable":"",l,"#define MAX_DIR_LIGHTS "+M.maxDirLights,"#define MAX_POINT_LIGHTS "+M.maxPointLights,"#define MAX_SPOT_LIGHTS "+M.maxSpotLights,"#define MAX_HEMI_LIGHTS "+M.maxHemiLights,"#define MAX_SHADOWS "+M.maxShadows,M.alphaTest?"#define ALPHATEST "+M.alphaTest:"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"",M.useFog&&M.fog?"#define USE_FOG":"",M.useFog&&M.fogExp?"#define FOG_EXP2":"",M.map?"#define USE_MAP":"",M.envMap?"#define USE_ENVMAP":"",M.envMap?"#define "+o:"",M.envMap?"#define "+A:"",M.envMap?"#define "+D:"",M.lightMap?"#define USE_LIGHTMAP":"",M.bumpMap?"#define USE_BUMPMAP":"",M.normalMap?"#define USE_NORMALMAP":"",M.specularMap?"#define USE_SPECULARMAP":"",M.alphaMap?"#define USE_ALPHAMAP":"",M.vertexColors?"#define USE_COLOR":"",M.metal?"#define METAL":"",M.wrapAround?"#define WRAP_AROUND":"",M.doubleSided?"#define DOUBLE_SIDED":"",M.flipSided?"#define FLIP_SIDED":"",M.shadowMapEnabled?"#define USE_SHADOWMAP":"",M.shadowMapEnabled?"#define "+H:"",M.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",M.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",M.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));G=new THREE.WebGLShader(L,L.VERTEX_SHADER,N+G);F=new THREE.WebGLShader(L,L.FRAGMENT_SHADER,P+F);L.attachShader(K,G);L.attachShader(K,F);void 0!==E&&L.bindAttribLocation(K,0,E);L.linkProgram(K);!1===L.getProgramParameter(K,L.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",L.getProgramParameter(K,L.VALIDATE_STATUS)),console.error("gl.getError()",L.getError()));""!==L.getProgramInfoLog(K)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",L.getProgramInfoLog(K));L.deleteShader(G);L.deleteShader(F);E="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");M.useVertexTexture?(E.push("boneTexture"),E.push("boneTextureWidth"),E.push("boneTextureHeight")):E.push("boneGlobalMatrices");M.logarithmicDepthBuffer&&E.push("logDepthBufFC");for(var B in J){E.push(B)}J=E;B={};E=0;for(P=J.length;E<P;E++){H=J[E],B[H]=L.getUniformLocation(K,H)}this.uniforms=B;E="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(J=0;J<M.maxMorphTargets;J++){E.push("morphTarget"+J)}for(J=0;J<M.maxMorphNormals;J++){E.push("morphNormal"+J)}for(var i in I){E.push(i)}M=E;I={};i=0;for(J=M.length;i<J;i++){B=M[i],I[B]=L.getAttribLocation(K,B)}this.attributes=I;this.attributesKeys=Object.keys(this.attributes);this.id=b++;this.code=O;this.usedTimes=1;this.program=K;this.vertexShader=G;this.fragmentShader=F;return this}}();THREE.WebGLShader=function(){var b=function(d){d=d.split("\n");for(var e=0;e<d.length;e++){d[e]=e+1+": "+d[e]}return d.join("\n")};return function(a,f,e){f=a.createShader(f);a.shaderSource(f,e);a.compileShader(f);!1===a.getShaderParameter(f,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==a.getShaderInfoLog(f)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",a.getShaderInfoLog(f)),console.warn(b(e)));return f}}();THREE.LensFlarePlugin=function(O,N){var M,L,K,J,I,H,G,E,D,C,F=O.context,o,A,B,l,j,i;this.render=function(b,q,t,n){if(0!==N.length){b=new THREE.Vector3;var s=n/t,u=0.5*t,r=0.5*n,a=16/n,c=new THREE.Vector2(a*s,a),e=new THREE.Vector3(1,1,0),k=new THREE.Vector2(1,1);if(void 0===B){var a=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),p=new Uint16Array([0,1,2,0,2,3]);o=F.createBuffer();A=F.createBuffer();F.bindBuffer(F.ARRAY_BUFFER,o);F.bufferData(F.ARRAY_BUFFER,a,F.STATIC_DRAW);F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,A);F.bufferData(F.ELEMENT_ARRAY_BUFFER,p,F.STATIC_DRAW);j=F.createTexture();i=F.createTexture();F.bindTexture(F.TEXTURE_2D,j);F.texImage2D(F.TEXTURE_2D,0,F.RGB,16,16,0,F.RGB,F.UNSIGNED_BYTE,null);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_S,F.CLAMP_TO_EDGE);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_T,F.CLAMP_TO_EDGE);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MAG_FILTER,F.NEAREST);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MIN_FILTER,F.NEAREST);F.bindTexture(F.TEXTURE_2D,i);F.texImage2D(F.TEXTURE_2D,0,F.RGBA,16,16,0,F.RGBA,F.UNSIGNED_BYTE,null);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_S,F.CLAMP_TO_EDGE);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_WRAP_T,F.CLAMP_TO_EDGE);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MAG_FILTER,F.NEAREST);F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MIN_FILTER,F.NEAREST);var a=(l=0<F.getParameter(F.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},p=F.createProgram(),m=F.createShader(F.FRAGMENT_SHADER),h=F.createShader(F.VERTEX_SHADER),f="precision "+O.getPrecision()+" float;\n";F.shaderSource(m,f+a.fragmentShader);F.shaderSource(h,f+a.vertexShader);F.compileShader(m);F.compileShader(h);F.attachShader(p,m);F.attachShader(p,h);F.linkProgram(p);B=p;D=F.getAttribLocation(B,"position");C=F.getAttribLocation(B,"uv");M=F.getUniformLocation(B,"renderType");L=F.getUniformLocation(B,"map");K=F.getUniformLocation(B,"occlusionMap");J=F.getUniformLocation(B,"opacity");I=F.getUniformLocation(B,"color");H=F.getUniformLocation(B,"scale");G=F.getUniformLocation(B,"rotation");E=F.getUniformLocation(B,"screenPosition")}F.useProgram(B);F.enableVertexAttribArray(D);F.enableVertexAttribArray(C);F.uniform1i(K,0);F.uniform1i(L,1);F.bindBuffer(F.ARRAY_BUFFER,o);F.vertexAttribPointer(D,2,F.FLOAT,!1,16,0);F.vertexAttribPointer(C,2,F.FLOAT,!1,16,8);F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,A);F.disable(F.CULL_FACE);F.depthMask(!1);p=0;for(m=N.length;p<m;p++){if(a=16/n,c.set(a*s,a),h=N[p],b.set(h.matrixWorld.elements[12],h.matrixWorld.elements[13],h.matrixWorld.elements[14]),b.applyMatrix4(q.matrixWorldInverse),b.applyProjection(q.projectionMatrix),e.copy(b),k.x=e.x*u+u,k.y=e.y*r+r,l||0<k.x&&k.x<t&&0<k.y&&k.y<n){F.activeTexture(F.TEXTURE1);F.bindTexture(F.TEXTURE_2D,j);F.copyTexImage2D(F.TEXTURE_2D,0,F.RGB,k.x-8,k.y-8,16,16,0);F.uniform1i(M,0);F.uniform2f(H,c.x,c.y);F.uniform3f(E,e.x,e.y,e.z);F.disable(F.BLEND);F.enable(F.DEPTH_TEST);F.drawElements(F.TRIANGLES,6,F.UNSIGNED_SHORT,0);F.activeTexture(F.TEXTURE0);F.bindTexture(F.TEXTURE_2D,i);F.copyTexImage2D(F.TEXTURE_2D,0,F.RGBA,k.x-8,k.y-8,16,16,0);F.uniform1i(M,1);F.disable(F.DEPTH_TEST);F.activeTexture(F.TEXTURE1);F.bindTexture(F.TEXTURE_2D,j);F.drawElements(F.TRIANGLES,6,F.UNSIGNED_SHORT,0);h.positionScreen.copy(e);h.customUpdateCallback?h.customUpdateCallback(h):h.updateLensFlares();F.uniform1i(M,2);F.enable(F.BLEND);for(var f=0,g=h.lensFlares.length;f<g;f++){var d=h.lensFlares[f];0.001<d.opacity&&0.001<d.scale&&(e.x=d.x,e.y=d.y,e.z=d.z,a=d.size*d.scale/n,c.x=a*s,c.y=a,F.uniform3f(E,e.x,e.y,e.z),F.uniform2f(H,c.x,c.y),F.uniform1f(G,d.rotation),F.uniform1f(J,d.opacity),F.uniform3f(I,d.color.r,d.color.g,d.color.b),O.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),O.setTexture(d.texture,1),F.drawElements(F.TRIANGLES,6,F.UNSIGNED_SHORT,0))}}}F.enable(F.CULL_FACE);F.enable(F.DEPTH_TEST);F.depthMask(!0);O.resetGLState()}}};THREE.ShadowMapPlugin=function(N,M,L,K){function J(e,c,r){if(c.visible){var p=L[c.id];if(p&&c.castShadow&&(!1===c.frustumCulled||!0===C.intersectsObject(c))){for(var q=0,n=p.length;q<n;q++){var m=p[q];c._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,c.matrixWorld);A.push(m)}}q=0;for(n=c.children.length;q<n;q++){J(e,c.children[q],r)}}}var I=N.context,H,G,F,D,C=new THREE.Frustum,B=new THREE.Matrix4,E=new THREE.Vector3,l=new THREE.Vector3,o=new THREE.Vector3,A=[],j=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(j.uniforms);H=new THREE.ShaderMaterial({uniforms:i,vertexShader:j.vertexShader,fragmentShader:j.fragmentShader});G=new THREE.ShaderMaterial({uniforms:i,vertexShader:j.vertexShader,fragmentShader:j.fragmentShader,morphTargets:!0});F=new THREE.ShaderMaterial({uniforms:i,vertexShader:j.vertexShader,fragmentShader:j.fragmentShader,skinning:!0});D=new THREE.ShaderMaterial({uniforms:i,vertexShader:j.vertexShader,fragmentShader:j.fragmentShader,morphTargets:!0,skinning:!0});H._shadowPass=!0;G._shadowPass=!0;F._shadowPass=!0;D._shadowPass=!0;this.render=function(g,n){if(!1!==N.shadowMapEnabled){var q,r,h,p,s,m,a,b,d=[];p=0;I.clearColor(1,1,1,1);I.disable(I.BLEND);I.enable(I.CULL_FACE);I.frontFace(I.CCW);N.shadowMapCullFace===THREE.CullFaceFront?I.cullFace(I.FRONT):I.cullFace(I.BACK);N.setDepthTest(!0);q=0;for(r=M.length;q<r;q++){if(h=M[q],h.castShadow){if(h instanceof THREE.DirectionalLight&&h.shadowCascade){for(s=0;s<h.shadowCascadeCount;s++){var e;if(h.shadowCascadeArray[s]){e=h.shadowCascadeArray[s]}else{a=h;var k=s;e=new THREE.DirectionalLight;e.isVirtual=!0;e.onlyShadow=!0;e.castShadow=!0;e.shadowCameraNear=a.shadowCameraNear;e.shadowCameraFar=a.shadowCameraFar;e.shadowCameraLeft=a.shadowCameraLeft;e.shadowCameraRight=a.shadowCameraRight;e.shadowCameraBottom=a.shadowCameraBottom;e.shadowCameraTop=a.shadowCameraTop;e.shadowCameraVisible=a.shadowCameraVisible;e.shadowDarkness=a.shadowDarkness;e.shadowBias=a.shadowCascadeBias[k];e.shadowMapWidth=a.shadowCascadeWidth[k];e.shadowMapHeight=a.shadowCascadeHeight[k];e.pointsWorld=[];e.pointsFrustum=[];b=e.pointsWorld;m=e.pointsFrustum;for(var f=0;8>f;f++){b[f]=new THREE.Vector3,m[f]=new THREE.Vector3}b=a.shadowCascadeNearZ[k];a=a.shadowCascadeFarZ[k];m[0].set(-1,-1,b);m[1].set(1,-1,b);m[2].set(-1,1,b);m[3].set(1,1,b);m[4].set(-1,-1,a);m[5].set(1,-1,a);m[6].set(-1,1,a);m[7].set(1,1,a);e.originalCamera=n;m=new THREE.Gyroscope;m.position.copy(h.shadowCascadeOffset);m.add(e);m.add(e.target);n.add(m);h.shadowCascadeArray[s]=e;console.log("Created virtualLight",e)}k=h;b=s;a=k.shadowCascadeArray[b];a.position.copy(k.position);a.target.position.copy(k.target.position);a.lookAt(a.target);a.shadowCameraVisible=k.shadowCameraVisible;a.shadowDarkness=k.shadowDarkness;a.shadowBias=k.shadowCascadeBias[b];m=k.shadowCascadeNearZ[b];k=k.shadowCascadeFarZ[b];a=a.pointsFrustum;a[0].z=m;a[1].z=m;a[2].z=m;a[3].z=m;a[4].z=k;a[5].z=k;a[6].z=k;a[7].z=k;d[p]=e;p++}}else{d[p]=h,p++}}}q=0;for(r=d.length;q<r;q++){h=d[q];h.shadowMap||(s=THREE.LinearFilter,N.shadowMapType===THREE.PCFSoftShadowMap&&(s=THREE.NearestFilter),h.shadowMap=new THREE.WebGLRenderTarget(h.shadowMapWidth,h.shadowMapHeight,{minFilter:s,magFilter:s,format:THREE.RGBAFormat}),h.shadowMapSize=new THREE.Vector2(h.shadowMapWidth,h.shadowMapHeight),h.shadowMatrix=new THREE.Matrix4);if(!h.shadowCamera){if(h instanceof THREE.SpotLight){h.shadowCamera=new THREE.PerspectiveCamera(h.shadowCameraFov,h.shadowMapWidth/h.shadowMapHeight,h.shadowCameraNear,h.shadowCameraFar)}else{if(h instanceof THREE.DirectionalLight){h.shadowCamera=new THREE.OrthographicCamera(h.shadowCameraLeft,h.shadowCameraRight,h.shadowCameraTop,h.shadowCameraBottom,h.shadowCameraNear,h.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}g.add(h.shadowCamera);!0===g.autoUpdate&&g.updateMatrixWorld()}h.shadowCameraVisible&&!h.cameraHelper&&(h.cameraHelper=new THREE.CameraHelper(h.shadowCamera),g.add(h.cameraHelper));if(h.isVirtual&&e.originalCamera==n){s=n;p=h.shadowCamera;m=h.pointsFrustum;a=h.pointsWorld;E.set(Infinity,Infinity,Infinity);l.set(-Infinity,-Infinity,-Infinity);for(k=0;8>k;k++){b=a[k],b.copy(m[k]),b.unproject(s),b.applyMatrix4(p.matrixWorldInverse),b.x<E.x&&(E.x=b.x),b.x>l.x&&(l.x=b.x),b.y<E.y&&(E.y=b.y),b.y>l.y&&(l.y=b.y),b.z<E.z&&(E.z=b.z),b.z>l.z&&(l.z=b.z)}p.left=E.x;p.right=l.x;p.top=l.y;p.bottom=E.y;p.updateProjectionMatrix()}p=h.shadowMap;m=h.shadowMatrix;s=h.shadowCamera;s.position.setFromMatrixPosition(h.matrixWorld);o.setFromMatrixPosition(h.target.matrixWorld);s.lookAt(o);s.updateMatrixWorld();s.matrixWorldInverse.getInverse(s.matrixWorld);h.cameraHelper&&(h.cameraHelper.visible=h.shadowCameraVisible);h.shadowCameraVisible&&h.cameraHelper.update();m.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);m.multiply(s.projectionMatrix);m.multiply(s.matrixWorldInverse);B.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse);C.setFromMatrix(B);N.setRenderTarget(p);N.clear();A.length=0;J(g,g,s);h=0;for(p=A.length;h<p;h++){a=A[h],m=a.object,a=a.buffer,k=m.material instanceof THREE.MeshFaceMaterial?m.material.materials[0]:m.material,b=void 0!==m.geometry.morphTargets&&0<m.geometry.morphTargets.length&&k.morphTargets,f=m instanceof THREE.SkinnedMesh&&k.skinning,b=m.customDepthMaterial?m.customDepthMaterial:f?b?D:F:b?G:H,N.setMaterialFaces(k),a instanceof THREE.BufferGeometry?N.renderBufferDirect(s,M,null,b,a,m):N.renderBuffer(s,M,null,b,a,m)}h=0;for(p=K.length;h<p;h++){a=K[h],m=a.object,m.visible&&m.castShadow&&(m._modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,m.matrixWorld),N.renderImmediateObject(s,M,null,H,m))}}q=N.getClearColor();r=N.getClearAlpha();I.clearColor(q.r,q.g,q.b,r);I.enable(I.BLEND);N.shadowMapCullFace===THREE.CullFaceFront&&I.cullFace(I.BACK);N.resetGLState()}}};THREE.SpritePlugin=function(ad,ac){var ab,aa,Z,Y,X,W,V,T,S,Q,U,L,N,P,J,H,j;function O(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var l=ad.context,I,i,B,K,o=new THREE.Vector3,M=new THREE.Quaternion,R=new THREE.Vector3;this.render=function(b,g){if(0!==ac.length){if(void 0===B){var k=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),h=new Uint16Array([0,1,2,0,2,3]);I=l.createBuffer();i=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,I);l.bufferData(l.ARRAY_BUFFER,k,l.STATIC_DRAW);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,i);l.bufferData(l.ELEMENT_ARRAY_BUFFER,h,l.STATIC_DRAW);var k=l.createProgram(),h=l.createShader(l.VERTEX_SHADER),f=l.createShader(l.FRAGMENT_SHADER);l.shaderSource(h,["precision "+ad.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));l.shaderSource(f,["precision "+ad.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));l.compileShader(h);l.compileShader(f);l.attachShader(k,h);l.attachShader(k,f);l.linkProgram(k);B=k;H=l.getAttribLocation(B,"position");j=l.getAttribLocation(B,"uv");ab=l.getUniformLocation(B,"uvOffset");aa=l.getUniformLocation(B,"uvScale");Z=l.getUniformLocation(B,"rotation");Y=l.getUniformLocation(B,"scale");X=l.getUniformLocation(B,"color");W=l.getUniformLocation(B,"map");V=l.getUniformLocation(B,"opacity");T=l.getUniformLocation(B,"modelViewMatrix");S=l.getUniformLocation(B,"projectionMatrix");Q=l.getUniformLocation(B,"fogType");U=l.getUniformLocation(B,"fogDensity");L=l.getUniformLocation(B,"fogNear");N=l.getUniformLocation(B,"fogFar");P=l.getUniformLocation(B,"fogColor");J=l.getUniformLocation(B,"alphaTest");k=document.createElement("canvas");k.width=8;k.height=8;h=k.getContext("2d");h.fillStyle="white";h.fillRect(0,0,8,8);K=new THREE.Texture(k);K.needsUpdate=!0}l.useProgram(B);l.enableVertexAttribArray(H);l.enableVertexAttribArray(j);l.disable(l.CULL_FACE);l.enable(l.BLEND);l.bindBuffer(l.ARRAY_BUFFER,I);l.vertexAttribPointer(H,2,l.FLOAT,!1,16,0);l.vertexAttribPointer(j,2,l.FLOAT,!1,16,8);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,i);l.uniformMatrix4fv(S,!1,g.projectionMatrix.elements);l.activeTexture(l.TEXTURE0);l.uniform1i(W,0);h=k=0;(f=b.fog)?(l.uniform3f(P,f.color.r,f.color.g,f.color.b),f instanceof THREE.Fog?(l.uniform1f(L,f.near),l.uniform1f(N,f.far),l.uniform1i(Q,1),h=k=1):f instanceof THREE.FogExp2&&(l.uniform1f(U,f.density),l.uniform1i(Q,2),h=k=2)):(l.uniform1i(Q,0),h=k=0);for(var f=0,c=ac.length;f<c;f++){var d=ac[f];d._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,d.matrixWorld);d.z=-d._modelViewMatrix.elements[14]}ac.sort(O);for(var a=[],f=0,c=ac.length;f<c;f++){var d=ac[f],e=d.material;l.uniform1f(J,e.alphaTest);l.uniformMatrix4fv(T,!1,d._modelViewMatrix.elements);d.matrixWorld.decompose(o,M,R);a[0]=R.x;a[1]=R.y;d=0;b.fog&&e.fog&&(d=h);k!==d&&(l.uniform1i(Q,d),k=d);null!==e.map?(l.uniform2f(ab,e.map.offset.x,e.map.offset.y),l.uniform2f(aa,e.map.repeat.x,e.map.repeat.y)):(l.uniform2f(ab,0,0),l.uniform2f(aa,1,1));l.uniform1f(V,e.opacity);l.uniform3f(X,e.color.r,e.color.g,e.color.b);l.uniform1f(Z,e.rotation);l.uniform2fv(Y,a);ad.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst);ad.setDepthTest(e.depthTest);ad.setDepthWrite(e.depthWrite);e.map&&e.map.image&&e.map.image.width?ad.setTexture(e.map,0):ad.setTexture(K,0);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)}l.enable(l.CULL_FACE);ad.resetGLState()}}};THREE.GeometryUtils={merge:function(f,e,h){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var g;e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),g=e.matrix,e=e.geometry);f.merge(e,g,h)},center:function(b){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return b.center()}};THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(h,g,l,k){var j=new THREE.ImageLoader;j.crossOrigin=this.crossOrigin;var i=new THREE.Texture(void 0,g);j.load(h,function(b){i.image=b;i.needsUpdate=!0;l&&l(i)},void 0,function(b){k&&k(b)});i.sourceFile=h;return i},loadTextureCube:function(r,q,p,o){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var m=new THREE.CubeTexture([],q);m.flipY=!1;var l=0;q=function(a){n.load(r[a],function(b){m.images[a]=b;l+=1;6===l&&(m.needsUpdate=!0,p&&p(m))},void 0,o)};for(var j=0,i=r.length;j<i;++j){q(j)}return m},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(O,N){var M=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]};N|=1;var L=O.width,K=O.height,J=document.createElement("canvas");J.width=L;J.height=K;var I=J.getContext("2d");I.drawImage(O,0,0);for(var H=I.getImageData(0,0,L,K).data,G=I.createImageData(L,K),E=G.data,D=0;D<L;D++){for(var C=0;C<K;C++){var F=0>C-1?0:C-1,o=C+1>K-1?K-1:C+1,A=0>D-1?0:D-1,B=D+1>L-1?L-1:D+1,l=[],j=[0,0,H[4*(C*L+D)]/255*N];l.push([-1,0,H[4*(C*L+A)]/255*N]);l.push([-1,-1,H[4*(F*L+A)]/255*N]);l.push([0,-1,H[4*(F*L+D)]/255*N]);l.push([1,-1,H[4*(F*L+B)]/255*N]);l.push([1,0,H[4*(C*L+B)]/255*N]);l.push([1,1,H[4*(o*L+B)]/255*N]);l.push([0,1,H[4*(o*L+D)]/255*N]);l.push([-1,1,H[4*(o*L+A)]/255*N]);F=[];A=l.length;for(o=0;o<A;o++){var B=l[o],i=l[(o+1)%A],B=[B[0]-j[0],B[1]-j[1],B[2]-j[2]],i=[i[0]-j[0],i[1]-j[1],i[2]-j[2]];F.push(M([B[1]*i[2]-B[2]*i[1],B[2]*i[0]-B[0]*i[2],B[0]*i[1]-B[1]*i[0]]))}l=[0,0,0];for(o=0;o<F.length;o++){l[0]+=F[o][0],l[1]+=F[o][1],l[2]+=F[o][2]}l[0]/=F.length;l[1]/=F.length;l[2]/=F.length;j=4*(C*L+D);E[j]=(l[0]+1)/2*255|0;E[j+1]=(l[1]+1)/2*255|0;E[j+2]=255*l[2]|0;E[j+3]=255}}I.putImageData(G,0,0);return J},generateDataTexture:function(j,i,p){var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),l=Math.floor(255*p.g);p=Math.floor(255*p.b);for(var k=0;k<o;k++){n[3*k]=m,n[3*k+1]=l,n[3*k+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(b){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,l=[];for(j=0;j<m;j++){var k=new THREE.Path,k=this.extractGlyphPoints(n[j],i,p,o,k),o=o+k.offset;l.push(k.path)}return{paths:l,offset:o/2}},extractGlyphPoints:function(O,N,M,L,K){var J=[],I,H,G,E,D,C,F,o,A,B,l,j=N.glyphs[O]||N.glyphs["?"];if(j){if(j.o){for(N=j._cachedOutline||(j._cachedOutline=j.o.split(" ")),E=N.length,O=0;O<E;){switch(G=N[O++],G){case"m":G=N[O++]*M+L;D=N[O++]*M;K.moveTo(G,D);break;case"l":G=N[O++]*M+L;D=N[O++]*M;K.lineTo(G,D);break;case"q":G=N[O++]*M+L;D=N[O++]*M;o=N[O++]*M+L;A=N[O++]*M;K.quadraticCurveTo(o,A,G,D);if(I=J[J.length-1]){for(C=I.x,F=I.y,I=1,H=this.divisions;I<=H;I++){var i=I/H;THREE.Shape.Utils.b2(i,C,o,G);THREE.Shape.Utils.b2(i,F,A,D)}}break;case"b":if(G=N[O++]*M+L,D=N[O++]*M,o=N[O++]*M+L,A=N[O++]*M,B=N[O++]*M+L,l=N[O++]*M,K.bezierCurveTo(o,A,B,l,G,D),I=J[J.length-1]){for(C=I.x,F=I.y,I=1,H=this.divisions;I<=H;I++){i=I/H,THREE.Shape.Utils.b3(i,C,o,B,G),THREE.Shape.Utils.b3(i,F,A,l,D)}}}}}return{offset:j.ha*M,path:K}}}};THREE.FontUtils.generateShapes=function(h,g){g=g||{};var l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var h=i.length,l=0,k=h-1,j=0;j<h;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(ag,af){var ae=ag.length;if(3>ae){return null}var ad=[],ac=[],ab=[],aa,Y,X;if(0<c(ag)){for(Y=0;Y<ae;Y++){ac[Y]=Y}}else{for(Y=0;Y<ae;Y++){ac[Y]=ae-1-Y}}var V=2*ae;for(Y=ae-1;2<ae;){if(0>=V--){console.log("Warning, unable to triangulate polygon!");break}aa=Y;ae<=aa&&(aa=0);Y=aa+1;ae<=Y&&(Y=0);X=Y+1;ae<=X&&(X=0);var Z;ag:{var P=Z=void 0,R=void 0,T=void 0,N=void 0,J=void 0,o=void 0,S=void 0,B=void 0,P=ag[ac[aa]].x,R=ag[ac[aa]].y,T=ag[ac[Y]].x,N=ag[ac[Y]].y,J=ag[ac[X]].x,o=ag[ac[X]].y;if(1e-10>(T-P)*(o-R)-(N-R)*(J-P)){Z=!1}else{var L=void 0,l=void 0,I=void 0,O=void 0,H=void 0,Q=void 0,W=void 0,b=void 0,i=void 0,j=void 0,i=b=W=B=S=void 0,L=J-T,l=o-N,I=P-J,O=R-o,H=T-P,Q=N-R;for(Z=0;Z<ae;Z++){if(S=ag[ac[Z]].x,B=ag[ac[Z]].y,!(S===P&&B===R||S===T&&B===N||S===J&&B===o)&&(W=S-P,b=B-R,i=S-T,j=B-N,S-=J,B-=o,i=L*j-l*i,W=H*b-Q*W,b=I*B-O*S,-1e-10<=i&&-1e-10<=b&&-1e-10<=W)){Z=!1;break ag}}Z=!0}}if(Z){ad.push([ag[ac[aa]],ag[ac[Y]],ag[ac[X]]]);ab.push([ac[aa],ac[Y],ac[X]]);aa=Y;for(X=Y+1;X<ae;aa++,X++){ac[aa]=ac[X]}ae--;V=2*ae}}return af?ab:ad};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Audio=function(b){THREE.Object3D.call(this);this.type="Audio";this.context=b.context;this.source=this.context.createBufferSource();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain)};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.load=function(e){var d=this,f=new XMLHttpRequest;f.open("GET",e,!0);f.responseType="arraybuffer";f.onload=function(b){d.context.decodeAudioData(this.response,function(c){d.source.buffer=c;d.source.connect(d.panner);d.source.start(0)})};f.send();return this};THREE.Audio.prototype.setLoop=function(b){this.source.loop=b};THREE.Audio.prototype.setRefDistance=function(b){this.panner.refDistance=b};THREE.Audio.prototype.setRolloffFactor=function(b){this.panner.rolloffFactor=b};THREE.Audio.prototype.updateMatrixWorld=function(){var b=new THREE.Vector3;return function(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a);b.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(b.x,b.y,b.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new (window.AudioContext||window.webkitAudioContext)};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;THREE.AudioListener.prototype.updateMatrixWorld=function(){var h=new THREE.Vector3,g=new THREE.Quaternion,l=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);b=this.context.listener;var a=this.up;this.matrixWorld.decompose(h,g,l);k.set(0,0,-1).applyQuaternion(g);j.subVectors(h,i);b.setPosition(h.x,h.y,h.z);b.setOrientation(k.x,k.y,k.z,a.x,a.y,a.z);b.setVelocity(j.x,j.y,j.z);i.copy(h)}}();THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(b){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var l=0,j=n-1,i;l<=j;){if(o=Math.floor(l+(j-l)/2),i=p[o]-m,0>i){l=o+1}else{if(0<i){j=o-1}else{j=o;break}}}o=j;if(p[o]==m){return o/(n-1)}l=p[o];return p=(o+(m-l)/(p[o+1]-l))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001;d+=0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().sub(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(g,f,j,i,h){return 6*g*g-6*g+(3*g*g-4*g+1)+(-6*g*g+6*g)+(3*g*g-2*g)},interpolate:function(h,g,l,k,j){h=0.5*(l-h);k=0.5*(k-g);var i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.constructor=d;d.prototype.getPoint=c;return d};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){var d=e*this.getLength(),f=this.getCurveLengths();for(e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var B=this.getPoints(),A,v,u,t,s,r;A=v=Number.NEGATIVE_INFINITY;t=s=Number.POSITIVE_INFINITY;var o,m,l,j,i=B[0] instanceof THREE.Vector3;j=i?new THREE.Vector3:new THREE.Vector2;m=0;for(l=B.length;m<l;m++){o=B[m],o.x>A?A=o.x:o.x<t&&(t=o.x),o.y>v?v=o.y:o.y<s&&(s=o.y),i&&(o.z>u?u=o.z:o.z<r&&(r=o.z)),j.add(o)}B={minX:t,minY:s,maxX:A,maxY:v};i&&(B.maxZ=u,B.minZ=r);return B};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,l,j,i;o=0;for(n=r.length;o<n;o++){m=r[o],l=m.x,j=m.y,i=l/p.maxX,i=q.getUtoTmapping(i,l),l=q.getPoint(i),i=q.getTangent(i),i.set(-i.y,i.x).multiplyScalar(j),m.x=l.x+i.x,m.y=l.y+i.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;THREE.Gyroscope.prototype.updateMatrixWorld=function(){var h=new THREE.Vector3,g=new THREE.Quaternion,l=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Quaternion,i=new THREE.Vector3;return function(c){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||c){this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(k,j,i),this.matrix.decompose(h,g,l),this.matrixWorld.compose(k,g,i)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}}}();THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var l=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:l})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,h,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],h+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,l){var k=this.actions[this.actions.length-1].args;this.absellipse(j+k[k.length-2],i+k[k.length-1],p,o,n,m,l)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,l){var j=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(r,q,p,o,n,m,l);this.curves.push(i);i=i.getPoint(1);j.push(i.x);j.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:j})};THREE.Path.prototype.getSpacedPoints=function(f,e){f||(f=40);for(var h=[],g=0;g<f;g++){h.push(this.getPoint(g/f))}return h};THREE.Path.prototype.getPoints=function(H,G){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(H,G)}H=H||12;var F=[],E,D,C,B,A,v,o,l,j,u,I,J,i;E=0;for(D=this.actions.length;E<D;E++){switch(C=this.actions[E],B=C.action,C=C.args,B){case THREE.PathActions.MOVE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.LINE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:A=C[2];v=C[3];j=C[0];u=C[1];0<F.length?(B=F[F.length-1],I=B.x,J=B.y):(B=this.actions[E-1].args,I=B[B.length-2],J=B[B.length-1]);for(C=1;C<=H;C++){i=C/H,B=THREE.Shape.Utils.b2(i,I,j,A),i=THREE.Shape.Utils.b2(i,J,u,v),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.BEZIER_CURVE_TO:A=C[4];v=C[5];j=C[0];u=C[1];o=C[2];l=C[3];0<F.length?(B=F[F.length-1],I=B.x,J=B.y):(B=this.actions[E-1].args,I=B[B.length-2],J=B[B.length-1]);for(C=1;C<=H;C++){i=C/H,B=THREE.Shape.Utils.b3(i,I,j,o,A),i=THREE.Shape.Utils.b3(i,J,u,l,v),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.CSPLINE_THRU:B=this.actions[E-1].args;i=[new THREE.Vector2(B[B.length-2],B[B.length-1])];B=H*C[0].length;i=i.concat(C[0]);i=new THREE.SplineCurve(i);for(C=1;C<=B;C++){F.push(i.getPointAt(C/B))}break;case THREE.PathActions.ARC:A=C[0];v=C[1];u=C[2];o=C[3];B=C[4];j=!!C[5];I=B-o;J=2*H;for(C=1;C<=J;C++){i=C/J,j||(i=1-i),i=o+i*I,B=A+u*Math.cos(i),i=v+u*Math.sin(i),F.push(new THREE.Vector2(B,i))}break;case THREE.PathActions.ELLIPSE:for(A=C[0],v=C[1],u=C[2],l=C[3],o=C[4],B=C[5],j=!!C[6],I=B-o,J=2*H,C=1;C<=J;C++){i=C/J,j||(i=1-i),i=o+i*I,B=A+u*Math.cos(i),i=v+l*Math.sin(i),F.push(new THREE.Vector2(B,i))}}}E=F[F.length-1];1e-10>Math.abs(E.x-F[0].x)&&1e-10>Math.abs(E.y-F[0].y)&&F.splice(F.length-1,1);G&&F.push(F[0]);return F};THREE.Path.prototype.toShapes=function(I,H){function G(h){for(var f=[],p=0,n=h.length;p<n;p++){var m=h[p],k=new THREE.Shape;k.actions=m.actions;k.curves=m.curves;f.push(k)}return f}function F(O,N){for(var M=N.length,u=!1,t=M-1,r=0;r<M;t=r++){var s=N[t],q=N[r],p=q.x-s.x,n=q.y-s.y;if(1e-10<Math.abs(n)){if(0>n&&(s=N[r],p=-p,q=N[t],n=-n),!(O.y<s.y||O.y>q.y)){if(O.y==s.y){if(O.x==s.x){return !0}}else{t=n*(O.x-s.x)-p*(O.y-s.y);if(0==t){return !0}0>t||(u=!u)}}}else{if(O.y==s.y&&(q.x<=O.x&&O.x<=s.x||s.x<=O.x&&O.x<=q.x)){return !0}}}return u}var E=function(k){var h,r,q,p,n=[],m=new THREE.Path;h=0;for(r=k.length;h<r;h++){q=k[h],p=q.args,q=q.action,q==THREE.PathActions.MOVE_TO&&0!=m.actions.length&&(n.push(m),m=new THREE.Path),m[q].apply(m,p)}0!=m.actions.length&&n.push(m);return n}(this.actions);if(0==E.length){return[]}if(!0===H){return G(E)}var D,C,B,A=[];if(1==E.length){return C=E[0],B=new THREE.Shape,B.actions=C.actions,B.curves=C.curves,A.push(B),A}var o=!THREE.Shape.Utils.isClockWise(E[0].getPoints()),o=I?!o:o;B=[];var l=[],j=[],v=0,K;l[v]=void 0;j[v]=[];var L,i;L=0;for(i=E.length;L<i;L++){C=E[L],K=C.getPoints(),D=THREE.Shape.Utils.isClockWise(K),(D=I?!D:D)?(!o&&l[v]&&v++,l[v]={s:new THREE.Shape,p:K},l[v].s.actions=C.actions,l[v].s.curves=C.curves,o&&v++,j[v]=[]):j[v].push({h:C,p:K[0]})}if(!l[0]){return G(E)}if(1<l.length){L=!1;i=[];C=0;for(E=l.length;C<E;C++){B[C]=[]}C=0;for(E=l.length;C<E;C++){for(D=j[C],o=0;o<D.length;o++){v=D[o];K=!0;for(var J=0;J<l.length;J++){F(v.p,l[J].p)&&(C!=J&&i.push({froms:C,tos:J,hole:o}),K?(K=!1,B[J].push(v)):L=!0)}K&&B[C].push(v)}}0<i.length&&(L||(j=B))}L=0;for(i=l.length;L<i;L++){for(B=l[L].s,A.push(B),C=j[L],E=0,D=C.length;E<D;E++){B.holes.push(C[E].h)}}return A};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={triangulateShape:function(B,A){function v(e,d,f){return e.x!=d.x?e.x<d.x?e.x<=f.x&&f.x<=d.x:d.x<=f.x&&f.x<=e.x:e.y<d.y?e.y<=f.y&&f.y<=d.y:d.y<=f.y&&f.y<=e.y}function u(N,M,L,K,I){var J=M.x-N.x,H=M.y-N.y,F=K.x-L.x,D=K.y-L.y,C=N.x-L.x,c=N.y-L.y,O=H*F-J*D,P=H*C-J*c;if(1e-10<Math.abs(O)){if(0<O){if(0>P||P>O){return[]}F=D*C-F*c;if(0>F||F>O){return[]}}else{if(0<P||P<O){return[]}F=D*C-F*c;if(0<F||F<O){return[]}}if(0==F){return !I||0!=P&&P!=O?[N]:[]}if(F==O){return !I||0!=P&&P!=O?[M]:[]}if(0==P){return[L]}if(P==O){return[K]}I=F/O;return[{x:N.x+I*J,y:N.y+I*H}]}if(0!=P||D*C!=F*c){return[]}H=0==J&&0==H;F=0==F&&0==D;if(H&&F){return N.x!=L.x||N.y!=L.y?[]:[N]}if(H){return v(L,K,N)?[N]:[]}if(F){return v(N,M,L)?[L]:[]}0!=J?(N.x<M.x?(J=N,F=N.x,H=M,N=M.x):(J=M,F=M.x,H=N,N=N.x),L.x<K.x?(M=L,O=L.x,D=K,L=K.x):(M=K,O=K.x,D=L,L=L.x)):(N.y<M.y?(J=N,F=N.y,H=M,N=M.y):(J=M,F=M.y,H=N,N=N.y),L.y<K.y?(M=L,O=L.y,D=K,L=K.y):(M=K,O=K.y,D=L,L=L.y));return F<=O?N<O?[]:N==O?I?[]:[M]:N<=L?[M,H]:[M,D]:F>L?[]:F==L?I?[]:[J]:N<=L?[J,H]:[J,D]}function t(k,h,D,C){var q=h.x-k.x,p=h.y-k.y;h=D.x-k.x;D=D.y-k.y;var n=C.x-k.x;C=C.y-k.y;k=q*D-p*h;q=q*C-p*n;return 1e-10<Math.abs(k)?(h=n*D-C*h,0<k?0<=q&&0<=h:0<=q||0<=h):0<q}var s,r,o,m,l,j={};o=B.concat();s=0;for(r=A.length;s<r;s++){Array.prototype.push.apply(o,A[s])}s=0;for(r=o.length;s<r;s++){l=o[s].x+":"+o[s].y,void 0!==j[l]&&console.log("Duplicate point",l),j[l]=s}s=function(Y,X){function W(h,c){var p=S.length-1,n=h-1;0>n&&(n=p);var k=h+1;k>p&&(k=0);p=t(S[h],S[n],S[k],R[c]);if(!p){return !1}p=R.length-1;n=c-1;0>n&&(n=p);k=c+1;k>p&&(k=0);return(p=t(R[c],R[n],R[k],S[h]))?!0:!1}function V(g,f){var k,h;for(k=0;k<S.length;k++){if(h=k+1,h%=S.length,h=u(g,f,S[k],S[h],!0),0<h.length){return !0}}return !1}function T(b,D){var q,p,n,g;for(q=0;q<Q.length;q++){for(p=X[Q[q]],n=0;n<p.length;n++){if(g=n+1,g%=p.length,g=u(b,D,p[n],p[g],!0),0<g.length){return !0}}}return !1}var S=Y.concat(),R,Q=[],P,N,F,I,J,H=[],L,O,d,e=0;for(P=X.length;e<P;e++){Q.push(e)}L=0;for(var C=2*Q.length;0<Q.length;){C--;if(0>C){console.log("Infinite Loop! Holes left:"+Q.length+", Probably Hole outside Shape!");break}for(N=L;N<S.length;N++){F=S[N];P=-1;for(e=0;e<Q.length;e++){if(I=Q[e],J=F.x+":"+F.y+":"+I,void 0===H[J]){R=X[I];for(O=0;O<R.length;O++){if(I=R[O],W(N,O)&&!V(F,I)&&!T(F,I)){P=O;Q.splice(e,1);L=S.slice(0,N+1);I=S.slice(N);O=R.slice(P);d=R.slice(0,P+1);S=L.concat(O).concat(d).concat(I);L=N;break}}if(0<=P){break}H[J]=!0}}if(0<=P){break}}}return S}(B,A);var i=THREE.FontUtils.Triangulate(s,!1);s=0;for(r=i.length;s<r;s++){for(m=i[s],o=0;3>o;o++){l=m[o].x+":"+m[o].y,l=j[l],void 0!==l&&(m[o]=l)}}return i.concat()},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().sub(this.v1);c.multiplyScalar(d).add(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(b){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c=new THREE.Vector2;c.x=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);c.y=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return c};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c=new THREE.Vector2;c.x=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);c.y=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);return c.normalize()};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(h){var g=this.points;h*=g.length-1;var l=Math.floor(h);h-=l;var k=g[0==l?l:l-1],j=g[l],i=g[l>g.length-2?g.length-1:l+1],g=g[l>g.length-3?g.length-1:l+2],l=new THREE.Vector2;l.x=THREE.Curve.Utils.interpolate(k.x,j.x,i.x,g.x,h);l.y=THREE.Curve.Utils.interpolate(k.y,j.y,i.y,g.y,h);return l};THREE.EllipseCurve=function(i,h,n,m,l,k,j){this.aX=i;this.aY=h;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(d){var c=this.aEndAngle-this.aStartAngle;0>c&&(c+=2*Math.PI);c>2*Math.PI&&(c-=2*Math.PI);d=!0===this.aClockwise?this.aEndAngle+(1-d)*(2*Math.PI-c):this.aStartAngle+d*c;c=new THREE.Vector2;c.x=this.aX+this.xRadius*Math.cos(d);c.y=this.aY+this.yRadius*Math.sin(d);return c};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.subVectors(this.v2,this.v1);c.multiplyScalar(d);c.add(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(d){var c=new THREE.Vector3;c.x=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);c.y=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);c.z=THREE.Shape.Utils.b2(d,this.v0.z,this.v1.z,this.v2.z);return c});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(d){var c=new THREE.Vector3;c.x=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c.y=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c.z=THREE.Shape.Utils.b3(d,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return c});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(h){var g=this.points;h*=g.length-1;var l=Math.floor(h);h-=l;var k=g[0==l?l:l-1],j=g[l],i=g[l>g.length-2?g.length-1:l+1],g=g[l>g.length-3?g.length-1:l+2],l=new THREE.Vector3;l.x=THREE.Curve.Utils.interpolate(k.x,j.x,i.x,g.x,h);l.y=THREE.Curve.Utils.interpolate(k.y,j.y,i.y,g.y,h);l.z=THREE.Curve.Utils.interpolate(k.z,j.z,i.z,g.z,h);return l});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(h){var g=this.points;h*=g.length-0;var l=Math.floor(h);h-=l;var l=l+(0<l?0:(Math.floor(Math.abs(l)/g.length)+1)*g.length),k=g[(l-1)%g.length],j=g[l%g.length],i=g[(l+1)%g.length],g=g[(l+2)%g.length],l=new THREE.Vector3;l.x=THREE.Curve.Utils.interpolate(k.x,j.x,i.x,g.x,h);l.y=THREE.Curve.Utils.interpolate(k.y,j.y,i.y,g.y,h);l.z=THREE.Curve.Utils.interpolate(k.z,j.z,i.z,g.z,h);return l});THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(i){if(!0===i.initialized){return i}for(var h=0;h<i.hierarchy.length;h++){for(var n=0;n<i.hierarchy[h].keys.length;n++){if(0>i.hierarchy[h].keys[n].time&&(i.hierarchy[h].keys[n].time=0),void 0!==i.hierarchy[h].keys[n].rot&&!(i.hierarchy[h].keys[n].rot instanceof THREE.Quaternion)){var m=i.hierarchy[h].keys[n].rot;i.hierarchy[h].keys[n].rot=(new THREE.Quaternion).fromArray(m)}}if(i.hierarchy[h].keys.length&&void 0!==i.hierarchy[h].keys[0].morphTargets){m={};for(n=0;n<i.hierarchy[h].keys.length;n++){for(var l=0;l<i.hierarchy[h].keys[n].morphTargets.length;l++){var k=i.hierarchy[h].keys[n].morphTargets[l];m[k]=-1}}i.hierarchy[h].usedMorphTargets=m;for(n=0;n<i.hierarchy[h].keys.length;n++){var j={};for(k in m){for(l=0;l<i.hierarchy[h].keys[n].morphTargets.length;l++){if(i.hierarchy[h].keys[n].morphTargets[l]===k){j[k]=i.hierarchy[h].keys[n].morphTargetsInfluences[l];break}}l===i.hierarchy[h].keys[n].morphTargets.length&&(j[k]=0)}i.hierarchy[h].keys[n].morphTargetsInfluences=j}}for(n=1;n<i.hierarchy[h].keys.length;n++){i.hierarchy[h].keys[n].time===i.hierarchy[h].keys[n-1].time&&(i.hierarchy[h].keys.splice(n,1),n--)}for(n=0;n<i.hierarchy[h].keys.length;n++){i.hierarchy[h].keys[n].index=n}}i.initialized=!0;return i},parse:function(f){var e=function(b,j){j.push(b);for(var i=0;i<b.children.length;i++){e(b.children[i],j)}},h=[];if(f instanceof THREE.SkinnedMesh){for(var g=0;g<f.skeleton.bones.length;g++){h.push(f.skeleton.bones[g])}}else{e(f,h)}return h},play:function(b){-1===this.animations.indexOf(b)&&this.animations.push(b)},stop:function(b){b=this.animations.indexOf(b);-1!==b&&this.animations.splice(b,1)},update:function(d){for(var c=0;c<this.animations.length;c++){this.animations[c].resetBlendWeights()}for(c=0;c<this.animations.length;c++){this.animations[c].update(d)}}};THREE.Animation=function(d,c){this.root=d;this.data=THREE.AnimationHandler.init(c);this.hierarchy=THREE.AnimationHandler.parse(d);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(d,c){this.currentTime=void 0!==d?d:0;this.weight=void 0!==c?c:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)};THREE.Animation.prototype.stop=function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)};THREE.Animation.prototype.reset=function(){for(var i=0,h=this.hierarchy.length;i<h;i++){var n=this.hierarchy[i];void 0===n.animationCache&&(n.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});void 0===n.animationCache.animations[this.data.name]&&(n.animationCache.animations[this.data.name]={},n.animationCache.animations[this.data.name].prevKey={pos:0,rot:0,scl:0},n.animationCache.animations[this.data.name].nextKey={pos:0,rot:0,scl:0},n.animationCache.animations[this.data.name].originalMatrix=n.matrix);for(var n=n.animationCache.animations[this.data.name],m=0;3>m;m++){for(var l=this.keyTypes[m],k=this.data.hierarchy[i].keys[0],j=this.getNextKeyWith(l,i,1);j.time<this.currentTime&&j.index>k.index;){k=j,j=this.getNextKeyWith(l,i,j.index+1)}n.prevKey[l]=k;n.nextKey[l]=j}}};THREE.Animation.prototype.resetBlendWeights=function(){for(var e=0,d=this.hierarchy.length;e<d;e++){var f=this.hierarchy[e];void 0!==f.animationCache&&(f.animationCache.blending.positionWeight=0,f.animationCache.blending.quaternionWeight=0,f.animationCache.blending.scaleWeight=0)}};THREE.Animation.prototype.update=function(){var h=[],g=new THREE.Vector3,l=new THREE.Vector3,k=new THREE.Quaternion,j=function(B,A){var v=[],u=[],p,n,o,C,D,f;p=(B.length-1)*A;n=Math.floor(p);p-=n;v[0]=0===n?n:n-1;v[1]=n;v[2]=n>B.length-2?n:n+1;v[3]=n>B.length-3?n:n+2;n=B[v[0]];C=B[v[1]];D=B[v[2]];f=B[v[3]];v=p*p;o=p*v;u[0]=i(n[0],C[0],D[0],f[0],p,v,o);u[1]=i(n[1],C[1],D[1],f[1],p,v,o);u[2]=i(n[2],C[2],D[2],f[2],p,v,o);return u},i=function(p,o,t,s,r,q,n){p=0.5*(t-p);s=0.5*(s-o);return(2*(o-t)+p+s)*n+(-3*(o-t)-2*p-s)*q+p*r+o};return function(B){if(!1!==this.isPlaying&&(this.currentTime+=B*this.timeScale,0!==this.weight)){B=this.data.length;if(this.currentTime>B||0>this.currentTime){this.loop?(this.currentTime%=B,0>this.currentTime&&(this.currentTime+=B),this.reset()):this.stop()}B=0;for(var A=this.hierarchy.length;B<A;B++){for(var o=this.hierarchy[B],d=o.animationCache.animations[this.data.name],c=o.animationCache.blending,b=0;3>b;b++){var e=this.keyTypes[b],E=d.prevKey[e],F=d.nextKey[e];if(0<this.timeScale&&F.time<=this.currentTime||0>this.timeScale&&E.time>=this.currentTime){E=this.data.hierarchy[B].keys[0];for(F=this.getNextKeyWith(e,B,1);F.time<this.currentTime&&F.index>E.index;){E=F,F=this.getNextKeyWith(e,B,F.index+1)}d.prevKey[e]=E;d.nextKey[e]=F}var a=(this.currentTime-E.time)/(F.time-E.time),D=E[e],C=F[e];0>a&&(a=0);1<a&&(a=1);if("pos"===e){if(this.interpolationType===THREE.AnimationHandler.LINEAR){l.x=D[0]+(C[0]-D[0])*a,l.y=D[1]+(C[1]-D[1])*a,l.z=D[2]+(C[2]-D[2])*a,E=this.weight/(this.weight+c.positionWeight),o.position.lerp(l,E),c.positionWeight+=this.weight}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){h[0]=this.getPrevKeyWith("pos",B,E.index-1).pos,h[1]=D,h[2]=C,h[3]=this.getNextKeyWith("pos",B,F.index+1).pos,a=0.33*a+0.33,F=j(h,a),E=this.weight/(this.weight+c.positionWeight),c.positionWeight+=this.weight,e=o.position,e.x+=(F[0]-e.x)*E,e.y+=(F[1]-e.y)*E,e.z+=(F[2]-e.z)*E,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(a=j(h,1.01*a),g.set(a[0],a[1],a[2]),g.sub(e),g.y=0,g.normalize(),a=Math.atan2(g.x,g.z),o.rotation.set(0,a,0))}}}else{"rot"===e?(THREE.Quaternion.slerp(D,C,k,a),0===c.quaternionWeight?(o.quaternion.copy(k),c.quaternionWeight=this.weight):(E=this.weight/(this.weight+c.quaternionWeight),THREE.Quaternion.slerp(o.quaternion,k,o.quaternion,E),c.quaternionWeight+=this.weight)):"scl"===e&&(l.x=D[0]+(C[0]-D[0])*a,l.y=D[1]+(C[1]-D[1])*a,l.z=D[2]+(C[2]-D[2])*a,E=this.weight/(this.weight+c.scaleWeight),o.scale.lerp(l,E),c.scaleWeight+=this.weight)}}}return !0}}}();THREE.Animation.prototype.getNextKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(i){this.root=i.node;this.data=THREE.AnimationHandler.init(i);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;i=0;for(var h=this.hierarchy.length;i<h;i++){var n=this.data.hierarchy[i].sids,m=this.hierarchy[i];if(this.data.hierarchy[i].keys.length&&n){for(var l=0;l<n.length;l++){var k=n[l],j=this.getNextKeyWith(k,i,0);j&&j.apply(k)}m.matrixAutoUpdate=!1;this.data.hierarchy[i].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(f){this.currentTime=void 0!==f?f:0;if(!1===this.isPlaying){this.isPlaying=!0;var e=this.hierarchy.length,h,g;for(f=0;f<e;f++){h=this.hierarchy[f],g=this.data.hierarchy[f],void 0===g.animationCache&&(g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=h.matrix),h=this.data.hierarchy[f].keys,h.length&&(g.animationCache.prevKey=h[0],g.animationCache.nextKey=h[1],this.startTime=Math.min(h[0].time,this.startTime),this.endTime=Math.max(h[h.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;g.copy(e.matrix);e.matrix=g;delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(i){if(!1!==this.isPlaying){this.currentTime+=i*this.timeScale;i=this.data.length;!0===this.loop&&this.currentTime>i&&(this.currentTime%=i);this.currentTime=Math.min(this.currentTime,i);i=0;for(var h=this.hierarchy.length;i<h;i++){var n=this.hierarchy[i],m=this.data.hierarchy[i],l=m.keys,m=m.animationCache;if(l.length){var k=m.prevKey,j=m.nextKey;if(j.time<=this.currentTime){for(;j.time<this.currentTime&&j.index>k.index;){k=j,j=l[k.index+1]}m.prevKey=k;m.nextKey=j}j.time>=this.currentTime?k.interpolate(j,this.currentTime):k.interpolate(j,j.time);this.data.hierarchy[i].node.updateMatrix();n.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.MorphAnimation=function(b){this.mesh=b;this.frames=b.morphTargetInfluences.length;this.currentTime=0;this.duration=1000;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(d){if(!1!==this.isPlaying){this.currentTime+=d;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);d=this.duration/this.frames;var c=Math.floor(this.currentTime/d);c!=this.currentFrame&&(this.mesh.morphTargetInfluences[this.lastFrame]=0,this.mesh.morphTargetInfluences[this.currentFrame]=1,this.mesh.morphTargetInfluences[c]=0,this.lastFrame=this.currentFrame,this.currentFrame=c);this.mesh.morphTargetInfluences[c]=this.currentTime%d/d;this.mesh.morphTargetInfluences[this.lastFrame]=1-this.mesh.morphTargetInfluences[c]}}};THREE.BoxGeometry=function(j,i,p,o,n,m){function l(V,U,T,S,R,Q,P,N){var J,H=k.widthSegments,q=k.heightSegments,M=R/2,s=Q/2,I=k.vertices.length;if("x"===V&&"y"===U||"y"===V&&"x"===U){J="z"}else{if("x"===V&&"z"===U||"z"===V&&"x"===U){J="y",q=k.depthSegments}else{if("z"===V&&"y"===U||"y"===V&&"z"===U){J="x",H=k.depthSegments}}}var h=H+1,B=q+1,K=R/H,t=Q/q,L=new THREE.Vector3;L[J]=0<P?1:-1;for(R=0;R<B;R++){for(Q=0;Q<h;Q++){var O=new THREE.Vector3;O[V]=(Q*K-M)*T;O[U]=(R*t-s)*S;O[J]=P;k.vertices.push(O)}}for(R=0;R<q;R++){for(Q=0;Q<H;Q++){s=Q+h*R,V=Q+h*(R+1),U=Q+1+h*(R+1),T=Q+1+h*R,S=new THREE.Vector2(Q/H,1-R/q),P=new THREE.Vector2(Q/H,1-(R+1)/q),J=new THREE.Vector2((Q+1)/H,1-(R+1)/q),M=new THREE.Vector2((Q+1)/H,1-R/q),s=new THREE.Face3(s+I,V+I,T+I),s.normal.copy(L),s.vertexNormals.push(L.clone(),L.clone(),L.clone()),s.materialIndex=N,k.faces.push(s),k.faceVertexUvs[0].push([S,P,M]),s=new THREE.Face3(V+I,U+I,T+I),s.normal.copy(L),s.vertexNormals.push(L.clone(),L.clone(),L.clone()),s.materialIndex=N,k.faces.push(s),k.faceVertexUvs[0].push([P.clone(),J,M.clone()])}}}THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:j,height:i,depth:p,widthSegments:o,heightSegments:n,depthSegments:m};this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;var k=this;o=j/2;n=i/2;m=p/2;l("z","y",-1,-1,p,i,o,0);l("z","y",1,-1,p,i,-o,1);l("x","z",1,1,j,p,n,2);l("x","z",1,-1,j,p,-n,3);l("x","y",1,-1,j,i,m,4);l("x","y",-1,-1,j,i,-m,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CircleGeometry=function(r,q,p,o){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:r,segments:q,thetaStart:p,thetaLength:o};r=r||50;q=void 0!==q?Math.max(3,q):8;p=void 0!==p?p:0;o=void 0!==o?o:2*Math.PI;var n,m=[];n=new THREE.Vector3;var l=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(l);for(n=0;n<=q;n++){var j=new THREE.Vector3,i=p+n/q*o;j.x=r*Math.cos(i);j.y=r*Math.sin(i);this.vertices.push(j);m.push(new THREE.Vector2((j.x/r+1)/2,(j.y/r+1)/2))}p=new THREE.Vector3(0,0,1);for(n=1;n<=q;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([m[n].clone(),m[n+1].clone(),l.clone()])}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CubeGeometry=function(h,g,l,k,j,i){console.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry.");return new THREE.BoxGeometry(h,g,l,k,j,i)};THREE.CylinderGeometry=function(Y,X,W,V,U,T,S,R){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:Y,radiusBottom:X,height:W,radialSegments:V,heightSegments:U,openEnded:T,thetaStart:S,thetaLength:R};Y=void 0!==Y?Y:20;X=void 0!==X?X:20;W=void 0!==W?W:100;V=V||8;U=U||1;T=void 0!==T?T:!1;S=void 0!==S?S:0;R=void 0!==R?R:2*Math.PI;var Q=W/2,O,N,M=[],P=[];for(N=0;N<=U;N++){var I=[],J=[],L=N/U,D=L*(X-Y)+Y;for(O=0;O<=V;O++){var A=O/V,j=new THREE.Vector3;j.x=D*Math.sin(A*R+S);j.y=-L*W+Q;j.z=D*Math.cos(A*R+S);this.vertices.push(j);I.push(this.vertices.length-1);J.push(new THREE.Vector2(A,1-L))}M.push(I);P.push(J)}W=(X-Y)/W;for(O=0;O<V;O++){for(0!==Y?(S=this.vertices[M[0][O]].clone(),R=this.vertices[M[0][O+1]].clone()):(S=this.vertices[M[1][O]].clone(),R=this.vertices[M[1][O+1]].clone()),S.setY(Math.sqrt(S.x*S.x+S.z*S.z)*W).normalize(),R.setY(Math.sqrt(R.x*R.x+R.z*R.z)*W).normalize(),N=0;N<U;N++){var I=M[N][O],J=M[N+1][O],L=M[N+1][O+1],D=M[N][O+1],A=S.clone(),j=S.clone(),K=R.clone(),l=R.clone(),B=P[N][O].clone(),i=P[N+1][O].clone(),o=P[N+1][O+1].clone(),H=P[N][O+1].clone();this.faces.push(new THREE.Face3(I,J,D,[A,j,l]));this.faceVertexUvs[0].push([B,i,H]);this.faces.push(new THREE.Face3(J,L,D,[j.clone(),K,l.clone()]));this.faceVertexUvs[0].push([i.clone(),o,H.clone()])}}if(!1===T&&0<Y){for(this.vertices.push(new THREE.Vector3(0,Q,0)),O=0;O<V;O++){I=M[0][O],J=M[0][O+1],L=this.vertices.length-1,A=new THREE.Vector3(0,1,0),j=new THREE.Vector3(0,1,0),K=new THREE.Vector3(0,1,0),B=P[0][O].clone(),i=P[0][O+1].clone(),o=new THREE.Vector2(i.x,0),this.faces.push(new THREE.Face3(I,J,L,[A,j,K])),this.faceVertexUvs[0].push([B,i,o])}}if(!1===T&&0<X){for(this.vertices.push(new THREE.Vector3(0,-Q,0)),O=0;O<V;O++){I=M[U][O+1],J=M[U][O],L=this.vertices.length-1,A=new THREE.Vector3(0,-1,0),j=new THREE.Vector3(0,-1,0),K=new THREE.Vector3(0,-1,0),B=P[U][O+1].clone(),i=P[U][O].clone(),o=new THREE.Vector2(i.x,1),this.faces.push(new THREE.Face3(I,J,L,[A,j,K])),this.faceVertexUvs[0].push([B,i,o])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),this.type="ExtrudeGeometry",d=d instanceof Array?d:[d],this.addShapeList(d,c),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aE,aD){function aC(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).add(e)}function aB(C,A,v){var u=1,u=C.x-A.x,t=C.y-A.y,s=v.x-C.x,r=v.y-C.y,q=u*u+t*t;if(1e-10<Math.abs(u*r-t*s)){var p=Math.sqrt(q),n=Math.sqrt(s*s+r*r),q=A.x-t/p;A=A.y+u/p;s=((v.x-r/n-q)*r-(v.y+s/n-A)*s)/(u*r-t*s);v=q+u*s-C.x;C=A+t*s-C.y;u=v*v+C*C;if(2>=u){return new THREE.Vector2(v,C)}u=Math.sqrt(u/2)}else{C=!1,1e-10<u?1e-10<s&&(C=!0):-1e-10>u?-1e-10>s&&(C=!0):Math.sign(t)==Math.sign(r)&&(C=!0),C?(v=-t,C=u,u=Math.sqrt(q)):(v=u,C=t,u=Math.sqrt(q/2))}return new THREE.Vector2(v/u,C/u)}function aA(C,A){var v,u;for(Y=C.length;0<=--Y;){v=Y;u=Y-1;0>u&&(u=C.length-1);for(var t=0,s=an+2*at,t=0;t<s;t++){var r=af*t,q=af*(t+1),p=A+v+r,r=A+u+r,n=A+u+q,q=A+v+q,p=p+o,r=r+o,n=n+o,q=q+o;ae.faces.push(new THREE.Face3(p,r,q,null,null,ai));ae.faces.push(new THREE.Face3(r,n,q,null,null,ai));p=ad.generateSideWallUV(ae,p,r,n,q);ae.faceVertexUvs[0].push([p[0],p[1],p[3]]);ae.faceVertexUvs[0].push([p[1],p[2],p[3]])}}}function az(e,d,f){ae.vertices.push(new THREE.Vector3(e,d,f))}function ay(e,d,f){e+=o;d+=o;f+=o;ae.faces.push(new THREE.Face3(e,d,f,null,null,al));e=ad.generateTopUV(ae,e,d,f);ae.faceVertexUvs[0].push(e)}var ax=void 0!==aD.amount?aD.amount:100,aw=void 0!==aD.bevelThickness?aD.bevelThickness:6,au=void 0!==aD.bevelSize?aD.bevelSize:aw-2,at=void 0!==aD.bevelSegments?aD.bevelSegments:3,aq=void 0!==aD.bevelEnabled?aD.bevelEnabled:!0,av=void 0!==aD.curveSegments?aD.curveSegments:12,an=void 0!==aD.steps?aD.steps:1,ao=aD.extrudePath,ap,am=!1,al=aD.material,ai=aD.extrudeMaterial,ad=void 0!==aD.UVGenerator?aD.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,aj,aa,ah,Z;ao&&(ap=ao.getSpacedPoints(an),am=!0,aq=!1,aj=void 0!==aD.frames?aD.frames:new THREE.TubeGeometry.FrenetFrames(ao,an,!1),aa=new THREE.Vector3,ah=new THREE.Vector3,Z=new THREE.Vector3);aq||(au=aw=at=0);var ab,ak,ac,ae=this,o=this.vertices.length,ao=aE.extractPoints(av),av=ao.shape,R=ao.holes;if(ao=!THREE.Shape.Utils.isClockWise(av)){av=av.reverse();ak=0;for(ac=R.length;ak<ac;ak++){ab=R[ak],THREE.Shape.Utils.isClockWise(ab)&&(R[ak]=ab.reverse())}ao=!1}var V=THREE.Shape.Utils.triangulateShape(av,R),S=av;ak=0;for(ac=R.length;ak<ac;ak++){ab=R[ak],av=av.concat(ab)}var P,B,I,j,J,af=av.length,i,ar=V.length,ao=[],Y=0;I=S.length;P=I-1;for(B=Y+1;Y<I;Y++,P++,B++){P===I&&(P=0),B===I&&(B=0),ao[Y]=aB(S[Y],S[P],S[B])}var X=[],l,ag=ao.concat();ak=0;for(ac=R.length;ak<ac;ak++){ab=R[ak];l=[];Y=0;I=ab.length;P=I-1;for(B=Y+1;Y<I;Y++,P++,B++){P===I&&(P=0),B===I&&(B=0),l[Y]=aB(ab[Y],ab[P],ab[B])}X.push(l);ag=ag.concat(l)}for(P=0;P<at;P++){I=P/at;j=aw*(1-I);B=au*Math.sin(I*Math.PI/2);Y=0;for(I=S.length;Y<I;Y++){J=aC(S[Y],ao[Y],B),az(J.x,J.y,-j)}ak=0;for(ac=R.length;ak<ac;ak++){for(ab=R[ak],l=X[ak],Y=0,I=ab.length;Y<I;Y++){J=aC(ab[Y],l[Y],B),az(J.x,J.y,-j)}}}B=au;for(Y=0;Y<af;Y++){J=aq?aC(av[Y],ag[Y],B):av[Y],am?(ah.copy(aj.normals[0]).multiplyScalar(J.x),aa.copy(aj.binormals[0]).multiplyScalar(J.y),Z.copy(ap[0]).add(ah).add(aa),az(Z.x,Z.y,Z.z)):az(J.x,J.y,0)}for(I=1;I<=an;I++){for(Y=0;Y<af;Y++){J=aq?aC(av[Y],ag[Y],B):av[Y],am?(ah.copy(aj.normals[I]).multiplyScalar(J.x),aa.copy(aj.binormals[I]).multiplyScalar(J.y),Z.copy(ap[I]).add(ah).add(aa),az(Z.x,Z.y,Z.z)):az(J.x,J.y,ax/an*I)}}for(P=at-1;0<=P;P--){I=P/at;j=aw*(1-I);B=au*Math.sin(I*Math.PI/2);Y=0;for(I=S.length;Y<I;Y++){J=aC(S[Y],ao[Y],B),az(J.x,J.y,ax+j)}ak=0;for(ac=R.length;ak<ac;ak++){for(ab=R[ak],l=X[ak],Y=0,I=ab.length;Y<I;Y++){J=aC(ab[Y],l[Y],B),am?az(J.x,J.y+ap[an-1].y,ap[an-1].x+j):az(J.x,J.y,ax+j)}}}(function(){if(aq){var b;b=0*af;for(Y=0;Y<ar;Y++){i=V[Y],ay(i[2]+b,i[1]+b,i[0]+b)}b=an+2*at;b*=af;for(Y=0;Y<ar;Y++){i=V[Y],ay(i[0]+b,i[1]+b,i[2]+b)}}else{for(Y=0;Y<ar;Y++){i=V[Y],ay(i[2],i[1],i[0])}for(Y=0;Y<ar;Y++){i=V[Y],ay(i[0]+af*an,i[1]+af*an,i[2]+af*an)}}})();(function(){var b=0;aA(S,b);b+=S.length;ak=0;for(ac=R.length;ak<ac;ak++){ab=R[ak],aA(ab,b),b+=ab.length}})()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(f,e,h,g){f=f.vertices;e=f[e];h=f[h];g=f[g];return[new THREE.Vector2(e.x,e.y),new THREE.Vector2(h.x,h.y),new THREE.Vector2(g.x,g.y)]},generateSideWallUV:function(g,f,j,i,h){g=g.vertices;f=g[f];j=g[j];i=g[i];h=g[h];return 0.01>Math.abs(f.y-j.y)?[new THREE.Vector2(f.x,1-f.z),new THREE.Vector2(j.x,1-j.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(h.x,1-h.z)]:[new THREE.Vector2(f.y,1-f.z),new THREE.Vector2(j.y,1-j.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(h.y,1-h.z)]}};THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);this.type="ShapeGeometry";!1===d instanceof Array&&(d=[d]);this.addShapeList(d,c);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,o,m=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var l=r.shape,j=r.holes;if(!THREE.Shape.Utils.isClockWise(l)){for(l=l.reverse(),r=0,q=j.length;r<q;r++){o=j[r],THREE.Shape.Utils.isClockWise(o)&&(j[r]=o.reverse())}}var i=THREE.Shape.Utils.triangulateShape(l,j);r=0;for(q=j.length;r<q;r++){o=j[r],l=l.concat(o)}j=l.length;q=i.length;for(r=0;r<j;r++){o=l[r],this.vertices.push(new THREE.Vector3(o.x,o.y,0))}for(r=0;r<q;r++){j=i[r],l=j[0]+m,o=j[1]+m,j=j[2]+m,this.faces.push(new THREE.Face3(l,o,j,null,null,t)),this.faceVertexUvs[0].push(s.generateTopUV(this,l,o,j))}};THREE.LatheGeometry=function(H,G,F,E){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:H,segments:G,phiStart:F,phiLength:E};G=G||12;F=F||0;E=E||2*Math.PI;for(var D=1/(H.length-1),C=1/G,B=0,A=G;B<=A;B++){for(var v=F+B*C*E,o=Math.cos(v),l=Math.sin(v),v=0,j=H.length;v<j;v++){var u=H[v],I=new THREE.Vector3;I.x=o*u.x-l*u.y;I.y=l*u.x+o*u.y;I.z=u.z;this.vertices.push(I)}}F=H.length;B=0;for(A=G;B<A;B++){for(v=0,j=H.length-1;v<j;v++){G=l=v+F*B;E=l+F;var o=l+1+F,l=l+1,u=B*C,I=v*D,J=u+C,i=I+D;this.faces.push(new THREE.Face3(G,E,l));this.faceVertexUvs[0].push([new THREE.Vector2(u,I),new THREE.Vector2(J,I),new THREE.Vector2(u,i)]);this.faces.push(new THREE.Face3(E,o,l));this.faceVertexUvs[0].push([new THREE.Vector2(J,I),new THREE.Vector2(J,i),new THREE.Vector2(u,i)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;THREE.PlaneGeometry=function(f,e,h,g){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.");THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:f,height:e,widthSegments:h,heightSegments:g};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(f,e,h,g))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneBufferGeometry=function(H,G,F,E){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:H,height:G,widthSegments:F,heightSegments:E};var D=H/2,C=G/2;F=F||1;E=E||1;var B=F+1,A=E+1,v=H/F,o=G/E;G=new Float32Array(B*A*3);H=new Float32Array(B*A*3);for(var l=new Float32Array(B*A*2),j=0,u=0,I=0;I<A;I++){for(var J=I*o-C,i=0;i<B;i++){G[j]=i*v-D,G[j+1]=-J,H[j+2]=1,l[u]=i/F,l[u+1]=1-I/E,j+=3,u+=2}}j=0;D=new (65535<G.length/3?Uint32Array:Uint16Array)(F*E*6);for(I=0;I<E;I++){for(i=0;i<F;i++){C=i+B*(I+1),A=i+1+B*(I+1),v=i+1+B*I,D[j]=i+B*I,D[j+1]=C,D[j+2]=v,D[j+3]=C,D[j+4]=A,D[j+5]=v,j+=6}}this.addAttribute("index",new THREE.BufferAttribute(D,1));this.addAttribute("position",new THREE.BufferAttribute(G,3));this.addAttribute("normal",new THREE.BufferAttribute(H,3));this.addAttribute("uv",new THREE.BufferAttribute(l,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;THREE.RingGeometry=function(B,A,v,u,t,s){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:B,outerRadius:A,thetaSegments:v,phiSegments:u,thetaStart:t,thetaLength:s};B=B||0;A=A||50;t=void 0!==t?t:0;s=void 0!==s?s:2*Math.PI;v=void 0!==v?Math.max(3,v):8;u=void 0!==u?Math.max(1,u):8;var r,o=[],m=B,l=(A-B)/u;for(B=0;B<u+1;B++){for(r=0;r<v+1;r++){var j=new THREE.Vector3,i=t+r/v*s;j.x=m*Math.cos(i);j.y=m*Math.sin(i);this.vertices.push(j);o.push(new THREE.Vector2((j.x/A+1)/2,(j.y/A+1)/2))}m+=l}A=new THREE.Vector3(0,0,1);for(B=0;B<u;B++){for(t=B*(v+1),r=0;r<v;r++){s=i=r+t,l=i+v+1,j=i+v+2,this.faces.push(new THREE.Face3(s,l,j,[A.clone(),A.clone(),A.clone()])),this.faceVertexUvs[0].push([o[s].clone(),o[l].clone(),o[j].clone()]),s=i,l=i+v+2,j=i+1,this.faces.push(new THREE.Face3(s,l,j,[A.clone(),A.clone(),A.clone()])),this.faceVertexUvs[0].push([o[s].clone(),o[l].clone(),o[j].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,m)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(O,N,M,L,K,J,I){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:O,widthSegments:N,heightSegments:M,phiStart:L,phiLength:K,thetaStart:J,thetaLength:I};O=O||50;N=Math.max(3,Math.floor(N)||8);M=Math.max(2,Math.floor(M)||6);L=void 0!==L?L:0;K=void 0!==K?K:2*Math.PI;J=void 0!==J?J:0;I=void 0!==I?I:Math.PI;var H,G,E=[],D=[];for(G=0;G<=M;G++){var C=[],F=[];for(H=0;H<=N;H++){var o=H/N,A=G/M,B=new THREE.Vector3;B.x=-O*Math.cos(L+o*K)*Math.sin(J+A*I);B.y=O*Math.cos(J+A*I);B.z=O*Math.sin(L+o*K)*Math.sin(J+A*I);this.vertices.push(B);C.push(this.vertices.length-1);F.push(new THREE.Vector2(o,1-A))}E.push(C);D.push(F)}for(G=0;G<M;G++){for(H=0;H<N;H++){L=E[G][H+1];K=E[G][H];J=E[G+1][H];I=E[G+1][H+1];var C=this.vertices[L].clone().normalize(),F=this.vertices[K].clone().normalize(),o=this.vertices[J].clone().normalize(),A=this.vertices[I].clone().normalize(),B=D[G][H+1].clone(),l=D[G][H].clone(),j=D[G+1][H].clone(),i=D[G+1][H+1].clone();Math.abs(this.vertices[L].y)===O?(B.x=(B.x+l.x)/2,this.faces.push(new THREE.Face3(L,J,I,[C,o,A])),this.faceVertexUvs[0].push([B,j,i])):Math.abs(this.vertices[J].y)===O?(j.x=(j.x+i.x)/2,this.faces.push(new THREE.Face3(L,K,J,[C,F,o])),this.faceVertexUvs[0].push([B,l,j])):(this.faces.push(new THREE.Face3(L,K,I,[C,F,A])),this.faceVertexUvs[0].push([B,l,i]),this.faces.push(new THREE.Face3(K,J,I,[F.clone(),o,A.clone()])),this.faceVertexUvs[0].push([l.clone(),j,i.clone()]))}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,O)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(e,d){d=d||{};var f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d);this.type="TextGeometry"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;THREE.TorusGeometry=function(D,C,B,A,v){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:D,tube:C,radialSegments:B,tubularSegments:A,arc:v};D=D||100;C=C||40;B=B||8;A=A||6;v=v||2*Math.PI;for(var u=new THREE.Vector3,t=[],s=[],r=0;r<=B;r++){for(var l=0;l<=A;l++){var j=l/A*v,i=r/B*Math.PI*2;u.x=D*Math.cos(j);u.y=D*Math.sin(j);var o=new THREE.Vector3;o.x=(D+C*Math.cos(i))*Math.cos(j);o.y=(D+C*Math.cos(i))*Math.sin(j);o.z=C*Math.sin(i);this.vertices.push(o);t.push(new THREE.Vector2(l/A,r/B));s.push(o.clone().sub(u).normalize())}}for(r=1;r<=B;r++){for(l=1;l<=A;l++){D=(A+1)*r+l-1,C=(A+1)*(r-1)+l-1,v=(A+1)*(r-1)+l,u=(A+1)*r+l,j=new THREE.Face3(D,C,u,[s[D].clone(),s[C].clone(),s[u].clone()]),this.faces.push(j),this.faceVertexUvs[0].push([t[D].clone(),t[C].clone(),t[u].clone()]),j=new THREE.Face3(C,v,u,[s[C].clone(),s[v].clone(),s[u].clone()]),this.faces.push(j),this.faceVertexUvs[0].push([t[C].clone(),t[v].clone(),t[u].clone()])}}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusKnotGeometry=function(N,M,L,K,J,I,H){function G(k,h,r,q,p){var n=Math.cos(k),m=Math.sin(k);k*=h/r;h=Math.cos(k);n*=q*(2+h)*0.5;m=q*(2+h)*m*0.5;q=p*q*Math.sin(k)*0.5;return new THREE.Vector3(n,m,q)}THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:N,tube:M,radialSegments:L,tubularSegments:K,p:J,q:I,heightScale:H};N=N||100;M=M||40;L=L||64;K=K||8;J=J||2;I=I||3;H=H||1;for(var F=Array(L),D=new THREE.Vector3,C=new THREE.Vector3,B=new THREE.Vector3,E=0;E<L;++E){F[E]=Array(K);var l=E/L*2*J*Math.PI,o=G(l,I,J,N,H),l=G(l+0.01,I,J,N,H);D.subVectors(l,o);C.addVectors(l,o);B.crossVectors(D,C);C.crossVectors(B,D);B.normalize();C.normalize();for(l=0;l<K;++l){var A=l/K*2*Math.PI,j=-M*Math.cos(A),A=M*Math.sin(A),i=new THREE.Vector3;i.x=o.x+j*C.x+A*B.x;i.y=o.y+j*C.y+A*B.y;i.z=o.z+j*C.z+A*B.z;F[E][l]=this.vertices.push(i)-1}}for(E=0;E<L;++E){for(l=0;l<K;++l){J=(E+1)%L,I=(l+1)%K,N=F[E][l],M=F[J][l],J=F[J][I],I=F[E][I],H=new THREE.Vector2(E/L,l/K),D=new THREE.Vector2((E+1)/L,l/K),C=new THREE.Vector2((E+1)/L,(l+1)/K),B=new THREE.Vector2(E/L,(l+1)/K),this.faces.push(new THREE.Face3(N,M,I)),this.faceVertexUvs[0].push([H,D,B]),this.faces.push(new THREE.Face3(M,J,I)),this.faceVertexUvs[0].push([D.clone(),C,B.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.TubeGeometry=function(O,N,M,L,K,J){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:O,segments:N,radius:M,radialSegments:L,closed:K};N=N||64;M=M||1;L=L||8;K=K||!1;J=J||THREE.TubeGeometry.NoTaper;var I=[],H,G,E=N+1,D,C,F,o,A,B=new THREE.Vector3,l,j,i;l=new THREE.TubeGeometry.FrenetFrames(O,N,K);j=l.normals;i=l.binormals;this.tangents=l.tangents;this.normals=j;this.binormals=i;for(l=0;l<E;l++){for(I[l]=[],D=l/(E-1),A=O.getPointAt(D),H=j[l],G=i[l],F=M*J(D),D=0;D<L;D++){C=D/L*2*Math.PI,o=-F*Math.cos(C),C=F*Math.sin(C),B.copy(A),B.x+=o*H.x+C*G.x,B.y+=o*H.y+C*G.y,B.z+=o*H.z+C*G.z,I[l][D]=this.vertices.push(new THREE.Vector3(B.x,B.y,B.z))-1}}for(l=0;l<N;l++){for(D=0;D<L;D++){J=K?(l+1)%N:l+1,E=(D+1)%L,O=I[l][D],M=I[J][D],J=I[J][E],E=I[l][E],B=new THREE.Vector2(l/N,D/L),j=new THREE.Vector2((l+1)/N,D/L),i=new THREE.Vector2((l+1)/N,(D+1)/L),H=new THREE.Vector2(l/N,(D+1)/L),this.faces.push(new THREE.Face3(O,M,E)),this.faceVertexUvs[0].push([B,j,H]),this.faces.push(new THREE.Face3(M,J,E)),this.faceVertexUvs[0].push([j.clone(),i,H.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(b){return 1};THREE.TubeGeometry.SinusoidalTaper=function(b){return Math.sin(Math.PI*b)};THREE.TubeGeometry.FrenetFrames=function(B,A,v){new THREE.Vector3;var u=new THREE.Vector3;new THREE.Vector3;var t=[],s=[],r=[],o=new THREE.Vector3,m=new THREE.Matrix4;A+=1;var l,j,i;this.tangents=t;this.normals=s;this.binormals=r;for(l=0;l<A;l++){j=l/(A-1),t[l]=B.getTangentAt(j),t[l].normalize()}s[0]=new THREE.Vector3;r[0]=new THREE.Vector3;B=Number.MAX_VALUE;l=Math.abs(t[0].x);j=Math.abs(t[0].y);i=Math.abs(t[0].z);l<=B&&(B=l,u.set(1,0,0));j<=B&&(B=j,u.set(0,1,0));i<=B&&u.set(0,0,1);o.crossVectors(t[0],u).normalize();s[0].crossVectors(t[0],o);r[0].crossVectors(t[0],s[0]);for(l=1;l<A;l++){s[l]=s[l-1].clone(),r[l]=r[l-1].clone(),o.crossVectors(t[l-1],t[l]),0.0001<o.length()&&(o.normalize(),u=Math.acos(THREE.Math.clamp(t[l-1].dot(t[l]),-1,1)),s[l].applyMatrix4(m.makeRotationAxis(o,u))),r[l].crossVectors(t[l],s[l])}if(v){for(u=Math.acos(THREE.Math.clamp(s[0].dot(s[A-1]),-1,1)),u/=A-1,0<t[0].dot(o.crossVectors(s[0],s[A-1]))&&(u=-u),l=1;l<A;l++){s[l].applyMatrix4(m.makeRotationAxis(t[l],u*l)),r[l].crossVectors(t[l],s[l])}}};THREE.PolyhedronGeometry=function(I,H,G,F){function E(e){var d=e.normalize().clone();d.index=A.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function D(f,e,h){var g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]);A.faces.push(g);J.copy(f).add(e).add(h).divideScalar(3);g=Math.atan2(J.z,-J.x);A.faceVertexUvs[0].push([B(f.uv,f,g),B(e.uv,e,g),B(h.uv,h,g)])}function C(R,Q){var P=Math.pow(2,Q);Math.pow(4,Q);for(var O=E(A.vertices[R.a]),N=E(A.vertices[R.b]),M=E(A.vertices[R.c]),u=[],t=0;t<=P;t++){u[t]=[];for(var k=E(O.clone().lerp(M,t/P)),f=E(N.clone().lerp(M,t/P)),S=P-t,e=0;e<=S;e++){u[t][e]=0==e&&t==P?k:E(k.clone().lerp(f,e/S))}}for(t=0;t<P;t++){for(e=0;e<2*(P-t)-1;e++){O=Math.floor(e/2),0==e%2?D(u[t][O+1],u[t+1][O],u[t][O]):D(u[t][O+1],u[t+1][O+1],u[t+1][O])}}}function B(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e.clone()}THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:I,indices:H,radius:G,detail:F};G=G||1;F=F||0;for(var A=this,o=0,l=I.length;o<l;o+=3){E(new THREE.Vector3(I[o],I[o+1],I[o+2]))}I=this.vertices;for(var j=[],v=o=0,l=H.length;o<l;o+=3,v++){var K=I[H[o]],L=I[H[o+1]],i=I[H[o+2]];j[v]=new THREE.Face3(K.index,L.index,i.index,[K.clone(),L.clone(),i.clone()])}for(var J=new THREE.Vector3,o=0,l=j.length;o<l;o++){C(j[o],F)}o=0;for(l=this.faceVertexUvs[0].length;o<l;o++){H=this.faceVertexUvs[0][o],F=H[0].x,I=H[1].x,j=H[2].x,v=Math.max(F,Math.max(I,j)),K=Math.min(F,Math.min(I,j)),0.9<v&&0.1>K&&(0.2>F&&(H[0].x+=1),0.2>I&&(H[1].x+=1),0.2>j&&(H[2].x+=1))}o=0;for(l=this.vertices.length;o<l;o++){this.vertices[o].multiplyScalar(G)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,G)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.DodecahedronGeometry=function(f,e){this.parameters={radius:f,detail:e};var h=(1+Math.sqrt(5))/2,g=1/h;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-g,-h,0,-g,h,0,g,-h,0,g,h,-g,-h,0,-g,h,0,g,-h,0,g,h,0,-h,0,-g,h,0,-g,-h,0,g,h,0,g],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],f,e)};THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.IcosahedronGeometry=function(e,d){var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,f,0,1,f,0,-1,-f,0,1,-f,0,0,-1,f,0,1,f,0,-1,-f,0,1,-f,f,0,-1,f,0,1,-f,0,-1,-f,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,d);this.type="IcosahedronGeometry";this.parameters={radius:e,detail:d}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(d,c){this.parameters={radius:d,detail:c};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],d,c);this.type="OctahedronGeometry";this.parameters={radius:d,detail:c}};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],d,c);this.type="TetrahedronGeometry";this.parameters={radius:d,detail:c}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.ParametricGeometry=function(F,E,D){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:F,slices:E,stacks:D};var C=this.vertices,B=this.faces,A=this.faceVertexUvs[0],v,u,r,l,j=E+1;for(v=0;v<=D;v++){for(l=v/D,u=0;u<=E;u++){r=u/E,r=F(r,l),C.push(r)}}var i,o,G,H;for(v=0;v<D;v++){for(u=0;u<E;u++){F=v*j+u,C=v*j+u+1,l=(v+1)*j+u+1,r=(v+1)*j+u,i=new THREE.Vector2(u/E,v/D),o=new THREE.Vector2((u+1)/E,v/D),G=new THREE.Vector2((u+1)/E,(v+1)/D),H=new THREE.Vector2(u/E,(v+1)/D),B.push(new THREE.Face3(F,C,r)),A.push([i,o,H]),B.push(new THREE.Face3(C,l,r)),A.push([o.clone(),G,H.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;THREE.AxisHelper=function(e){e=e||1;var d=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),f=new Float32Array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]);e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.BufferAttribute(d,3));e.addAttribute("color",new THREE.BufferAttribute(f,3));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,e,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;THREE.ArrowHelper=function(){var d=new THREE.Geometry;d.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var c=new THREE.CylinderGeometry(0,0.5,1,5,1);c.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));return function(l,k,j,i,b,a){THREE.Object3D.call(this);void 0===i&&(i=16776960);void 0===j&&(j=1);void 0===b&&(b=0.2*j);void 0===a&&(a=0.2*b);this.position.copy(k);this.line=new THREE.Line(d,new THREE.LineBasicMaterial({color:i}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:i}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(l);this.setLength(j,b,a)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,c;return function(a){0.99999<a.y?this.quaternion.set(0,0,0,1):-0.99999>a.y?this.quaternion.set(1,0,0,0):(d.set(a.z,0,-a.x).normalize(),c=Math.acos(a.y),this.quaternion.setFromAxisAngle(d,c))}}();THREE.ArrowHelper.prototype.setLength=function(e,d,f){void 0===d&&(d=0.2*e);void 0===f&&(f=0.2*d);this.line.scale.set(1,e-d,1);this.line.updateMatrix();this.cone.scale.set(f,d,f);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.set(b);this.cone.material.color.set(b)};THREE.BoxHelper=function(d){var c=new THREE.BufferGeometry;c.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==d&&this.update(d)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;THREE.BoxHelper.prototype.update=function(f){var e=f.geometry;null===e.boundingBox&&e.computeBoundingBox();var h=e.boundingBox.min,e=e.boundingBox.max,g=this.geometry.attributes.position.array;g[0]=e.x;g[1]=e.y;g[2]=e.z;g[3]=h.x;g[4]=e.y;g[5]=e.z;g[6]=h.x;g[7]=e.y;g[8]=e.z;g[9]=h.x;g[10]=h.y;g[11]=e.z;g[12]=h.x;g[13]=h.y;g[14]=e.z;g[15]=e.x;g[16]=h.y;g[17]=e.z;g[18]=e.x;g[19]=h.y;g[20]=e.z;g[21]=e.x;g[22]=e.y;g[23]=e.z;g[24]=e.x;g[25]=e.y;g[26]=h.z;g[27]=h.x;g[28]=e.y;g[29]=h.z;g[30]=h.x;g[31]=e.y;g[32]=h.z;g[33]=h.x;g[34]=h.y;g[35]=h.z;g[36]=h.x;g[37]=h.y;g[38]=h.z;g[39]=e.x;g[40]=h.y;g[41]=h.z;g[42]=e.x;g[43]=h.y;g[44]=h.z;g[45]=e.x;g[46]=e.y;g[47]=h.z;g[48]=e.x;g[49]=e.y;g[50]=e.z;g[51]=e.x;g[52]=e.y;g[53]=h.z;g[54]=h.x;g[55]=e.y;g[56]=e.z;g[57]=h.x;g[58]=e.y;g[59]=h.z;g[60]=h.x;g[61]=h.y;g[62]=e.z;g[63]=h.x;g[64]=h.y;g[65]=h.z;g[66]=e.x;g[67]=h.y;g[68]=e.z;g[69]=e.x;g[70]=h.y;g[71]=h.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrix=f.matrixWorld;this.matrixAutoUpdate=!1};THREE.BoundingBoxHelper=function(e,d){var f=void 0!==d?d:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:f,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(h){function g(e,c,f){l(e,f);l(c,f)}function l(d,c){k.vertices.push(new THREE.Vector3);k.colors.push(new THREE.Color(c));void 0===i[d]&&(i[d]=[]);i[d].push(k.vertices.length-1)}var k=new THREE.Geometry,j=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};g("n1","n2",16755200);g("n2","n4",16755200);g("n4","n3",16755200);g("n3","n1",16755200);g("f1","f2",16755200);g("f2","f4",16755200);g("f4","f3",16755200);g("f3","f1",16755200);g("n1","f1",16755200);g("n2","f2",16755200);g("n3","f3",16755200);g("n4","f4",16755200);g("p","n1",16711680);g("p","n2",16711680);g("p","n3",16711680);g("p","n4",16711680);g("u1","u2",43775);g("u2","u3",43775);g("u3","u1",43775);g("c","t",16777215);g("p","c",3355443);g("cn1","cn2",3355443);g("cn3","cn4",3355443);g("cf1","cf2",3355443);g("cf3","cf4",3355443);THREE.Line.call(this,k,j,THREE.LinePieces);this.camera=h;this.matrix=h.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var g,f,j=new THREE.Vector3,i=new THREE.Camera,h=function(d,c,b,a){j.set(c,b,a).unproject(i);d=f[d];if(void 0!==d){for(c=0,b=d.length;c<b;c++){g.vertices[d[c]].copy(j)}}};return function(){g=this.geometry;f=this.pointMap;i.projectionMatrix.copy(this.camera.projectionMatrix);h("c",0,0,-1);h("t",0,0,1);h("n1",-1,-1,-1);h("n2",1,-1,-1);h("n3",-1,1,-1);h("n4",1,1,-1);h("f1",-1,-1,1);h("f2",1,-1,1);h("f3",-1,1,1);h("f4",1,1,1);h("u1",0.7,1.1,-1);h("u2",-0.7,1.1,-1);h("u3",0,2,-1);h("cf1",-1,0,1);h("cf2",1,0,1);h("cf3",0,-1,1);h("cf4",0,1,1);h("cn1",-1,0,-1);h("cn2",1,0,-1);h("cn3",0,-1,-1);h("cn4",0,1,-1);g.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(f,e){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrix=f.matrixWorld;this.matrixAutoUpdate=!1;e=e||1;var h=new THREE.Geometry;h.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));var g=new THREE.LineBasicMaterial({fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(h,g);this.add(this.lightPlane);h=new THREE.Geometry;h.vertices.push(new THREE.Vector3,new THREE.Vector3);g=new THREE.LineBasicMaterial({fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(h,g);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);d.setFromMatrixPosition(this.light.target.matrixWorld);f.subVectors(d,e);this.lightPlane.lookAt(f);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(f);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(H,G){var F=void 0!==G?G:16777215,E=[0,0],D={},C=function(d,c){return d-c},B=["a","b","c"],A=new THREE.BufferGeometry,v=H.geometry.clone();v.mergeVertices();v.computeFaceNormals();for(var o=v.vertices,v=v.faces,l=0,j=0,u=v.length;j<u;j++){for(var I=v[j],J=0;3>J;J++){E[0]=I[B[J]];E[1]=I[B[(J+1)%3]];E.sort(C);var i=E.toString();void 0===D[i]?(D[i]={vert1:E[0],vert2:E[1],face1:j,face2:void 0},l++):D[i].face2=j}}E=new Float32Array(6*l);C=0;for(i in D){if(B=D[i],void 0===B.face2||0.9999>v[B.face1].normal.dot(v[B.face2].normal)){l=o[B.vert1],E[C++]=l.x,E[C++]=l.y,E[C++]=l.z,l=o[B.vert2],E[C++]=l.x,E[C++]=l.y,E[C++]=l.z}}A.addAttribute("position",new THREE.BufferAttribute(E,3));THREE.Line.call(this,A,new THREE.LineBasicMaterial({color:F}),THREE.LinePieces);this.matrix=H.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;THREE.FaceNormalsHelper=function(g,f,j,i){this.object=g;this.size=void 0!==f?f:1;g=void 0!==j?j:16776960;i=void 0!==i?i:1;f=new THREE.Geometry;j=0;for(var h=this.object.geometry.faces.length;j<h;j++){f.vertices.push(new THREE.Vector3,new THREE.Vector3)}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:g,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;THREE.FaceNormalsHelper.prototype.update=function(){var j=this.geometry.vertices,i=this.object,p=i.geometry.vertices,o=i.geometry.faces,n=i.matrixWorld;i.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(n);for(var m=i=0,l=o.length;i<l;i++,m+=2){var k=o[i];j[m].copy(p[k.a]).add(p[k.b]).add(p[k.c]).divideScalar(3).applyMatrix4(n);j[m+1].copy(k.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(j[m])}this.geometry.verticesNeedUpdate=!0;return this};THREE.GridHelper=function(h,g){var l=new THREE.Geometry,k=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var j=-h;j<=h;j+=g){l.vertices.push(new THREE.Vector3(-h,0,j),new THREE.Vector3(h,0,j),new THREE.Vector3(j,0,-h),new THREE.Vector3(j,0,h));var i=0===j?this.color1:this.color2;l.colors.push(i,i,i,i)}THREE.Line.call(this,l,k,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(d,c){this.color1.set(d);this.color2.set(c);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(f,e,h,g){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrix=f.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];f=new THREE.SphereGeometry(e,4,2);f.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(e=0;8>e;e++){f.faces[e].color=this.colors[4>e?0:1]}e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(f,e);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var b=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(b.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(f,e){this.light=f;this.light.updateMatrixWorld();var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,h,g);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var d=new THREE.Geometry,f=0;f<this.bones.length;f++){this.bones[f].parent instanceof THREE.Bone&&(d.vertices.push(new THREE.Vector3),d.vertices.push(new THREE.Vector3),d.colors.push(new THREE.Color(0,0,1)),d.colors.push(new THREE.Color(0,1,0)))}f=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,d,f,THREE.LinePieces);this.root=e;this.matrix=e.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(e){var d=[];e instanceof THREE.Bone&&d.push(e);for(var f=0;f<e.children.length;f++){d.push.apply(d,this.getBoneList(e.children[f]))}return d};THREE.SkeletonHelper.prototype.update=function(){for(var h=this.geometry,g=(new THREE.Matrix4).getInverse(this.root.matrixWorld),l=new THREE.Matrix4,k=0,j=0;j<this.bones.length;j++){var i=this.bones[j];i.parent instanceof THREE.Bone&&(l.multiplyMatrices(g,i.matrixWorld),h.vertices[k].setFromMatrixPosition(l),l.multiplyMatrices(g,i.parent.matrixWorld),h.vertices[k+1].setFromMatrixPosition(l),k+=2)}h.verticesNeedUpdate=!0;h.computeBoundingSphere()};THREE.SpotLightHelper=function(d){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrix=d.matrixWorld;this.matrixAutoUpdate=!1;d=new THREE.CylinderGeometry(0,1,1,8,1,!0);d.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));d.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(d,c);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){var b=this.light.distance?this.light.distance:10000,a=b*Math.tan(this.light.angle);this.cone.scale.set(a,a,b);d.setFromMatrixPosition(this.light.matrixWorld);c.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(c.sub(d));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:16711680;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexNormals.length;l<k;l++){p.vertices.push(new THREE.Vector3,new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;THREE.VertexNormalsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,s=this.object.matrixWorld,r=0,o=0,j=u.length;o<j;o++){for(var i=u[o],b=0,l=i.vertexNormals.length;b<l;b++){var C=i.vertexNormals[b];A[r].copy(v[i[B[b]]]).applyMatrix4(s);c.copy(C).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);c.add(A[r]);r+=1;A[r].copy(c);r+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:255;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexTangents.length;l<k;l++){p.vertices.push(new THREE.Vector3),p.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper;THREE.VertexTangentsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,s=this.object.matrixWorld,r=0,o=0,j=u.length;o<j;o++){for(var i=u[o],b=0,l=i.vertexTangents.length;b<l;b++){var C=i.vertexTangents[b];A[r].copy(v[i[B[b]]]).applyMatrix4(s);c.copy(C).transformDirection(s).multiplyScalar(this.size);c.add(A[r]);r+=1;A[r].copy(c);r+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(O,N){var M=void 0!==N?N:16777215,L=[0,0],K={},J=function(d,c){return d-c},I=["a","b","c"],H=new THREE.BufferGeometry;if(O.geometry instanceof THREE.Geometry){for(var G=O.geometry.vertices,E=O.geometry.faces,D=0,C=new Uint32Array(6*E.length),F=0,o=E.length;F<o;F++){for(var A=E[F],B=0;3>B;B++){L[0]=A[I[B]];L[1]=A[I[(B+1)%3]];L.sort(J);var l=L.toString();void 0===K[l]&&(C[2*D]=L[0],C[2*D+1]=L[1],K[l]=!0,D++)}}L=new Float32Array(6*D);F=0;for(o=D;F<o;F++){for(B=0;2>B;B++){D=G[C[2*F+B]],I=6*F+3*B,L[I+0]=D.x,L[I+1]=D.y,L[I+2]=D.z}}H.addAttribute("position",new THREE.BufferAttribute(L,3))}else{if(O.geometry instanceof THREE.BufferGeometry){if(void 0!==O.geometry.attributes.index){G=O.geometry.attributes.position.array;o=O.geometry.attributes.index.array;E=O.geometry.drawcalls;D=0;0===E.length&&(E=[{count:o.length,index:0,start:0}]);for(var C=new Uint32Array(2*o.length),A=0,j=E.length;A<j;++A){for(var B=E[A].start,l=E[A].count,I=E[A].index,F=B,i=B+l;F<i;F+=3){for(B=0;3>B;B++){L[0]=I+o[F+B],L[1]=I+o[F+(B+1)%3],L.sort(J),l=L.toString(),void 0===K[l]&&(C[2*D]=L[0],C[2*D+1]=L[1],K[l]=!0,D++)}}}L=new Float32Array(6*D);F=0;for(o=D;F<o;F++){for(B=0;2>B;B++){I=6*F+3*B,D=3*C[2*F+B],L[I+0]=G[D],L[I+1]=G[D+1],L[I+2]=G[D+2]}}}else{for(G=O.geometry.attributes.position.array,D=G.length/3,C=D/3,L=new Float32Array(6*D),F=0,o=C;F<o;F++){for(B=0;3>B;B++){I=18*F+6*B,C=9*F+3*B,L[I+0]=G[C],L[I+1]=G[C+1],L[I+2]=G[C+2],D=9*F+(B+1)%3*3,L[I+3]=G[D],L[I+4]=G[D+1],L[I+5]=G[D+2]}}}H.addAttribute("position",new THREE.BufferAttribute(L,3))}}THREE.Line.call(this,H,new THREE.LineBasicMaterial({color:M}),THREE.LinePieces);this.matrix=O.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(b){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)_?(\d+)/,p,o={},n=this.geometry,m=0,l=n.morphTargets.length;m<l;m++){var j=n.morphTargets[m].name.match(q);if(j&&1<j.length){var i=j[1];o[i]||(o[i]={start:Infinity,end:-Infinity});j=o[i];m<j.start&&(j.start=m);m>j.end&&(j.end=m);p||(p=i)}}for(i in o){j=o[i],this.createAnimation(i,j.start,j.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var h=0,n=this.animationsList.length;h<n;h++){var m=this.animationsList[h];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};